//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_challanout_CountryList", "CountryList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLeyer.EF.CountryList), "challanout", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.challanout), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_challanout_PurchaseEntry", "PurchaseEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLeyer.EF.PurchaseEntry), "challanout", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.challanout), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_challanoutothers_PurchaseEntryotherstab", "PurchaseEntryotherstab", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLeyer.EF.PurchaseEntryotherstab), "challanoutother", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.challanoutother), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_ClientMasterothers_challanoutothers", "challanoutother", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLeyer.EF.challanoutother), "ClientMasterother", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.ClientMasterother), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_ClientMasterothers_PurchaseEntryotherstab", "PurchaseEntryotherstab", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLeyer.EF.PurchaseEntryotherstab), "ClientMasterother", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.ClientMasterother), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_pdffiles_CountryList", "CountryList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLeyer.EF.CountryList), "pdffile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.pdffile), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_PurchaseEntry_CountryList", "CountryList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLeyer.EF.CountryList), "PurchaseEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.PurchaseEntry), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_LostSimData_PurchaseEntry", "PurchaseEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLeyer.EF.PurchaseEntry), "LostSimData", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLeyer.EF.LostSimData), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_Rollsetting_subtab_RoleSettings_Tab", "RoleSettings_Tab", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLeyer.EF.RoleSettings_Tab), "Rollsetting_subtab", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.Rollsetting_subtab), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_BillUpload_ClientMaster", "ClientMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLeyer.EF.ClientMaster), "BillUpload", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.BillUpload), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_ClientMaster_challanout", "challanout", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLeyer.EF.challanout), "ClientMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.ClientMaster), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_ClientMaster_ClientMaster", "CountryList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLeyer.EF.CountryList), "ClientMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.ClientMaster), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_ClientMaster_customerdetailstable", "customerdetailstable", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLeyer.EF.customerdetailstable), "ClientMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.ClientMaster), true)]
[assembly: EdmRelationshipAttribute("inventoryforwebappModel", "FK_NewSimRequest_CountryList", "CountryList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLeyer.EF.CountryList), "NewSimRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLeyer.EF.NewSimRequest), true)]

#endregion

namespace DataAccessLeyer.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class inventoryforwebappEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new inventoryforwebappEntities object using the connection string found in the 'inventoryforwebappEntities' section of the application configuration file.
        /// </summary>
        public inventoryforwebappEntities() : base("name=inventoryforwebappEntities", "inventoryforwebappEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new inventoryforwebappEntities object.
        /// </summary>
        public inventoryforwebappEntities(string connectionString) : base(connectionString, "inventoryforwebappEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new inventoryforwebappEntities object.
        /// </summary>
        public inventoryforwebappEntities(EntityConnection connection) : base(connection, "inventoryforwebappEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddNewTable> AddNewTables
        {
            get
            {
                if ((_AddNewTables == null))
                {
                    _AddNewTables = base.CreateObjectSet<AddNewTable>("AddNewTables");
                }
                return _AddNewTables;
            }
        }
        private ObjectSet<AddNewTable> _AddNewTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ADDTARIF> ADDTARIFs
        {
            get
            {
                if ((_ADDTARIFs == null))
                {
                    _ADDTARIFs = base.CreateObjectSet<ADDTARIF>("ADDTARIFs");
                }
                return _ADDTARIFs;
            }
        }
        private ObjectSet<ADDTARIF> _ADDTARIFs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillUpload> BillUploads
        {
            get
            {
                if ((_BillUploads == null))
                {
                    _BillUploads = base.CreateObjectSet<BillUpload>("BillUploads");
                }
                return _BillUploads;
            }
        }
        private ObjectSet<BillUpload> _BillUploads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChallanIn> ChallanIns
        {
            get
            {
                if ((_ChallanIns == null))
                {
                    _ChallanIns = base.CreateObjectSet<ChallanIn>("ChallanIns");
                }
                return _ChallanIns;
            }
        }
        private ObjectSet<ChallanIn> _ChallanIns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<challanout> challanouts
        {
            get
            {
                if ((_challanouts == null))
                {
                    _challanouts = base.CreateObjectSet<challanout>("challanouts");
                }
                return _challanouts;
            }
        }
        private ObjectSet<challanout> _challanouts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<challanoutcounter> challanoutcounters
        {
            get
            {
                if ((_challanoutcounters == null))
                {
                    _challanoutcounters = base.CreateObjectSet<challanoutcounter>("challanoutcounters");
                }
                return _challanoutcounters;
            }
        }
        private ObjectSet<challanoutcounter> _challanoutcounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<challanoutitemcounter> challanoutitemcounters
        {
            get
            {
                if ((_challanoutitemcounters == null))
                {
                    _challanoutitemcounters = base.CreateObjectSet<challanoutitemcounter>("challanoutitemcounters");
                }
                return _challanoutitemcounters;
            }
        }
        private ObjectSet<challanoutitemcounter> _challanoutitemcounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<challanoutother> challanoutothers
        {
            get
            {
                if ((_challanoutothers == null))
                {
                    _challanoutothers = base.CreateObjectSet<challanoutother>("challanoutothers");
                }
                return _challanoutothers;
            }
        }
        private ObjectSet<challanoutother> _challanoutothers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientMasterother> ClientMasterothers
        {
            get
            {
                if ((_ClientMasterothers == null))
                {
                    _ClientMasterothers = base.CreateObjectSet<ClientMasterother>("ClientMasterothers");
                }
                return _ClientMasterothers;
            }
        }
        private ObjectSet<ClientMasterother> _ClientMasterothers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyProfile> CompanyProfiles
        {
            get
            {
                if ((_CompanyProfiles == null))
                {
                    _CompanyProfiles = base.CreateObjectSet<CompanyProfile>("CompanyProfiles");
                }
                return _CompanyProfiles;
            }
        }
        private ObjectSet<CompanyProfile> _CompanyProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<consigneename> consigneenames
        {
            get
            {
                if ((_consigneenames == null))
                {
                    _consigneenames = base.CreateObjectSet<consigneename>("consigneenames");
                }
                return _consigneenames;
            }
        }
        private ObjectSet<consigneename> _consigneenames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryList> CountryLists
        {
            get
            {
                if ((_CountryLists == null))
                {
                    _CountryLists = base.CreateObjectSet<CountryList>("CountryLists");
                }
                return _CountryLists;
            }
        }
        private ObjectSet<CountryList> _CountryLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<customeraccounter> customeraccounters
        {
            get
            {
                if ((_customeraccounters == null))
                {
                    _customeraccounters = base.CreateObjectSet<customeraccounter>("customeraccounters");
                }
                return _customeraccounters;
            }
        }
        private ObjectSet<customeraccounter> _customeraccounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<customerdetailstable> customerdetailstables
        {
            get
            {
                if ((_customerdetailstables == null))
                {
                    _customerdetailstables = base.CreateObjectSet<customerdetailstable>("customerdetailstables");
                }
                return _customerdetailstables;
            }
        }
        private ObjectSet<customerdetailstable> _customerdetailstables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Executivecounter> Executivecounters
        {
            get
            {
                if ((_Executivecounters == null))
                {
                    _Executivecounters = base.CreateObjectSet<Executivecounter>("Executivecounters");
                }
                return _Executivecounters;
            }
        }
        private ObjectSet<Executivecounter> _Executivecounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LostSimData> LostSimDatas
        {
            get
            {
                if ((_LostSimDatas == null))
                {
                    _LostSimDatas = base.CreateObjectSet<LostSimData>("LostSimDatas");
                }
                return _LostSimDatas;
            }
        }
        private ObjectSet<LostSimData> _LostSimDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<pdffile> pdffiles
        {
            get
            {
                if ((_pdffiles == null))
                {
                    _pdffiles = base.CreateObjectSet<pdffile>("pdffiles");
                }
                return _pdffiles;
            }
        }
        private ObjectSet<pdffile> _pdffiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<prefixsetting> prefixsettings
        {
            get
            {
                if ((_prefixsettings == null))
                {
                    _prefixsettings = base.CreateObjectSet<prefixsetting>("prefixsettings");
                }
                return _prefixsettings;
            }
        }
        private ObjectSet<prefixsetting> _prefixsettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseEntry> PurchaseEntries
        {
            get
            {
                if ((_PurchaseEntries == null))
                {
                    _PurchaseEntries = base.CreateObjectSet<PurchaseEntry>("PurchaseEntries");
                }
                return _PurchaseEntries;
            }
        }
        private ObjectSet<PurchaseEntry> _PurchaseEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Purchaseentrycounter> Purchaseentrycounters
        {
            get
            {
                if ((_Purchaseentrycounters == null))
                {
                    _Purchaseentrycounters = base.CreateObjectSet<Purchaseentrycounter>("Purchaseentrycounters");
                }
                return _Purchaseentrycounters;
            }
        }
        private ObjectSet<Purchaseentrycounter> _Purchaseentrycounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Purchaseentryitemcounter> Purchaseentryitemcounters
        {
            get
            {
                if ((_Purchaseentryitemcounters == null))
                {
                    _Purchaseentryitemcounters = base.CreateObjectSet<Purchaseentryitemcounter>("Purchaseentryitemcounters");
                }
                return _Purchaseentryitemcounters;
            }
        }
        private ObjectSet<Purchaseentryitemcounter> _Purchaseentryitemcounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseEntryotherstab> PurchaseEntryotherstabs
        {
            get
            {
                if ((_PurchaseEntryotherstabs == null))
                {
                    _PurchaseEntryotherstabs = base.CreateObjectSet<PurchaseEntryotherstab>("PurchaseEntryotherstabs");
                }
                return _PurchaseEntryotherstabs;
            }
        }
        private ObjectSet<PurchaseEntryotherstab> _PurchaseEntryotherstabs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleSettings_Tab> RoleSettings_Tab
        {
            get
            {
                if ((_RoleSettings_Tab == null))
                {
                    _RoleSettings_Tab = base.CreateObjectSet<RoleSettings_Tab>("RoleSettings_Tab");
                }
                return _RoleSettings_Tab;
            }
        }
        private ObjectSet<RoleSettings_Tab> _RoleSettings_Tab;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<simreplacementtab> simreplacementtabs
        {
            get
            {
                if ((_simreplacementtabs == null))
                {
                    _simreplacementtabs = base.CreateObjectSet<simreplacementtab>("simreplacementtabs");
                }
                return _simreplacementtabs;
            }
        }
        private ObjectSet<simreplacementtab> _simreplacementtabs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Todolist> Todolists
        {
            get
            {
                if ((_Todolists == null))
                {
                    _Todolists = base.CreateObjectSet<Todolist>("Todolists");
                }
                return _Todolists;
            }
        }
        private ObjectSet<Todolist> _Todolists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User_Name> User_Name
        {
            get
            {
                if ((_User_Name == null))
                {
                    _User_Name = base.CreateObjectSet<User_Name>("User_Name");
                }
                return _User_Name;
            }
        }
        private ObjectSet<User_Name> _User_Name;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<userdetailstable> userdetailstables
        {
            get
            {
                if ((_userdetailstables == null))
                {
                    _userdetailstables = base.CreateObjectSet<userdetailstable>("userdetailstables");
                }
                return _userdetailstables;
            }
        }
        private ObjectSet<userdetailstable> _userdetailstables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vouchertable> vouchertables
        {
            get
            {
                if ((_vouchertables == null))
                {
                    _vouchertables = base.CreateObjectSet<vouchertable>("vouchertables");
                }
                return _vouchertables;
            }
        }
        private ObjectSet<vouchertable> _vouchertables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rollsetting_subtab> Rollsetting_subtab
        {
            get
            {
                if ((_Rollsetting_subtab == null))
                {
                    _Rollsetting_subtab = base.CreateObjectSet<Rollsetting_subtab>("Rollsetting_subtab");
                }
                return _Rollsetting_subtab;
            }
        }
        private ObjectSet<Rollsetting_subtab> _Rollsetting_subtab;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlanTable> PlanTables
        {
            get
            {
                if ((_PlanTables == null))
                {
                    _PlanTables = base.CreateObjectSet<PlanTable>("PlanTables");
                }
                return _PlanTables;
            }
        }
        private ObjectSet<PlanTable> _PlanTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientMaster> ClientMasters
        {
            get
            {
                if ((_ClientMasters == null))
                {
                    _ClientMasters = base.CreateObjectSet<ClientMaster>("ClientMasters");
                }
                return _ClientMasters;
            }
        }
        private ObjectSet<ClientMaster> _ClientMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientmasterTFNO> ClientmasterTFNOes
        {
            get
            {
                if ((_ClientmasterTFNOes == null))
                {
                    _ClientmasterTFNOes = base.CreateObjectSet<ClientmasterTFNO>("ClientmasterTFNOes");
                }
                return _ClientmasterTFNOes;
            }
        }
        private ObjectSet<ClientmasterTFNO> _ClientmasterTFNOes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mobile_topup> mobile_topup
        {
            get
            {
                if ((_mobile_topup == null))
                {
                    _mobile_topup = base.CreateObjectSet<mobile_topup>("mobile_topup");
                }
                return _mobile_topup;
            }
        }
        private ObjectSet<mobile_topup> _mobile_topup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<billexcel> billexcels
        {
            get
            {
                if ((_billexcels == null))
                {
                    _billexcels = base.CreateObjectSet<billexcel>("billexcels");
                }
                return _billexcels;
            }
        }
        private ObjectSet<billexcel> _billexcels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MAILSETTINGTABLE> MAILSETTINGTABLEs
        {
            get
            {
                if ((_MAILSETTINGTABLEs == null))
                {
                    _MAILSETTINGTABLEs = base.CreateObjectSet<MAILSETTINGTABLE>("MAILSETTINGTABLEs");
                }
                return _MAILSETTINGTABLEs;
            }
        }
        private ObjectSet<MAILSETTINGTABLE> _MAILSETTINGTABLEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PROFILE_TABLE> PROFILE_TABLE
        {
            get
            {
                if ((_PROFILE_TABLE == null))
                {
                    _PROFILE_TABLE = base.CreateObjectSet<PROFILE_TABLE>("PROFILE_TABLE");
                }
                return _PROFILE_TABLE;
            }
        }
        private ObjectSet<PROFILE_TABLE> _PROFILE_TABLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NewSimRequest> NewSimRequests
        {
            get
            {
                if ((_NewSimRequests == null))
                {
                    _NewSimRequests = base.CreateObjectSet<NewSimRequest>("NewSimRequests");
                }
                return _NewSimRequests;
            }
        }
        private ObjectSet<NewSimRequest> _NewSimRequests;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddNewTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddNewTables(AddNewTable addNewTable)
        {
            base.AddObject("AddNewTables", addNewTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ADDTARIFs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToADDTARIFs(ADDTARIF aDDTARIF)
        {
            base.AddObject("ADDTARIFs", aDDTARIF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillUploads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillUploads(BillUpload billUpload)
        {
            base.AddObject("BillUploads", billUpload);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChallanIns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChallanIns(ChallanIn challanIn)
        {
            base.AddObject("ChallanIns", challanIn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the challanouts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochallanouts(challanout challanout)
        {
            base.AddObject("challanouts", challanout);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the challanoutcounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochallanoutcounters(challanoutcounter challanoutcounter)
        {
            base.AddObject("challanoutcounters", challanoutcounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the challanoutitemcounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochallanoutitemcounters(challanoutitemcounter challanoutitemcounter)
        {
            base.AddObject("challanoutitemcounters", challanoutitemcounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the challanoutothers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochallanoutothers(challanoutother challanoutother)
        {
            base.AddObject("challanoutothers", challanoutother);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientMasterothers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientMasterothers(ClientMasterother clientMasterother)
        {
            base.AddObject("ClientMasterothers", clientMasterother);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyProfiles(CompanyProfile companyProfile)
        {
            base.AddObject("CompanyProfiles", companyProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the consigneenames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToconsigneenames(consigneename consigneename)
        {
            base.AddObject("consigneenames", consigneename);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryLists(CountryList countryList)
        {
            base.AddObject("CountryLists", countryList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the customeraccounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocustomeraccounters(customeraccounter customeraccounter)
        {
            base.AddObject("customeraccounters", customeraccounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the customerdetailstables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocustomerdetailstables(customerdetailstable customerdetailstable)
        {
            base.AddObject("customerdetailstables", customerdetailstable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Executivecounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExecutivecounters(Executivecounter executivecounter)
        {
            base.AddObject("Executivecounters", executivecounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LostSimDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLostSimDatas(LostSimData lostSimData)
        {
            base.AddObject("LostSimDatas", lostSimData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the pdffiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopdffiles(pdffile pdffile)
        {
            base.AddObject("pdffiles", pdffile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the prefixsettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprefixsettings(prefixsetting prefixsetting)
        {
            base.AddObject("prefixsettings", prefixsetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseEntries(PurchaseEntry purchaseEntry)
        {
            base.AddObject("PurchaseEntries", purchaseEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Purchaseentrycounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseentrycounters(Purchaseentrycounter purchaseentrycounter)
        {
            base.AddObject("Purchaseentrycounters", purchaseentrycounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Purchaseentryitemcounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseentryitemcounters(Purchaseentryitemcounter purchaseentryitemcounter)
        {
            base.AddObject("Purchaseentryitemcounters", purchaseentryitemcounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseEntryotherstabs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseEntryotherstabs(PurchaseEntryotherstab purchaseEntryotherstab)
        {
            base.AddObject("PurchaseEntryotherstabs", purchaseEntryotherstab);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleSettings_Tab EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleSettings_Tab(RoleSettings_Tab roleSettings_Tab)
        {
            base.AddObject("RoleSettings_Tab", roleSettings_Tab);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the simreplacementtabs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosimreplacementtabs(simreplacementtab simreplacementtab)
        {
            base.AddObject("simreplacementtabs", simreplacementtab);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Todolists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTodolists(Todolist todolist)
        {
            base.AddObject("Todolists", todolist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User_Name EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser_Name(User_Name user_Name)
        {
            base.AddObject("User_Name", user_Name);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the userdetailstables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouserdetailstables(userdetailstable userdetailstable)
        {
            base.AddObject("userdetailstables", userdetailstable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vouchertables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovouchertables(vouchertable vouchertable)
        {
            base.AddObject("vouchertables", vouchertable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rollsetting_subtab EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRollsetting_subtab(Rollsetting_subtab rollsetting_subtab)
        {
            base.AddObject("Rollsetting_subtab", rollsetting_subtab);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlanTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlanTables(PlanTable planTable)
        {
            base.AddObject("PlanTables", planTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientMasters(ClientMaster clientMaster)
        {
            base.AddObject("ClientMasters", clientMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientmasterTFNOes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientmasterTFNOes(ClientmasterTFNO clientmasterTFNO)
        {
            base.AddObject("ClientmasterTFNOes", clientmasterTFNO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mobile_topup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomobile_topup(mobile_topup mobile_topup)
        {
            base.AddObject("mobile_topup", mobile_topup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the billexcels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobillexcels(billexcel billexcel)
        {
            base.AddObject("billexcels", billexcel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MAILSETTINGTABLEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMAILSETTINGTABLEs(MAILSETTINGTABLE mAILSETTINGTABLE)
        {
            base.AddObject("MAILSETTINGTABLEs", mAILSETTINGTABLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PROFILE_TABLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPROFILE_TABLE(PROFILE_TABLE pROFILE_TABLE)
        {
            base.AddObject("PROFILE_TABLE", pROFILE_TABLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NewSimRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNewSimRequests(NewSimRequest newSimRequest)
        {
            base.AddObject("NewSimRequests", newSimRequest);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="isdcode">No Metadata Documentation available.</param>
        /// <param name="indcalling">No Metadata Documentation available.</param>
        /// <param name="countrycode">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="impnotice">No Metadata Documentation available.</param>
        /// <param name="impnotic">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int Add_CountryInsert_tab(global::System.String f, global::System.String country, global::System.String isdcode, global::System.String indcalling, global::System.String countrycode, global::System.String currency, global::System.String impnotice, global::System.String impnotic, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("F", f);
            }
            else
            {
                fParameter = new ObjectParameter("F", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter isdcodeParameter;
            if (isdcode != null)
            {
                isdcodeParameter = new ObjectParameter("isdcode", isdcode);
            }
            else
            {
                isdcodeParameter = new ObjectParameter("isdcode", typeof(global::System.String));
            }
    
            ObjectParameter indcallingParameter;
            if (indcalling != null)
            {
                indcallingParameter = new ObjectParameter("indcalling", indcalling);
            }
            else
            {
                indcallingParameter = new ObjectParameter("indcalling", typeof(global::System.String));
            }
    
            ObjectParameter countrycodeParameter;
            if (countrycode != null)
            {
                countrycodeParameter = new ObjectParameter("countrycode", countrycode);
            }
            else
            {
                countrycodeParameter = new ObjectParameter("countrycode", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            ObjectParameter impnoticeParameter;
            if (impnotice != null)
            {
                impnoticeParameter = new ObjectParameter("impnotice", impnotice);
            }
            else
            {
                impnoticeParameter = new ObjectParameter("impnotice", typeof(global::System.String));
            }
    
            ObjectParameter impnoticParameter;
            if (impnotic != null)
            {
                impnoticParameter = new ObjectParameter("impnotic", impnotic);
            }
            else
            {
                impnoticParameter = new ObjectParameter("impnotic", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("Add_CountryInsert_tab", fParameter, countryParameter, isdcodeParameter, indcallingParameter, countrycodeParameter, currencyParameter, impnoticeParameter, impnoticParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="sno">No Metadata Documentation available.</param>
        /// <param name="billNo">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="rangeDate">No Metadata Documentation available.</param>
        /// <param name="itemType">No Metadata Documentation available.</param>
        /// <param name="simNo">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="pUK">No Metadata Documentation available.</param>
        /// <param name="validity">No Metadata Documentation available.</param>
        /// <param name="loginuser">No Metadata Documentation available.</param>
        /// <param name="aloatsimexeccode">No Metadata Documentation available.</param>
        /// <param name="aPN">No Metadata Documentation available.</param>
        /// <param name="phoneNo">No Metadata Documentation available.</param>
        /// <param name="simCode">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="partnername">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int InsertPurchaseEntry_Insert(global::System.String f, Nullable<global::System.Int64> sno, global::System.String billNo, global::System.String date, global::System.String rangeDate, global::System.String itemType, global::System.String simNo, global::System.String country, global::System.String pUK, global::System.String validity, global::System.String loginuser, global::System.String aloatsimexeccode, global::System.String aPN, global::System.String phoneNo, global::System.String simCode, global::System.String status, global::System.String branchcode, global::System.String partnername, global::System.String username, global::System.String password, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter snoParameter;
            if (sno.HasValue)
            {
                snoParameter = new ObjectParameter("sno", sno);
            }
            else
            {
                snoParameter = new ObjectParameter("sno", typeof(global::System.Int64));
            }
    
            ObjectParameter billNoParameter;
            if (billNo != null)
            {
                billNoParameter = new ObjectParameter("BillNo", billNo);
            }
            else
            {
                billNoParameter = new ObjectParameter("BillNo", typeof(global::System.String));
            }
    
            ObjectParameter dateParameter;
            if (date != null)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.String));
            }
    
            ObjectParameter rangeDateParameter;
            if (rangeDate != null)
            {
                rangeDateParameter = new ObjectParameter("rangeDate", rangeDate);
            }
            else
            {
                rangeDateParameter = new ObjectParameter("rangeDate", typeof(global::System.String));
            }
    
            ObjectParameter itemTypeParameter;
            if (itemType != null)
            {
                itemTypeParameter = new ObjectParameter("ItemType", itemType);
            }
            else
            {
                itemTypeParameter = new ObjectParameter("ItemType", typeof(global::System.String));
            }
    
            ObjectParameter simNoParameter;
            if (simNo != null)
            {
                simNoParameter = new ObjectParameter("SimNo", simNo);
            }
            else
            {
                simNoParameter = new ObjectParameter("SimNo", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter pUKParameter;
            if (pUK != null)
            {
                pUKParameter = new ObjectParameter("PUK", pUK);
            }
            else
            {
                pUKParameter = new ObjectParameter("PUK", typeof(global::System.String));
            }
    
            ObjectParameter validityParameter;
            if (validity != null)
            {
                validityParameter = new ObjectParameter("Validity", validity);
            }
            else
            {
                validityParameter = new ObjectParameter("Validity", typeof(global::System.String));
            }
    
            ObjectParameter loginuserParameter;
            if (loginuser != null)
            {
                loginuserParameter = new ObjectParameter("loginuser", loginuser);
            }
            else
            {
                loginuserParameter = new ObjectParameter("loginuser", typeof(global::System.String));
            }
    
            ObjectParameter aloatsimexeccodeParameter;
            if (aloatsimexeccode != null)
            {
                aloatsimexeccodeParameter = new ObjectParameter("aloatsimexeccode", aloatsimexeccode);
            }
            else
            {
                aloatsimexeccodeParameter = new ObjectParameter("aloatsimexeccode", typeof(global::System.String));
            }
    
            ObjectParameter aPNParameter;
            if (aPN != null)
            {
                aPNParameter = new ObjectParameter("APN", aPN);
            }
            else
            {
                aPNParameter = new ObjectParameter("APN", typeof(global::System.String));
            }
    
            ObjectParameter phoneNoParameter;
            if (phoneNo != null)
            {
                phoneNoParameter = new ObjectParameter("PhoneNo", phoneNo);
            }
            else
            {
                phoneNoParameter = new ObjectParameter("PhoneNo", typeof(global::System.String));
            }
    
            ObjectParameter simCodeParameter;
            if (simCode != null)
            {
                simCodeParameter = new ObjectParameter("SimCode", simCode);
            }
            else
            {
                simCodeParameter = new ObjectParameter("SimCode", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter partnernameParameter;
            if (partnername != null)
            {
                partnernameParameter = new ObjectParameter("partnername", partnername);
            }
            else
            {
                partnernameParameter = new ObjectParameter("partnername", typeof(global::System.String));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("InsertPurchaseEntry_Insert", fParameter, snoParameter, billNoParameter, dateParameter, rangeDateParameter, itemTypeParameter, simNoParameter, countryParameter, pUKParameter, validityParameter, loginuserParameter, aloatsimexeccodeParameter, aPNParameter, phoneNoParameter, simCodeParameter, statusParameter, branchcodeParameter, partnernameParameter, usernameParameter, passwordParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="challanno">No Metadata Documentation available.</param>
        /// <param name="cdate">No Metadata Documentation available.</param>
        /// <param name="cdate1">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="itemtype">No Metadata Documentation available.</param>
        /// <param name="others">No Metadata Documentation available.</param>
        /// <param name="execnameto">No Metadata Documentation available.</param>
        /// <param name="loginusercode">No Metadata Documentation available.</param>
        /// <param name="pkchallanid">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="givento">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int pChallanout_insert(global::System.String f, global::System.String challanno, global::System.String cdate, global::System.String cdate1, global::System.String country, global::System.String itemtype, global::System.String others, global::System.String execnameto, global::System.String loginusercode, Nullable<global::System.Int64> pkchallanid, global::System.String branchcode, global::System.String givento, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter challannoParameter;
            if (challanno != null)
            {
                challannoParameter = new ObjectParameter("challanno", challanno);
            }
            else
            {
                challannoParameter = new ObjectParameter("challanno", typeof(global::System.String));
            }
    
            ObjectParameter cdateParameter;
            if (cdate != null)
            {
                cdateParameter = new ObjectParameter("cdate", cdate);
            }
            else
            {
                cdateParameter = new ObjectParameter("cdate", typeof(global::System.String));
            }
    
            ObjectParameter cdate1Parameter;
            if (cdate1 != null)
            {
                cdate1Parameter = new ObjectParameter("cdate1", cdate1);
            }
            else
            {
                cdate1Parameter = new ObjectParameter("cdate1", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            ObjectParameter itemtypeParameter;
            if (itemtype != null)
            {
                itemtypeParameter = new ObjectParameter("itemtype", itemtype);
            }
            else
            {
                itemtypeParameter = new ObjectParameter("itemtype", typeof(global::System.String));
            }
    
            ObjectParameter othersParameter;
            if (others != null)
            {
                othersParameter = new ObjectParameter("others", others);
            }
            else
            {
                othersParameter = new ObjectParameter("others", typeof(global::System.String));
            }
    
            ObjectParameter execnametoParameter;
            if (execnameto != null)
            {
                execnametoParameter = new ObjectParameter("execnameto", execnameto);
            }
            else
            {
                execnametoParameter = new ObjectParameter("execnameto", typeof(global::System.String));
            }
    
            ObjectParameter loginusercodeParameter;
            if (loginusercode != null)
            {
                loginusercodeParameter = new ObjectParameter("loginusercode", loginusercode);
            }
            else
            {
                loginusercodeParameter = new ObjectParameter("loginusercode", typeof(global::System.String));
            }
    
            ObjectParameter pkchallanidParameter;
            if (pkchallanid.HasValue)
            {
                pkchallanidParameter = new ObjectParameter("pkchallanid", pkchallanid);
            }
            else
            {
                pkchallanidParameter = new ObjectParameter("pkchallanid", typeof(global::System.Int64));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter giventoParameter;
            if (givento != null)
            {
                giventoParameter = new ObjectParameter("givento", givento);
            }
            else
            {
                giventoParameter = new ObjectParameter("givento", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("pChallanout_insert", fParameter, challannoParameter, cdateParameter, cdate1Parameter, countryParameter, itemtypeParameter, othersParameter, execnametoParameter, loginusercodeParameter, pkchallanidParameter, branchcodeParameter, giventoParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="clmasterdate">No Metadata Documentation available.</param>
        /// <param name="cafno">No Metadata Documentation available.</param>
        /// <param name="customeracno">No Metadata Documentation available.</param>
        /// <param name="fkchallanoutid">No Metadata Documentation available.</param>
        /// <param name="pdffile">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="fatherName">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="paymentMode">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="bank">No Metadata Documentation available.</param>
        /// <param name="chequeNo">No Metadata Documentation available.</param>
        /// <param name="simNo">No Metadata Documentation available.</param>
        /// <param name="itemType">No Metadata Documentation available.</param>
        /// <param name="plan">No Metadata Documentation available.</param>
        /// <param name="validity">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        /// <param name="endDate">No Metadata Documentation available.</param>
        /// <param name="simReturnDate">No Metadata Documentation available.</param>
        /// <param name="tariffDetail">No Metadata Documentation available.</param>
        /// <param name="executiveName">No Metadata Documentation available.</param>
        /// <param name="executiveCode">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="tfno">No Metadata Documentation available.</param>
        /// <param name="opt">No Metadata Documentation available.</param>
        /// <param name="itemname">No Metadata Documentation available.</param>
        /// <param name="imeino">No Metadata Documentation available.</param>
        /// <param name="amtstatus">No Metadata Documentation available.</param>
        /// <param name="neft">No Metadata Documentation available.</param>
        /// <param name="rEMARK">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int IUDclientmaster(global::System.String f, global::System.String clmasterdate, global::System.String cafno, global::System.String customeracno, Nullable<global::System.Int64> fkchallanoutid, global::System.String pdffile, global::System.String userName, global::System.String fatherName, global::System.String category, global::System.String paymentMode, Nullable<global::System.Decimal> amount, global::System.String bank, global::System.String chequeNo, global::System.String simNo, global::System.String itemType, global::System.String plan, global::System.String validity, global::System.String country, global::System.String startDate, global::System.String endDate, global::System.String simReturnDate, global::System.String tariffDetail, global::System.String executiveName, global::System.String executiveCode, global::System.String branchcode, global::System.String status, global::System.String tfno, global::System.String opt, global::System.String itemname, global::System.String imeino, global::System.String amtstatus, global::System.String neft, global::System.String rEMARK, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter clmasterdateParameter;
            if (clmasterdate != null)
            {
                clmasterdateParameter = new ObjectParameter("clmasterdate", clmasterdate);
            }
            else
            {
                clmasterdateParameter = new ObjectParameter("clmasterdate", typeof(global::System.String));
            }
    
            ObjectParameter cafnoParameter;
            if (cafno != null)
            {
                cafnoParameter = new ObjectParameter("cafno", cafno);
            }
            else
            {
                cafnoParameter = new ObjectParameter("cafno", typeof(global::System.String));
            }
    
            ObjectParameter customeracnoParameter;
            if (customeracno != null)
            {
                customeracnoParameter = new ObjectParameter("customeracno", customeracno);
            }
            else
            {
                customeracnoParameter = new ObjectParameter("customeracno", typeof(global::System.String));
            }
    
            ObjectParameter fkchallanoutidParameter;
            if (fkchallanoutid.HasValue)
            {
                fkchallanoutidParameter = new ObjectParameter("fkchallanoutid", fkchallanoutid);
            }
            else
            {
                fkchallanoutidParameter = new ObjectParameter("fkchallanoutid", typeof(global::System.Int64));
            }
    
            ObjectParameter pdffileParameter;
            if (pdffile != null)
            {
                pdffileParameter = new ObjectParameter("pdffile", pdffile);
            }
            else
            {
                pdffileParameter = new ObjectParameter("pdffile", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter fatherNameParameter;
            if (fatherName != null)
            {
                fatherNameParameter = new ObjectParameter("FatherName", fatherName);
            }
            else
            {
                fatherNameParameter = new ObjectParameter("FatherName", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("Category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("Category", typeof(global::System.String));
            }
    
            ObjectParameter paymentModeParameter;
            if (paymentMode != null)
            {
                paymentModeParameter = new ObjectParameter("PaymentMode", paymentMode);
            }
            else
            {
                paymentModeParameter = new ObjectParameter("PaymentMode", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter bankParameter;
            if (bank != null)
            {
                bankParameter = new ObjectParameter("Bank", bank);
            }
            else
            {
                bankParameter = new ObjectParameter("Bank", typeof(global::System.String));
            }
    
            ObjectParameter chequeNoParameter;
            if (chequeNo != null)
            {
                chequeNoParameter = new ObjectParameter("ChequeNo", chequeNo);
            }
            else
            {
                chequeNoParameter = new ObjectParameter("ChequeNo", typeof(global::System.String));
            }
    
            ObjectParameter simNoParameter;
            if (simNo != null)
            {
                simNoParameter = new ObjectParameter("SimNo", simNo);
            }
            else
            {
                simNoParameter = new ObjectParameter("SimNo", typeof(global::System.String));
            }
    
            ObjectParameter itemTypeParameter;
            if (itemType != null)
            {
                itemTypeParameter = new ObjectParameter("ItemType", itemType);
            }
            else
            {
                itemTypeParameter = new ObjectParameter("ItemType", typeof(global::System.String));
            }
    
            ObjectParameter planParameter;
            if (plan != null)
            {
                planParameter = new ObjectParameter("Plan", plan);
            }
            else
            {
                planParameter = new ObjectParameter("Plan", typeof(global::System.String));
            }
    
            ObjectParameter validityParameter;
            if (validity != null)
            {
                validityParameter = new ObjectParameter("Validity", validity);
            }
            else
            {
                validityParameter = new ObjectParameter("Validity", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter startDateParameter;
            if (startDate != null)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.String));
            }
    
            ObjectParameter endDateParameter;
            if (endDate != null)
            {
                endDateParameter = new ObjectParameter("EndDate", endDate);
            }
            else
            {
                endDateParameter = new ObjectParameter("EndDate", typeof(global::System.String));
            }
    
            ObjectParameter simReturnDateParameter;
            if (simReturnDate != null)
            {
                simReturnDateParameter = new ObjectParameter("SimReturnDate", simReturnDate);
            }
            else
            {
                simReturnDateParameter = new ObjectParameter("SimReturnDate", typeof(global::System.String));
            }
    
            ObjectParameter tariffDetailParameter;
            if (tariffDetail != null)
            {
                tariffDetailParameter = new ObjectParameter("TariffDetail", tariffDetail);
            }
            else
            {
                tariffDetailParameter = new ObjectParameter("TariffDetail", typeof(global::System.String));
            }
    
            ObjectParameter executiveNameParameter;
            if (executiveName != null)
            {
                executiveNameParameter = new ObjectParameter("ExecutiveName", executiveName);
            }
            else
            {
                executiveNameParameter = new ObjectParameter("ExecutiveName", typeof(global::System.String));
            }
    
            ObjectParameter executiveCodeParameter;
            if (executiveCode != null)
            {
                executiveCodeParameter = new ObjectParameter("ExecutiveCode", executiveCode);
            }
            else
            {
                executiveCodeParameter = new ObjectParameter("ExecutiveCode", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            ObjectParameter tfnoParameter;
            if (tfno != null)
            {
                tfnoParameter = new ObjectParameter("tfno", tfno);
            }
            else
            {
                tfnoParameter = new ObjectParameter("tfno", typeof(global::System.String));
            }
    
            ObjectParameter optParameter;
            if (opt != null)
            {
                optParameter = new ObjectParameter("opt", opt);
            }
            else
            {
                optParameter = new ObjectParameter("opt", typeof(global::System.String));
            }
    
            ObjectParameter itemnameParameter;
            if (itemname != null)
            {
                itemnameParameter = new ObjectParameter("itemname", itemname);
            }
            else
            {
                itemnameParameter = new ObjectParameter("itemname", typeof(global::System.String));
            }
    
            ObjectParameter imeinoParameter;
            if (imeino != null)
            {
                imeinoParameter = new ObjectParameter("imeino", imeino);
            }
            else
            {
                imeinoParameter = new ObjectParameter("imeino", typeof(global::System.String));
            }
    
            ObjectParameter amtstatusParameter;
            if (amtstatus != null)
            {
                amtstatusParameter = new ObjectParameter("amtstatus", amtstatus);
            }
            else
            {
                amtstatusParameter = new ObjectParameter("amtstatus", typeof(global::System.String));
            }
    
            ObjectParameter neftParameter;
            if (neft != null)
            {
                neftParameter = new ObjectParameter("neft", neft);
            }
            else
            {
                neftParameter = new ObjectParameter("neft", typeof(global::System.String));
            }
    
            ObjectParameter rEMARKParameter;
            if (rEMARK != null)
            {
                rEMARKParameter = new ObjectParameter("REMARK", rEMARK);
            }
            else
            {
                rEMARKParameter = new ObjectParameter("REMARK", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("IUDclientmaster", fParameter, clmasterdateParameter, cafnoParameter, customeracnoParameter, fkchallanoutidParameter, pdffileParameter, userNameParameter, fatherNameParameter, categoryParameter, paymentModeParameter, amountParameter, bankParameter, chequeNoParameter, simNoParameter, itemTypeParameter, planParameter, validityParameter, countryParameter, startDateParameter, endDateParameter, simReturnDateParameter, tariffDetailParameter, executiveNameParameter, executiveCodeParameter, branchcodeParameter, statusParameter, tfnoParameter, optParameter, itemnameParameter, imeinoParameter, amtstatusParameter, neftParameter, rEMARKParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="clmasterdate">No Metadata Documentation available.</param>
        /// <param name="cafno">No Metadata Documentation available.</param>
        /// <param name="customeracno">No Metadata Documentation available.</param>
        /// <param name="fkchallanoutid">No Metadata Documentation available.</param>
        /// <param name="pdffile">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="fatherName">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="paymentMode">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="bank">No Metadata Documentation available.</param>
        /// <param name="chequeNo">No Metadata Documentation available.</param>
        /// <param name="simNo">No Metadata Documentation available.</param>
        /// <param name="itemType">No Metadata Documentation available.</param>
        /// <param name="plan">No Metadata Documentation available.</param>
        /// <param name="validity">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        /// <param name="endDate">No Metadata Documentation available.</param>
        /// <param name="simReturnDate">No Metadata Documentation available.</param>
        /// <param name="tariffDetail">No Metadata Documentation available.</param>
        /// <param name="executiveName">No Metadata Documentation available.</param>
        /// <param name="executiveCode">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="tfno">No Metadata Documentation available.</param>
        /// <param name="opt">No Metadata Documentation available.</param>
        /// <param name="itemname">No Metadata Documentation available.</param>
        /// <param name="imeino">No Metadata Documentation available.</param>
        /// <param name="amtstatus">No Metadata Documentation available.</param>
        /// <param name="neft">No Metadata Documentation available.</param>
        /// <param name="rEMARK">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int IUDclientmaster_Insert(global::System.String f, global::System.String clmasterdate, global::System.String cafno, global::System.String customeracno, Nullable<global::System.Int64> fkchallanoutid, global::System.String pdffile, global::System.String userName, global::System.String fatherName, global::System.String category, global::System.String paymentMode, Nullable<global::System.Decimal> amount, global::System.String bank, global::System.String chequeNo, global::System.String simNo, global::System.String itemType, global::System.String plan, global::System.String validity, global::System.String country, global::System.String startDate, global::System.String endDate, global::System.String simReturnDate, global::System.String tariffDetail, global::System.String executiveName, global::System.String executiveCode, global::System.String branchcode, global::System.String status, global::System.String tfno, global::System.String opt, global::System.String itemname, global::System.String imeino, global::System.String amtstatus, global::System.String neft, global::System.String rEMARK, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter clmasterdateParameter;
            if (clmasterdate != null)
            {
                clmasterdateParameter = new ObjectParameter("clmasterdate", clmasterdate);
            }
            else
            {
                clmasterdateParameter = new ObjectParameter("clmasterdate", typeof(global::System.String));
            }
    
            ObjectParameter cafnoParameter;
            if (cafno != null)
            {
                cafnoParameter = new ObjectParameter("cafno", cafno);
            }
            else
            {
                cafnoParameter = new ObjectParameter("cafno", typeof(global::System.String));
            }
    
            ObjectParameter customeracnoParameter;
            if (customeracno != null)
            {
                customeracnoParameter = new ObjectParameter("customeracno", customeracno);
            }
            else
            {
                customeracnoParameter = new ObjectParameter("customeracno", typeof(global::System.String));
            }
    
            ObjectParameter fkchallanoutidParameter;
            if (fkchallanoutid.HasValue)
            {
                fkchallanoutidParameter = new ObjectParameter("fkchallanoutid", fkchallanoutid);
            }
            else
            {
                fkchallanoutidParameter = new ObjectParameter("fkchallanoutid", typeof(global::System.Int64));
            }
    
            ObjectParameter pdffileParameter;
            if (pdffile != null)
            {
                pdffileParameter = new ObjectParameter("pdffile", pdffile);
            }
            else
            {
                pdffileParameter = new ObjectParameter("pdffile", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter fatherNameParameter;
            if (fatherName != null)
            {
                fatherNameParameter = new ObjectParameter("FatherName", fatherName);
            }
            else
            {
                fatherNameParameter = new ObjectParameter("FatherName", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("Category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("Category", typeof(global::System.String));
            }
    
            ObjectParameter paymentModeParameter;
            if (paymentMode != null)
            {
                paymentModeParameter = new ObjectParameter("PaymentMode", paymentMode);
            }
            else
            {
                paymentModeParameter = new ObjectParameter("PaymentMode", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter bankParameter;
            if (bank != null)
            {
                bankParameter = new ObjectParameter("Bank", bank);
            }
            else
            {
                bankParameter = new ObjectParameter("Bank", typeof(global::System.String));
            }
    
            ObjectParameter chequeNoParameter;
            if (chequeNo != null)
            {
                chequeNoParameter = new ObjectParameter("ChequeNo", chequeNo);
            }
            else
            {
                chequeNoParameter = new ObjectParameter("ChequeNo", typeof(global::System.String));
            }
    
            ObjectParameter simNoParameter;
            if (simNo != null)
            {
                simNoParameter = new ObjectParameter("SimNo", simNo);
            }
            else
            {
                simNoParameter = new ObjectParameter("SimNo", typeof(global::System.String));
            }
    
            ObjectParameter itemTypeParameter;
            if (itemType != null)
            {
                itemTypeParameter = new ObjectParameter("ItemType", itemType);
            }
            else
            {
                itemTypeParameter = new ObjectParameter("ItemType", typeof(global::System.String));
            }
    
            ObjectParameter planParameter;
            if (plan != null)
            {
                planParameter = new ObjectParameter("Plan", plan);
            }
            else
            {
                planParameter = new ObjectParameter("Plan", typeof(global::System.String));
            }
    
            ObjectParameter validityParameter;
            if (validity != null)
            {
                validityParameter = new ObjectParameter("Validity", validity);
            }
            else
            {
                validityParameter = new ObjectParameter("Validity", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter startDateParameter;
            if (startDate != null)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.String));
            }
    
            ObjectParameter endDateParameter;
            if (endDate != null)
            {
                endDateParameter = new ObjectParameter("EndDate", endDate);
            }
            else
            {
                endDateParameter = new ObjectParameter("EndDate", typeof(global::System.String));
            }
    
            ObjectParameter simReturnDateParameter;
            if (simReturnDate != null)
            {
                simReturnDateParameter = new ObjectParameter("SimReturnDate", simReturnDate);
            }
            else
            {
                simReturnDateParameter = new ObjectParameter("SimReturnDate", typeof(global::System.String));
            }
    
            ObjectParameter tariffDetailParameter;
            if (tariffDetail != null)
            {
                tariffDetailParameter = new ObjectParameter("TariffDetail", tariffDetail);
            }
            else
            {
                tariffDetailParameter = new ObjectParameter("TariffDetail", typeof(global::System.String));
            }
    
            ObjectParameter executiveNameParameter;
            if (executiveName != null)
            {
                executiveNameParameter = new ObjectParameter("ExecutiveName", executiveName);
            }
            else
            {
                executiveNameParameter = new ObjectParameter("ExecutiveName", typeof(global::System.String));
            }
    
            ObjectParameter executiveCodeParameter;
            if (executiveCode != null)
            {
                executiveCodeParameter = new ObjectParameter("ExecutiveCode", executiveCode);
            }
            else
            {
                executiveCodeParameter = new ObjectParameter("ExecutiveCode", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            ObjectParameter tfnoParameter;
            if (tfno != null)
            {
                tfnoParameter = new ObjectParameter("tfno", tfno);
            }
            else
            {
                tfnoParameter = new ObjectParameter("tfno", typeof(global::System.String));
            }
    
            ObjectParameter optParameter;
            if (opt != null)
            {
                optParameter = new ObjectParameter("opt", opt);
            }
            else
            {
                optParameter = new ObjectParameter("opt", typeof(global::System.String));
            }
    
            ObjectParameter itemnameParameter;
            if (itemname != null)
            {
                itemnameParameter = new ObjectParameter("itemname", itemname);
            }
            else
            {
                itemnameParameter = new ObjectParameter("itemname", typeof(global::System.String));
            }
    
            ObjectParameter imeinoParameter;
            if (imeino != null)
            {
                imeinoParameter = new ObjectParameter("imeino", imeino);
            }
            else
            {
                imeinoParameter = new ObjectParameter("imeino", typeof(global::System.String));
            }
    
            ObjectParameter amtstatusParameter;
            if (amtstatus != null)
            {
                amtstatusParameter = new ObjectParameter("amtstatus", amtstatus);
            }
            else
            {
                amtstatusParameter = new ObjectParameter("amtstatus", typeof(global::System.String));
            }
    
            ObjectParameter neftParameter;
            if (neft != null)
            {
                neftParameter = new ObjectParameter("neft", neft);
            }
            else
            {
                neftParameter = new ObjectParameter("neft", typeof(global::System.String));
            }
    
            ObjectParameter rEMARKParameter;
            if (rEMARK != null)
            {
                rEMARKParameter = new ObjectParameter("REMARK", rEMARK);
            }
            else
            {
                rEMARKParameter = new ObjectParameter("REMARK", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("IUDclientmaster_Insert", fParameter, clmasterdateParameter, cafnoParameter, customeracnoParameter, fkchallanoutidParameter, pdffileParameter, userNameParameter, fatherNameParameter, categoryParameter, paymentModeParameter, amountParameter, bankParameter, chequeNoParameter, simNoParameter, itemTypeParameter, planParameter, validityParameter, countryParameter, startDateParameter, endDateParameter, simReturnDateParameter, tariffDetailParameter, executiveNameParameter, executiveCodeParameter, branchcodeParameter, statusParameter, tfnoParameter, optParameter, itemnameParameter, imeinoParameter, amtstatusParameter, neftParameter, rEMARKParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="partnername">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="usertype">No Metadata Documentation available.</param>
        /// <param name="uname">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="newpassword">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="mobileno">No Metadata Documentation available.</param>
        /// <param name="emailid">No Metadata Documentation available.</param>
        /// <param name="rolesetting">No Metadata Documentation available.</param>
        /// <param name="valueassign">No Metadata Documentation available.</param>
        /// <param name="updatedata">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int UserNameInsert(global::System.String f, global::System.String date, global::System.String branchcode, global::System.String partnername, global::System.String usercode, global::System.String usertype, global::System.String uname, global::System.String password, global::System.String newpassword, global::System.String address, global::System.String mobileno, global::System.String emailid, global::System.String rolesetting, global::System.String valueassign, global::System.String updatedata, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter dateParameter;
            if (date != null)
            {
                dateParameter = new ObjectParameter("date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("date", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter partnernameParameter;
            if (partnername != null)
            {
                partnernameParameter = new ObjectParameter("Partnername", partnername);
            }
            else
            {
                partnernameParameter = new ObjectParameter("Partnername", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            ObjectParameter usertypeParameter;
            if (usertype != null)
            {
                usertypeParameter = new ObjectParameter("usertype", usertype);
            }
            else
            {
                usertypeParameter = new ObjectParameter("usertype", typeof(global::System.String));
            }
    
            ObjectParameter unameParameter;
            if (uname != null)
            {
                unameParameter = new ObjectParameter("uname", uname);
            }
            else
            {
                unameParameter = new ObjectParameter("uname", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter newpasswordParameter;
            if (newpassword != null)
            {
                newpasswordParameter = new ObjectParameter("newpassword", newpassword);
            }
            else
            {
                newpasswordParameter = new ObjectParameter("newpassword", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter mobilenoParameter;
            if (mobileno != null)
            {
                mobilenoParameter = new ObjectParameter("mobileno", mobileno);
            }
            else
            {
                mobilenoParameter = new ObjectParameter("mobileno", typeof(global::System.String));
            }
    
            ObjectParameter emailidParameter;
            if (emailid != null)
            {
                emailidParameter = new ObjectParameter("emailid", emailid);
            }
            else
            {
                emailidParameter = new ObjectParameter("emailid", typeof(global::System.String));
            }
    
            ObjectParameter rolesettingParameter;
            if (rolesetting != null)
            {
                rolesettingParameter = new ObjectParameter("rolesetting", rolesetting);
            }
            else
            {
                rolesettingParameter = new ObjectParameter("rolesetting", typeof(global::System.String));
            }
    
            ObjectParameter valueassignParameter;
            if (valueassign != null)
            {
                valueassignParameter = new ObjectParameter("valueassign", valueassign);
            }
            else
            {
                valueassignParameter = new ObjectParameter("valueassign", typeof(global::System.String));
            }
    
            ObjectParameter updatedataParameter;
            if (updatedata != null)
            {
                updatedataParameter = new ObjectParameter("updatedata", updatedata);
            }
            else
            {
                updatedataParameter = new ObjectParameter("updatedata", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UserNameInsert", fParameter, dateParameter, branchcodeParameter, partnernameParameter, usercodeParameter, usertypeParameter, unameParameter, passwordParameter, newpasswordParameter, addressParameter, mobilenoParameter, emailidParameter, rolesettingParameter, valueassignParameter, updatedataParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="cmpid">No Metadata Documentation available.</param>
        /// <param name="companyName">No Metadata Documentation available.</param>
        /// <param name="companyName1">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="managingDirector">No Metadata Documentation available.</param>
        /// <param name="contactNo">No Metadata Documentation available.</param>
        /// <param name="custSupportNo">No Metadata Documentation available.</param>
        /// <param name="punchLine">No Metadata Documentation available.</param>
        /// <param name="emailID">No Metadata Documentation available.</param>
        /// <param name="webSite">No Metadata Documentation available.</param>
        /// <param name="bankdetail">No Metadata Documentation available.</param>
        /// <param name="panno">No Metadata Documentation available.</param>
        /// <param name="servicetax">No Metadata Documentation available.</param>
        /// <param name="loginusercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int InsertCompanyProfile_Insert(global::System.String f, Nullable<global::System.Int64> cmpid, global::System.String companyName, global::System.String companyName1, global::System.String address, global::System.String managingDirector, global::System.String contactNo, global::System.String custSupportNo, global::System.String punchLine, global::System.String emailID, global::System.String webSite, global::System.String bankdetail, global::System.String panno, global::System.String servicetax, global::System.String loginusercode, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter cmpidParameter;
            if (cmpid.HasValue)
            {
                cmpidParameter = new ObjectParameter("cmpid", cmpid);
            }
            else
            {
                cmpidParameter = new ObjectParameter("cmpid", typeof(global::System.Int64));
            }
    
            ObjectParameter companyNameParameter;
            if (companyName != null)
            {
                companyNameParameter = new ObjectParameter("CompanyName", companyName);
            }
            else
            {
                companyNameParameter = new ObjectParameter("CompanyName", typeof(global::System.String));
            }
    
            ObjectParameter companyName1Parameter;
            if (companyName1 != null)
            {
                companyName1Parameter = new ObjectParameter("CompanyName1", companyName1);
            }
            else
            {
                companyName1Parameter = new ObjectParameter("CompanyName1", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("Address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("Address", typeof(global::System.String));
            }
    
            ObjectParameter managingDirectorParameter;
            if (managingDirector != null)
            {
                managingDirectorParameter = new ObjectParameter("ManagingDirector", managingDirector);
            }
            else
            {
                managingDirectorParameter = new ObjectParameter("ManagingDirector", typeof(global::System.String));
            }
    
            ObjectParameter contactNoParameter;
            if (contactNo != null)
            {
                contactNoParameter = new ObjectParameter("ContactNo", contactNo);
            }
            else
            {
                contactNoParameter = new ObjectParameter("ContactNo", typeof(global::System.String));
            }
    
            ObjectParameter custSupportNoParameter;
            if (custSupportNo != null)
            {
                custSupportNoParameter = new ObjectParameter("CustSupportNo", custSupportNo);
            }
            else
            {
                custSupportNoParameter = new ObjectParameter("CustSupportNo", typeof(global::System.String));
            }
    
            ObjectParameter punchLineParameter;
            if (punchLine != null)
            {
                punchLineParameter = new ObjectParameter("PunchLine", punchLine);
            }
            else
            {
                punchLineParameter = new ObjectParameter("PunchLine", typeof(global::System.String));
            }
    
            ObjectParameter emailIDParameter;
            if (emailID != null)
            {
                emailIDParameter = new ObjectParameter("EmailID", emailID);
            }
            else
            {
                emailIDParameter = new ObjectParameter("EmailID", typeof(global::System.String));
            }
    
            ObjectParameter webSiteParameter;
            if (webSite != null)
            {
                webSiteParameter = new ObjectParameter("WebSite", webSite);
            }
            else
            {
                webSiteParameter = new ObjectParameter("WebSite", typeof(global::System.String));
            }
    
            ObjectParameter bankdetailParameter;
            if (bankdetail != null)
            {
                bankdetailParameter = new ObjectParameter("bankdetail", bankdetail);
            }
            else
            {
                bankdetailParameter = new ObjectParameter("bankdetail", typeof(global::System.String));
            }
    
            ObjectParameter pannoParameter;
            if (panno != null)
            {
                pannoParameter = new ObjectParameter("panno", panno);
            }
            else
            {
                pannoParameter = new ObjectParameter("panno", typeof(global::System.String));
            }
    
            ObjectParameter servicetaxParameter;
            if (servicetax != null)
            {
                servicetaxParameter = new ObjectParameter("servicetax", servicetax);
            }
            else
            {
                servicetaxParameter = new ObjectParameter("servicetax", typeof(global::System.String));
            }
    
            ObjectParameter loginusercodeParameter;
            if (loginusercode != null)
            {
                loginusercodeParameter = new ObjectParameter("loginusercode", loginusercode);
            }
            else
            {
                loginusercodeParameter = new ObjectParameter("loginusercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("InsertCompanyProfile_Insert", fParameter, cmpidParameter, companyNameParameter, companyName1Parameter, addressParameter, managingDirectorParameter, contactNoParameter, custSupportNoParameter, punchLineParameter, emailIDParameter, webSiteParameter, bankdetailParameter, pannoParameter, servicetaxParameter, loginusercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="customerdetailstableid">No Metadata Documentation available.</param>
        /// <param name="customeracno">No Metadata Documentation available.</param>
        /// <param name="customername">No Metadata Documentation available.</param>
        /// <param name="customeraddress">No Metadata Documentation available.</param>
        /// <param name="emailid">No Metadata Documentation available.</param>
        /// <param name="website">No Metadata Documentation available.</param>
        /// <param name="passportno">No Metadata Documentation available.</param>
        /// <param name="mobileno">No Metadata Documentation available.</param>
        /// <param name="alternateno">No Metadata Documentation available.</param>
        /// <param name="loginusercode">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int customerdetailstableproc_Insert(global::System.String f, Nullable<global::System.Int64> customerdetailstableid, global::System.String customeracno, global::System.String customername, global::System.String customeraddress, global::System.String emailid, global::System.String website, global::System.String passportno, global::System.String mobileno, global::System.String alternateno, global::System.String loginusercode, global::System.String branchcode, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter customerdetailstableidParameter;
            if (customerdetailstableid.HasValue)
            {
                customerdetailstableidParameter = new ObjectParameter("customerdetailstableid", customerdetailstableid);
            }
            else
            {
                customerdetailstableidParameter = new ObjectParameter("customerdetailstableid", typeof(global::System.Int64));
            }
    
            ObjectParameter customeracnoParameter;
            if (customeracno != null)
            {
                customeracnoParameter = new ObjectParameter("customeracno", customeracno);
            }
            else
            {
                customeracnoParameter = new ObjectParameter("customeracno", typeof(global::System.String));
            }
    
            ObjectParameter customernameParameter;
            if (customername != null)
            {
                customernameParameter = new ObjectParameter("customername", customername);
            }
            else
            {
                customernameParameter = new ObjectParameter("customername", typeof(global::System.String));
            }
    
            ObjectParameter customeraddressParameter;
            if (customeraddress != null)
            {
                customeraddressParameter = new ObjectParameter("customeraddress", customeraddress);
            }
            else
            {
                customeraddressParameter = new ObjectParameter("customeraddress", typeof(global::System.String));
            }
    
            ObjectParameter emailidParameter;
            if (emailid != null)
            {
                emailidParameter = new ObjectParameter("emailid", emailid);
            }
            else
            {
                emailidParameter = new ObjectParameter("emailid", typeof(global::System.String));
            }
    
            ObjectParameter websiteParameter;
            if (website != null)
            {
                websiteParameter = new ObjectParameter("website", website);
            }
            else
            {
                websiteParameter = new ObjectParameter("website", typeof(global::System.String));
            }
    
            ObjectParameter passportnoParameter;
            if (passportno != null)
            {
                passportnoParameter = new ObjectParameter("passportno", passportno);
            }
            else
            {
                passportnoParameter = new ObjectParameter("passportno", typeof(global::System.String));
            }
    
            ObjectParameter mobilenoParameter;
            if (mobileno != null)
            {
                mobilenoParameter = new ObjectParameter("mobileno", mobileno);
            }
            else
            {
                mobilenoParameter = new ObjectParameter("mobileno", typeof(global::System.String));
            }
    
            ObjectParameter alternatenoParameter;
            if (alternateno != null)
            {
                alternatenoParameter = new ObjectParameter("alternateno", alternateno);
            }
            else
            {
                alternatenoParameter = new ObjectParameter("alternateno", typeof(global::System.String));
            }
    
            ObjectParameter loginusercodeParameter;
            if (loginusercode != null)
            {
                loginusercodeParameter = new ObjectParameter("loginusercode", loginusercode);
            }
            else
            {
                loginusercodeParameter = new ObjectParameter("loginusercode", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("customerdetailstableproc_Insert", fParameter, customerdetailstableidParameter, customeracnoParameter, customernameParameter, customeraddressParameter, emailidParameter, websiteParameter, passportnoParameter, mobilenoParameter, alternatenoParameter, loginusercodeParameter, branchcodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="sno">No Metadata Documentation available.</param>
        /// <param name="billNo">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="itemType">No Metadata Documentation available.</param>
        /// <param name="itemname">No Metadata Documentation available.</param>
        /// <param name="loginusercode">No Metadata Documentation available.</param>
        /// <param name="simAlotexeccode">No Metadata Documentation available.</param>
        /// <param name="iMEINO">No Metadata Documentation available.</param>
        /// <param name="validity">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="partnername">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int PurchaseEntryotherstabproc_Insert(global::System.String f, Nullable<global::System.Int64> sno, global::System.String billNo, global::System.String date, global::System.String itemType, global::System.String itemname, global::System.String loginusercode, global::System.String simAlotexeccode, global::System.String iMEINO, global::System.String validity, global::System.String country, global::System.String branchcode, global::System.String partnername, global::System.String status, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter snoParameter;
            if (sno.HasValue)
            {
                snoParameter = new ObjectParameter("sno", sno);
            }
            else
            {
                snoParameter = new ObjectParameter("sno", typeof(global::System.Int64));
            }
    
            ObjectParameter billNoParameter;
            if (billNo != null)
            {
                billNoParameter = new ObjectParameter("BillNo", billNo);
            }
            else
            {
                billNoParameter = new ObjectParameter("BillNo", typeof(global::System.String));
            }
    
            ObjectParameter dateParameter;
            if (date != null)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.String));
            }
    
            ObjectParameter itemTypeParameter;
            if (itemType != null)
            {
                itemTypeParameter = new ObjectParameter("ItemType", itemType);
            }
            else
            {
                itemTypeParameter = new ObjectParameter("ItemType", typeof(global::System.String));
            }
    
            ObjectParameter itemnameParameter;
            if (itemname != null)
            {
                itemnameParameter = new ObjectParameter("itemname", itemname);
            }
            else
            {
                itemnameParameter = new ObjectParameter("itemname", typeof(global::System.String));
            }
    
            ObjectParameter loginusercodeParameter;
            if (loginusercode != null)
            {
                loginusercodeParameter = new ObjectParameter("loginusercode", loginusercode);
            }
            else
            {
                loginusercodeParameter = new ObjectParameter("loginusercode", typeof(global::System.String));
            }
    
            ObjectParameter simAlotexeccodeParameter;
            if (simAlotexeccode != null)
            {
                simAlotexeccodeParameter = new ObjectParameter("SimAlotexeccode", simAlotexeccode);
            }
            else
            {
                simAlotexeccodeParameter = new ObjectParameter("SimAlotexeccode", typeof(global::System.String));
            }
    
            ObjectParameter iMEINOParameter;
            if (iMEINO != null)
            {
                iMEINOParameter = new ObjectParameter("IMEINO", iMEINO);
            }
            else
            {
                iMEINOParameter = new ObjectParameter("IMEINO", typeof(global::System.String));
            }
    
            ObjectParameter validityParameter;
            if (validity != null)
            {
                validityParameter = new ObjectParameter("validity", validity);
            }
            else
            {
                validityParameter = new ObjectParameter("validity", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter partnernameParameter;
            if (partnername != null)
            {
                partnernameParameter = new ObjectParameter("partnername", partnername);
            }
            else
            {
                partnernameParameter = new ObjectParameter("partnername", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("PurchaseEntryotherstabproc_Insert", fParameter, snoParameter, billNoParameter, dateParameter, itemTypeParameter, itemnameParameter, loginusercodeParameter, simAlotexeccodeParameter, iMEINOParameter, validityParameter, countryParameter, branchcodeParameter, partnernameParameter, statusParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="challanno">No Metadata Documentation available.</param>
        /// <param name="cdate">No Metadata Documentation available.</param>
        /// <param name="sno">No Metadata Documentation available.</param>
        /// <param name="itemtype">No Metadata Documentation available.</param>
        /// <param name="itemname">No Metadata Documentation available.</param>
        /// <param name="imeino">No Metadata Documentation available.</param>
        /// <param name="executivenameto">No Metadata Documentation available.</param>
        /// <param name="executivename">No Metadata Documentation available.</param>
        /// <param name="pkchallanid">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="partnername">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int challanoutothersproc_Insert(global::System.String f, global::System.String challanno, global::System.String cdate, global::System.String sno, global::System.String itemtype, global::System.String itemname, global::System.String imeino, global::System.String executivenameto, global::System.String executivename, Nullable<global::System.Int64> pkchallanid, global::System.String branchcode, global::System.String partnername, global::System.String status, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter challannoParameter;
            if (challanno != null)
            {
                challannoParameter = new ObjectParameter("challanno", challanno);
            }
            else
            {
                challannoParameter = new ObjectParameter("challanno", typeof(global::System.String));
            }
    
            ObjectParameter cdateParameter;
            if (cdate != null)
            {
                cdateParameter = new ObjectParameter("cdate", cdate);
            }
            else
            {
                cdateParameter = new ObjectParameter("cdate", typeof(global::System.String));
            }
    
            ObjectParameter snoParameter;
            if (sno != null)
            {
                snoParameter = new ObjectParameter("sno", sno);
            }
            else
            {
                snoParameter = new ObjectParameter("sno", typeof(global::System.String));
            }
    
            ObjectParameter itemtypeParameter;
            if (itemtype != null)
            {
                itemtypeParameter = new ObjectParameter("itemtype", itemtype);
            }
            else
            {
                itemtypeParameter = new ObjectParameter("itemtype", typeof(global::System.String));
            }
    
            ObjectParameter itemnameParameter;
            if (itemname != null)
            {
                itemnameParameter = new ObjectParameter("itemname", itemname);
            }
            else
            {
                itemnameParameter = new ObjectParameter("itemname", typeof(global::System.String));
            }
    
            ObjectParameter imeinoParameter;
            if (imeino != null)
            {
                imeinoParameter = new ObjectParameter("Imeino", imeino);
            }
            else
            {
                imeinoParameter = new ObjectParameter("Imeino", typeof(global::System.String));
            }
    
            ObjectParameter executivenametoParameter;
            if (executivenameto != null)
            {
                executivenametoParameter = new ObjectParameter("executivenameto", executivenameto);
            }
            else
            {
                executivenametoParameter = new ObjectParameter("executivenameto", typeof(global::System.String));
            }
    
            ObjectParameter executivenameParameter;
            if (executivename != null)
            {
                executivenameParameter = new ObjectParameter("executivename", executivename);
            }
            else
            {
                executivenameParameter = new ObjectParameter("executivename", typeof(global::System.String));
            }
    
            ObjectParameter pkchallanidParameter;
            if (pkchallanid.HasValue)
            {
                pkchallanidParameter = new ObjectParameter("pkchallanid", pkchallanid);
            }
            else
            {
                pkchallanidParameter = new ObjectParameter("pkchallanid", typeof(global::System.Int64));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter partnernameParameter;
            if (partnername != null)
            {
                partnernameParameter = new ObjectParameter("partnername", partnername);
            }
            else
            {
                partnernameParameter = new ObjectParameter("partnername", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("challanoutothersproc_Insert", fParameter, challannoParameter, cdateParameter, snoParameter, itemtypeParameter, itemnameParameter, imeinoParameter, executivenametoParameter, executivenameParameter, pkchallanidParameter, branchcodeParameter, partnernameParameter, statusParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="simno">No Metadata Documentation available.</param>
        /// <param name="userType">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        public ObjectResult<SimWiseSearch_Data_Result> SimWiseSearch_Data(global::System.String simno, global::System.String userType, global::System.String branchcode, global::System.String usercode)
        {
            ObjectParameter simnoParameter;
            if (simno != null)
            {
                simnoParameter = new ObjectParameter("simno", simno);
            }
            else
            {
                simnoParameter = new ObjectParameter("simno", typeof(global::System.String));
            }
    
            ObjectParameter userTypeParameter;
            if (userType != null)
            {
                userTypeParameter = new ObjectParameter("UserType", userType);
            }
            else
            {
                userTypeParameter = new ObjectParameter("UserType", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("Usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("Usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SimWiseSearch_Data_Result>("SimWiseSearch_Data", simnoParameter, userTypeParameter, branchcodeParameter, usercodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="cafno">No Metadata Documentation available.</param>
        /// <param name="customeracno">No Metadata Documentation available.</param>
        /// <param name="fkchallanoutid">No Metadata Documentation available.</param>
        /// <param name="user_Name">No Metadata Documentation available.</param>
        /// <param name="father_Name">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="payment_Mode">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="bank">No Metadata Documentation available.</param>
        /// <param name="cheque_No">No Metadata Documentation available.</param>
        /// <param name="itemname">No Metadata Documentation available.</param>
        /// <param name="imeino">No Metadata Documentation available.</param>
        /// <param name="plan">No Metadata Documentation available.</param>
        /// <param name="executive_Name">No Metadata Documentation available.</param>
        /// <param name="executive_Code">No Metadata Documentation available.</param>
        /// <param name="bRANCHCODE">No Metadata Documentation available.</param>
        /// <param name="sTATUS">No Metadata Documentation available.</param>
        /// <param name="itemtype">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int ClientMasterothersproc(global::System.String f, global::System.String cafno, global::System.String customeracno, Nullable<global::System.Int64> fkchallanoutid, global::System.String user_Name, global::System.String father_Name, global::System.String category, global::System.String payment_Mode, Nullable<global::System.Decimal> amount, global::System.String bank, global::System.String cheque_No, global::System.String itemname, global::System.String imeino, global::System.String plan, global::System.String executive_Name, global::System.String executive_Code, global::System.String bRANCHCODE, global::System.String sTATUS, global::System.String itemtype, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter cafnoParameter;
            if (cafno != null)
            {
                cafnoParameter = new ObjectParameter("cafno", cafno);
            }
            else
            {
                cafnoParameter = new ObjectParameter("cafno", typeof(global::System.String));
            }
    
            ObjectParameter customeracnoParameter;
            if (customeracno != null)
            {
                customeracnoParameter = new ObjectParameter("customeracno", customeracno);
            }
            else
            {
                customeracnoParameter = new ObjectParameter("customeracno", typeof(global::System.String));
            }
    
            ObjectParameter fkchallanoutidParameter;
            if (fkchallanoutid.HasValue)
            {
                fkchallanoutidParameter = new ObjectParameter("fkchallanoutid", fkchallanoutid);
            }
            else
            {
                fkchallanoutidParameter = new ObjectParameter("fkchallanoutid", typeof(global::System.Int64));
            }
    
            ObjectParameter user_NameParameter;
            if (user_Name != null)
            {
                user_NameParameter = new ObjectParameter("User_Name", user_Name);
            }
            else
            {
                user_NameParameter = new ObjectParameter("User_Name", typeof(global::System.String));
            }
    
            ObjectParameter father_NameParameter;
            if (father_Name != null)
            {
                father_NameParameter = new ObjectParameter("Father_Name", father_Name);
            }
            else
            {
                father_NameParameter = new ObjectParameter("Father_Name", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("Category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("Category", typeof(global::System.String));
            }
    
            ObjectParameter payment_ModeParameter;
            if (payment_Mode != null)
            {
                payment_ModeParameter = new ObjectParameter("Payment_Mode", payment_Mode);
            }
            else
            {
                payment_ModeParameter = new ObjectParameter("Payment_Mode", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter bankParameter;
            if (bank != null)
            {
                bankParameter = new ObjectParameter("Bank", bank);
            }
            else
            {
                bankParameter = new ObjectParameter("Bank", typeof(global::System.String));
            }
    
            ObjectParameter cheque_NoParameter;
            if (cheque_No != null)
            {
                cheque_NoParameter = new ObjectParameter("Cheque_No", cheque_No);
            }
            else
            {
                cheque_NoParameter = new ObjectParameter("Cheque_No", typeof(global::System.String));
            }
    
            ObjectParameter itemnameParameter;
            if (itemname != null)
            {
                itemnameParameter = new ObjectParameter("itemname", itemname);
            }
            else
            {
                itemnameParameter = new ObjectParameter("itemname", typeof(global::System.String));
            }
    
            ObjectParameter imeinoParameter;
            if (imeino != null)
            {
                imeinoParameter = new ObjectParameter("imeino", imeino);
            }
            else
            {
                imeinoParameter = new ObjectParameter("imeino", typeof(global::System.String));
            }
    
            ObjectParameter planParameter;
            if (plan != null)
            {
                planParameter = new ObjectParameter("Plan", plan);
            }
            else
            {
                planParameter = new ObjectParameter("Plan", typeof(global::System.String));
            }
    
            ObjectParameter executive_NameParameter;
            if (executive_Name != null)
            {
                executive_NameParameter = new ObjectParameter("Executive_Name", executive_Name);
            }
            else
            {
                executive_NameParameter = new ObjectParameter("Executive_Name", typeof(global::System.String));
            }
    
            ObjectParameter executive_CodeParameter;
            if (executive_Code != null)
            {
                executive_CodeParameter = new ObjectParameter("Executive_Code", executive_Code);
            }
            else
            {
                executive_CodeParameter = new ObjectParameter("Executive_Code", typeof(global::System.String));
            }
    
            ObjectParameter bRANCHCODEParameter;
            if (bRANCHCODE != null)
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", bRANCHCODE);
            }
            else
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", typeof(global::System.String));
            }
    
            ObjectParameter sTATUSParameter;
            if (sTATUS != null)
            {
                sTATUSParameter = new ObjectParameter("STATUS", sTATUS);
            }
            else
            {
                sTATUSParameter = new ObjectParameter("STATUS", typeof(global::System.String));
            }
    
            ObjectParameter itemtypeParameter;
            if (itemtype != null)
            {
                itemtypeParameter = new ObjectParameter("itemtype", itemtype);
            }
            else
            {
                itemtypeParameter = new ObjectParameter("itemtype", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ClientMasterothersproc", fParameter, cafnoParameter, customeracnoParameter, fkchallanoutidParameter, user_NameParameter, father_NameParameter, categoryParameter, payment_ModeParameter, amountParameter, bankParameter, cheque_NoParameter, itemnameParameter, imeinoParameter, planParameter, executive_NameParameter, executive_CodeParameter, bRANCHCODEParameter, sTATUSParameter, itemtypeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="sNO">No Metadata Documentation available.</param>
        /// <param name="tARIFF_CODE">No Metadata Documentation available.</param>
        /// <param name="cOUNTRY">No Metadata Documentation available.</param>
        /// <param name="pLANTYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="cHARGESTYPE">No Metadata Documentation available.</param>
        /// <param name="vALUE">No Metadata Documentation available.</param>
        /// <param name="tALK_VALUE">No Metadata Documentation available.</param>
        /// <param name="pER_MIN_CHARGE">No Metadata Documentation available.</param>
        /// <param name="vALIDITY_DAYS">No Metadata Documentation available.</param>
        /// <param name="cOUNTRY_FROM">No Metadata Documentation available.</param>
        /// <param name="cOUNTRY_TO">No Metadata Documentation available.</param>
        /// <param name="a">No Metadata Documentation available.</param>
        /// <param name="b">No Metadata Documentation available.</param>
        /// <param name="c">No Metadata Documentation available.</param>
        /// <param name="d">No Metadata Documentation available.</param>
        public int addtarif_Proc_INSERT(global::System.String f, Nullable<global::System.Int64> sNO, global::System.String tARIFF_CODE, global::System.String cOUNTRY, global::System.String pLANTYPE, global::System.String cURRENCY, global::System.String cHARGESTYPE, global::System.String vALUE, global::System.String tALK_VALUE, global::System.String pER_MIN_CHARGE, global::System.String vALIDITY_DAYS, global::System.String cOUNTRY_FROM, global::System.String cOUNTRY_TO, global::System.String a, global::System.String b, global::System.String c, global::System.String d)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("F", f);
            }
            else
            {
                fParameter = new ObjectParameter("F", typeof(global::System.String));
            }
    
            ObjectParameter sNOParameter;
            if (sNO.HasValue)
            {
                sNOParameter = new ObjectParameter("SNO", sNO);
            }
            else
            {
                sNOParameter = new ObjectParameter("SNO", typeof(global::System.Int64));
            }
    
            ObjectParameter tARIFF_CODEParameter;
            if (tARIFF_CODE != null)
            {
                tARIFF_CODEParameter = new ObjectParameter("TARIFF_CODE", tARIFF_CODE);
            }
            else
            {
                tARIFF_CODEParameter = new ObjectParameter("TARIFF_CODE", typeof(global::System.String));
            }
    
            ObjectParameter cOUNTRYParameter;
            if (cOUNTRY != null)
            {
                cOUNTRYParameter = new ObjectParameter("COUNTRY", cOUNTRY);
            }
            else
            {
                cOUNTRYParameter = new ObjectParameter("COUNTRY", typeof(global::System.String));
            }
    
            ObjectParameter pLANTYPEParameter;
            if (pLANTYPE != null)
            {
                pLANTYPEParameter = new ObjectParameter("PLANTYPE", pLANTYPE);
            }
            else
            {
                pLANTYPEParameter = new ObjectParameter("PLANTYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter cHARGESTYPEParameter;
            if (cHARGESTYPE != null)
            {
                cHARGESTYPEParameter = new ObjectParameter("CHARGESTYPE", cHARGESTYPE);
            }
            else
            {
                cHARGESTYPEParameter = new ObjectParameter("CHARGESTYPE", typeof(global::System.String));
            }
    
            ObjectParameter vALUEParameter;
            if (vALUE != null)
            {
                vALUEParameter = new ObjectParameter("VALUE", vALUE);
            }
            else
            {
                vALUEParameter = new ObjectParameter("VALUE", typeof(global::System.String));
            }
    
            ObjectParameter tALK_VALUEParameter;
            if (tALK_VALUE != null)
            {
                tALK_VALUEParameter = new ObjectParameter("TALK_VALUE", tALK_VALUE);
            }
            else
            {
                tALK_VALUEParameter = new ObjectParameter("TALK_VALUE", typeof(global::System.String));
            }
    
            ObjectParameter pER_MIN_CHARGEParameter;
            if (pER_MIN_CHARGE != null)
            {
                pER_MIN_CHARGEParameter = new ObjectParameter("PER_MIN_CHARGE", pER_MIN_CHARGE);
            }
            else
            {
                pER_MIN_CHARGEParameter = new ObjectParameter("PER_MIN_CHARGE", typeof(global::System.String));
            }
    
            ObjectParameter vALIDITY_DAYSParameter;
            if (vALIDITY_DAYS != null)
            {
                vALIDITY_DAYSParameter = new ObjectParameter("VALIDITY_DAYS", vALIDITY_DAYS);
            }
            else
            {
                vALIDITY_DAYSParameter = new ObjectParameter("VALIDITY_DAYS", typeof(global::System.String));
            }
    
            ObjectParameter cOUNTRY_FROMParameter;
            if (cOUNTRY_FROM != null)
            {
                cOUNTRY_FROMParameter = new ObjectParameter("COUNTRY_FROM", cOUNTRY_FROM);
            }
            else
            {
                cOUNTRY_FROMParameter = new ObjectParameter("COUNTRY_FROM", typeof(global::System.String));
            }
    
            ObjectParameter cOUNTRY_TOParameter;
            if (cOUNTRY_TO != null)
            {
                cOUNTRY_TOParameter = new ObjectParameter("COUNTRY_TO", cOUNTRY_TO);
            }
            else
            {
                cOUNTRY_TOParameter = new ObjectParameter("COUNTRY_TO", typeof(global::System.String));
            }
    
            ObjectParameter aParameter;
            if (a != null)
            {
                aParameter = new ObjectParameter("A", a);
            }
            else
            {
                aParameter = new ObjectParameter("A", typeof(global::System.String));
            }
    
            ObjectParameter bParameter;
            if (b != null)
            {
                bParameter = new ObjectParameter("B", b);
            }
            else
            {
                bParameter = new ObjectParameter("B", typeof(global::System.String));
            }
    
            ObjectParameter cParameter;
            if (c != null)
            {
                cParameter = new ObjectParameter("C", c);
            }
            else
            {
                cParameter = new ObjectParameter("C", typeof(global::System.String));
            }
    
            ObjectParameter dParameter;
            if (d != null)
            {
                dParameter = new ObjectParameter("D", d);
            }
            else
            {
                dParameter = new ObjectParameter("D", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("addtarif_Proc_INSERT", fParameter, sNOParameter, tARIFF_CODEParameter, cOUNTRYParameter, pLANTYPEParameter, cURRENCYParameter, cHARGESTYPEParameter, vALUEParameter, tALK_VALUEParameter, pER_MIN_CHARGEParameter, vALIDITY_DAYSParameter, cOUNTRY_FROMParameter, cOUNTRY_TOParameter, aParameter, bParameter, cParameter, dParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="exec_Code">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        public ObjectResult<simsearch_Proc_SimSearch_Result> simsearch_Proc_Search(global::System.String type, global::System.String country, global::System.String exec_Code, global::System.String branchcode)
        {
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            ObjectParameter exec_CodeParameter;
            if (exec_Code != null)
            {
                exec_CodeParameter = new ObjectParameter("Exec_Code", exec_Code);
            }
            else
            {
                exec_CodeParameter = new ObjectParameter("Exec_Code", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("Branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("Branchcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<simsearch_Proc_SimSearch_Result>("simsearch_Proc_Search", typeParameter, countryParameter, exec_CodeParameter, branchcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="requerstid">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="noOfSim">No Metadata Documentation available.</param>
        /// <param name="priority">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="executive_Code">No Metadata Documentation available.</param>
        /// <param name="status_n">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int RequestSim_Insert(global::System.String f, Nullable<global::System.Int64> requerstid, global::System.String date, global::System.String country, global::System.String noOfSim, global::System.String priority, global::System.String branchcode, global::System.String executive_Code, global::System.String status_n, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter requerstidParameter;
            if (requerstid.HasValue)
            {
                requerstidParameter = new ObjectParameter("requerstid", requerstid);
            }
            else
            {
                requerstidParameter = new ObjectParameter("requerstid", typeof(global::System.Int64));
            }
    
            ObjectParameter dateParameter;
            if (date != null)
            {
                dateParameter = new ObjectParameter("date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("date", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            ObjectParameter noOfSimParameter;
            if (noOfSim != null)
            {
                noOfSimParameter = new ObjectParameter("NoOfSim", noOfSim);
            }
            else
            {
                noOfSimParameter = new ObjectParameter("NoOfSim", typeof(global::System.String));
            }
    
            ObjectParameter priorityParameter;
            if (priority != null)
            {
                priorityParameter = new ObjectParameter("priority", priority);
            }
            else
            {
                priorityParameter = new ObjectParameter("priority", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter executive_CodeParameter;
            if (executive_Code != null)
            {
                executive_CodeParameter = new ObjectParameter("Executive_Code", executive_Code);
            }
            else
            {
                executive_CodeParameter = new ObjectParameter("Executive_Code", typeof(global::System.String));
            }
    
            ObjectParameter status_nParameter;
            if (status_n != null)
            {
                status_nParameter = new ObjectParameter("status_n", status_n);
            }
            else
            {
                status_nParameter = new ObjectParameter("status_n", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("RequestSim_Insert", fParameter, requerstidParameter, dateParameter, countryParameter, noOfSimParameter, priorityParameter, branchcodeParameter, executive_CodeParameter, status_nParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="insert">No Metadata Documentation available.</param>
        /// <param name="view">No Metadata Documentation available.</param>
        /// <param name="edit">No Metadata Documentation available.</param>
        /// <param name="delete">No Metadata Documentation available.</param>
        /// <param name="all">No Metadata Documentation available.</param>
        /// <param name="rolesetting">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        public ObjectResult<rolesettings_proc_insert_Result> rolesettings_proc_insert(global::System.String f, Nullable<global::System.Int64> id, global::System.String formname, Nullable<global::System.Boolean> insert, Nullable<global::System.Boolean> view, Nullable<global::System.Boolean> edit, Nullable<global::System.Boolean> delete, Nullable<global::System.Boolean> all, global::System.String rolesetting, global::System.String usercode, global::System.String branchcode)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int64));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter insertParameter;
            if (insert.HasValue)
            {
                insertParameter = new ObjectParameter("insert", insert);
            }
            else
            {
                insertParameter = new ObjectParameter("insert", typeof(global::System.Boolean));
            }
    
            ObjectParameter viewParameter;
            if (view.HasValue)
            {
                viewParameter = new ObjectParameter("view", view);
            }
            else
            {
                viewParameter = new ObjectParameter("view", typeof(global::System.Boolean));
            }
    
            ObjectParameter editParameter;
            if (edit.HasValue)
            {
                editParameter = new ObjectParameter("edit", edit);
            }
            else
            {
                editParameter = new ObjectParameter("edit", typeof(global::System.Boolean));
            }
    
            ObjectParameter deleteParameter;
            if (delete.HasValue)
            {
                deleteParameter = new ObjectParameter("delete", delete);
            }
            else
            {
                deleteParameter = new ObjectParameter("delete", typeof(global::System.Boolean));
            }
    
            ObjectParameter allParameter;
            if (all.HasValue)
            {
                allParameter = new ObjectParameter("all", all);
            }
            else
            {
                allParameter = new ObjectParameter("all", typeof(global::System.Boolean));
            }
    
            ObjectParameter rolesettingParameter;
            if (rolesetting != null)
            {
                rolesettingParameter = new ObjectParameter("rolesetting", rolesetting);
            }
            else
            {
                rolesettingParameter = new ObjectParameter("rolesetting", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<rolesettings_proc_insert_Result>("rolesettings_proc_insert", fParameter, idParameter, formnameParameter, insertParameter, viewParameter, editParameter, deleteParameter, allParameter, rolesettingParameter, usercodeParameter, branchcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int customerautobillno_proc_search(global::System.String branchcode, global::System.String formname, global::System.String usercode, ObjectParameter msg)
        {
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("customerautobillno_proc_search", branchcodeParameter, formnameParameter, usercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="chdate">No Metadata Documentation available.</param>
        /// <param name="simNo">No Metadata Documentation available.</param>
        /// <param name="challanNo">No Metadata Documentation available.</param>
        /// <param name="option">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="mobileNo">No Metadata Documentation available.</param>
        /// <param name="execName">No Metadata Documentation available.</param>
        /// <param name="loginUser">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int pChallanin_Proc(global::System.String chdate, global::System.String simNo, global::System.String challanNo, global::System.String option, global::System.String country, global::System.String mobileNo, global::System.String execName, global::System.String loginUser, global::System.String branchcode, global::System.String status, ObjectParameter msg)
        {
            ObjectParameter chdateParameter;
            if (chdate != null)
            {
                chdateParameter = new ObjectParameter("chdate", chdate);
            }
            else
            {
                chdateParameter = new ObjectParameter("chdate", typeof(global::System.String));
            }
    
            ObjectParameter simNoParameter;
            if (simNo != null)
            {
                simNoParameter = new ObjectParameter("SimNo", simNo);
            }
            else
            {
                simNoParameter = new ObjectParameter("SimNo", typeof(global::System.String));
            }
    
            ObjectParameter challanNoParameter;
            if (challanNo != null)
            {
                challanNoParameter = new ObjectParameter("ChallanNo", challanNo);
            }
            else
            {
                challanNoParameter = new ObjectParameter("ChallanNo", typeof(global::System.String));
            }
    
            ObjectParameter optionParameter;
            if (option != null)
            {
                optionParameter = new ObjectParameter("Option", option);
            }
            else
            {
                optionParameter = new ObjectParameter("Option", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter mobileNoParameter;
            if (mobileNo != null)
            {
                mobileNoParameter = new ObjectParameter("MobileNo", mobileNo);
            }
            else
            {
                mobileNoParameter = new ObjectParameter("MobileNo", typeof(global::System.String));
            }
    
            ObjectParameter execNameParameter;
            if (execName != null)
            {
                execNameParameter = new ObjectParameter("ExecName", execName);
            }
            else
            {
                execNameParameter = new ObjectParameter("ExecName", typeof(global::System.String));
            }
    
            ObjectParameter loginUserParameter;
            if (loginUser != null)
            {
                loginUserParameter = new ObjectParameter("LoginUser", loginUser);
            }
            else
            {
                loginUserParameter = new ObjectParameter("LoginUser", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("pChallanin_Proc", chdateParameter, simNoParameter, challanNoParameter, optionParameter, countryParameter, mobileNoParameter, execNameParameter, loginUserParameter, branchcodeParameter, statusParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="voucher_id">No Metadata Documentation available.</param>
        /// <param name="voucherno">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="sno">No Metadata Documentation available.</param>
        /// <param name="cafno">No Metadata Documentation available.</param>
        /// <param name="acno">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="paymentmode">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="chequeno">No Metadata Documentation available.</param>
        /// <param name="bank">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="netbalance">No Metadata Documentation available.</param>
        /// <param name="executivecode">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        public int vouchertableproc_Insert(global::System.String f, Nullable<global::System.Int64> voucher_id, global::System.String voucherno, global::System.String date, Nullable<global::System.Int32> sno, global::System.String cafno, global::System.String acno, global::System.String name, global::System.String type, global::System.String paymentmode, Nullable<global::System.Decimal> amount, global::System.String chequeno, global::System.String bank, global::System.String description, Nullable<global::System.Decimal> netbalance, global::System.String executivecode, global::System.String branchcode)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter voucher_idParameter;
            if (voucher_id.HasValue)
            {
                voucher_idParameter = new ObjectParameter("voucher_id", voucher_id);
            }
            else
            {
                voucher_idParameter = new ObjectParameter("voucher_id", typeof(global::System.Int64));
            }
    
            ObjectParameter vouchernoParameter;
            if (voucherno != null)
            {
                vouchernoParameter = new ObjectParameter("Voucherno", voucherno);
            }
            else
            {
                vouchernoParameter = new ObjectParameter("Voucherno", typeof(global::System.String));
            }
    
            ObjectParameter dateParameter;
            if (date != null)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.String));
            }
    
            ObjectParameter snoParameter;
            if (sno.HasValue)
            {
                snoParameter = new ObjectParameter("Sno", sno);
            }
            else
            {
                snoParameter = new ObjectParameter("Sno", typeof(global::System.Int32));
            }
    
            ObjectParameter cafnoParameter;
            if (cafno != null)
            {
                cafnoParameter = new ObjectParameter("cafno", cafno);
            }
            else
            {
                cafnoParameter = new ObjectParameter("cafno", typeof(global::System.String));
            }
    
            ObjectParameter acnoParameter;
            if (acno != null)
            {
                acnoParameter = new ObjectParameter("Acno", acno);
            }
            else
            {
                acnoParameter = new ObjectParameter("Acno", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            ObjectParameter paymentmodeParameter;
            if (paymentmode != null)
            {
                paymentmodeParameter = new ObjectParameter("paymentmode", paymentmode);
            }
            else
            {
                paymentmodeParameter = new ObjectParameter("paymentmode", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter chequenoParameter;
            if (chequeno != null)
            {
                chequenoParameter = new ObjectParameter("Chequeno", chequeno);
            }
            else
            {
                chequenoParameter = new ObjectParameter("Chequeno", typeof(global::System.String));
            }
    
            ObjectParameter bankParameter;
            if (bank != null)
            {
                bankParameter = new ObjectParameter("Bank", bank);
            }
            else
            {
                bankParameter = new ObjectParameter("Bank", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter netbalanceParameter;
            if (netbalance.HasValue)
            {
                netbalanceParameter = new ObjectParameter("netbalance", netbalance);
            }
            else
            {
                netbalanceParameter = new ObjectParameter("netbalance", typeof(global::System.Decimal));
            }
    
            ObjectParameter executivecodeParameter;
            if (executivecode != null)
            {
                executivecodeParameter = new ObjectParameter("executivecode", executivecode);
            }
            else
            {
                executivecodeParameter = new ObjectParameter("executivecode", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("vouchertableproc_Insert", fParameter, voucher_idParameter, vouchernoParameter, dateParameter, snoParameter, cafnoParameter, acnoParameter, nameParameter, typeParameter, paymentmodeParameter, amountParameter, chequenoParameter, bankParameter, descriptionParameter, netbalanceParameter, executivecodeParameter, branchcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="voucher_id">No Metadata Documentation available.</param>
        /// <param name="voucherno">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="sno">No Metadata Documentation available.</param>
        /// <param name="cafno">No Metadata Documentation available.</param>
        /// <param name="acno">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="paymentmode">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="chequeno">No Metadata Documentation available.</param>
        /// <param name="bank">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="netbalance">No Metadata Documentation available.</param>
        /// <param name="executivecode">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        public ObjectResult<vouchertableproc_SaveAndSearch_Result> vouchertableproc_SaveAndSearch(global::System.String f, Nullable<global::System.Int64> voucher_id, global::System.String voucherno, global::System.String date, Nullable<global::System.Int32> sno, global::System.String cafno, global::System.String acno, global::System.String name, global::System.String type, global::System.String paymentmode, Nullable<global::System.Decimal> amount, global::System.String chequeno, global::System.String bank, global::System.String description, Nullable<global::System.Decimal> netbalance, global::System.String executivecode, global::System.String branchcode)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter voucher_idParameter;
            if (voucher_id.HasValue)
            {
                voucher_idParameter = new ObjectParameter("voucher_id", voucher_id);
            }
            else
            {
                voucher_idParameter = new ObjectParameter("voucher_id", typeof(global::System.Int64));
            }
    
            ObjectParameter vouchernoParameter;
            if (voucherno != null)
            {
                vouchernoParameter = new ObjectParameter("Voucherno", voucherno);
            }
            else
            {
                vouchernoParameter = new ObjectParameter("Voucherno", typeof(global::System.String));
            }
    
            ObjectParameter dateParameter;
            if (date != null)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.String));
            }
    
            ObjectParameter snoParameter;
            if (sno.HasValue)
            {
                snoParameter = new ObjectParameter("Sno", sno);
            }
            else
            {
                snoParameter = new ObjectParameter("Sno", typeof(global::System.Int32));
            }
    
            ObjectParameter cafnoParameter;
            if (cafno != null)
            {
                cafnoParameter = new ObjectParameter("cafno", cafno);
            }
            else
            {
                cafnoParameter = new ObjectParameter("cafno", typeof(global::System.String));
            }
    
            ObjectParameter acnoParameter;
            if (acno != null)
            {
                acnoParameter = new ObjectParameter("Acno", acno);
            }
            else
            {
                acnoParameter = new ObjectParameter("Acno", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            ObjectParameter paymentmodeParameter;
            if (paymentmode != null)
            {
                paymentmodeParameter = new ObjectParameter("paymentmode", paymentmode);
            }
            else
            {
                paymentmodeParameter = new ObjectParameter("paymentmode", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter chequenoParameter;
            if (chequeno != null)
            {
                chequenoParameter = new ObjectParameter("Chequeno", chequeno);
            }
            else
            {
                chequenoParameter = new ObjectParameter("Chequeno", typeof(global::System.String));
            }
    
            ObjectParameter bankParameter;
            if (bank != null)
            {
                bankParameter = new ObjectParameter("Bank", bank);
            }
            else
            {
                bankParameter = new ObjectParameter("Bank", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter netbalanceParameter;
            if (netbalance.HasValue)
            {
                netbalanceParameter = new ObjectParameter("netbalance", netbalance);
            }
            else
            {
                netbalanceParameter = new ObjectParameter("netbalance", typeof(global::System.Decimal));
            }
    
            ObjectParameter executivecodeParameter;
            if (executivecode != null)
            {
                executivecodeParameter = new ObjectParameter("executivecode", executivecode);
            }
            else
            {
                executivecodeParameter = new ObjectParameter("executivecode", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<vouchertableproc_SaveAndSearch_Result>("vouchertableproc_SaveAndSearch", fParameter, voucher_idParameter, vouchernoParameter, dateParameter, snoParameter, cafnoParameter, acnoParameter, nameParameter, typeParameter, paymentmodeParameter, amountParameter, chequenoParameter, bankParameter, descriptionParameter, netbalanceParameter, executivecodeParameter, branchcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="pLANID">No Metadata Documentation available.</param>
        /// <param name="pLANCODE">No Metadata Documentation available.</param>
        /// <param name="pLANNAME">No Metadata Documentation available.</param>
        /// <param name="pLANTYPE">No Metadata Documentation available.</param>
        /// <param name="cOUNTRY">No Metadata Documentation available.</param>
        /// <param name="pLANVALUE">No Metadata Documentation available.</param>
        /// <param name="tALKTIMEDATA">No Metadata Documentation available.</param>
        /// <param name="bRANCHCODE">No Metadata Documentation available.</param>
        /// <param name="lOGINUSER">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int PLAN_PROC_INSERT(global::System.String f, Nullable<global::System.Int64> pLANID, global::System.String pLANCODE, global::System.String pLANNAME, global::System.String pLANTYPE, global::System.String cOUNTRY, global::System.String pLANVALUE, global::System.String tALKTIMEDATA, global::System.String bRANCHCODE, global::System.String lOGINUSER, ObjectParameter msg)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("F", f);
            }
            else
            {
                fParameter = new ObjectParameter("F", typeof(global::System.String));
            }
    
            ObjectParameter pLANIDParameter;
            if (pLANID.HasValue)
            {
                pLANIDParameter = new ObjectParameter("PLANID", pLANID);
            }
            else
            {
                pLANIDParameter = new ObjectParameter("PLANID", typeof(global::System.Int64));
            }
    
            ObjectParameter pLANCODEParameter;
            if (pLANCODE != null)
            {
                pLANCODEParameter = new ObjectParameter("PLANCODE", pLANCODE);
            }
            else
            {
                pLANCODEParameter = new ObjectParameter("PLANCODE", typeof(global::System.String));
            }
    
            ObjectParameter pLANNAMEParameter;
            if (pLANNAME != null)
            {
                pLANNAMEParameter = new ObjectParameter("PLANNAME", pLANNAME);
            }
            else
            {
                pLANNAMEParameter = new ObjectParameter("PLANNAME", typeof(global::System.String));
            }
    
            ObjectParameter pLANTYPEParameter;
            if (pLANTYPE != null)
            {
                pLANTYPEParameter = new ObjectParameter("PLANTYPE", pLANTYPE);
            }
            else
            {
                pLANTYPEParameter = new ObjectParameter("PLANTYPE", typeof(global::System.String));
            }
    
            ObjectParameter cOUNTRYParameter;
            if (cOUNTRY != null)
            {
                cOUNTRYParameter = new ObjectParameter("COUNTRY", cOUNTRY);
            }
            else
            {
                cOUNTRYParameter = new ObjectParameter("COUNTRY", typeof(global::System.String));
            }
    
            ObjectParameter pLANVALUEParameter;
            if (pLANVALUE != null)
            {
                pLANVALUEParameter = new ObjectParameter("PLANVALUE", pLANVALUE);
            }
            else
            {
                pLANVALUEParameter = new ObjectParameter("PLANVALUE", typeof(global::System.String));
            }
    
            ObjectParameter tALKTIMEDATAParameter;
            if (tALKTIMEDATA != null)
            {
                tALKTIMEDATAParameter = new ObjectParameter("TALKTIMEDATA", tALKTIMEDATA);
            }
            else
            {
                tALKTIMEDATAParameter = new ObjectParameter("TALKTIMEDATA", typeof(global::System.String));
            }
    
            ObjectParameter bRANCHCODEParameter;
            if (bRANCHCODE != null)
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", bRANCHCODE);
            }
            else
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", typeof(global::System.String));
            }
    
            ObjectParameter lOGINUSERParameter;
            if (lOGINUSER != null)
            {
                lOGINUSERParameter = new ObjectParameter("LOGINUSER", lOGINUSER);
            }
            else
            {
                lOGINUSERParameter = new ObjectParameter("LOGINUSER", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("PLAN_PROC_INSERT", fParameter, pLANIDParameter, pLANCODEParameter, pLANNAMEParameter, pLANTYPEParameter, cOUNTRYParameter, pLANVALUEParameter, tALKTIMEDATAParameter, bRANCHCODEParameter, lOGINUSERParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int Clientmasterautotfno_proc(global::System.String branchcode, global::System.String formname, global::System.String usercode, ObjectParameter msg)
        {
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("Clientmasterautotfno_proc", branchcodeParameter, formnameParameter, usercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="lostDate">No Metadata Documentation available.</param>
        /// <param name="simNo">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="reason">No Metadata Documentation available.</param>
        /// <param name="deleteInventry">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="partnername">No Metadata Documentation available.</param>
        /// <param name="loginuser">No Metadata Documentation available.</param>
        public int SimLost_Insert(global::System.String f, global::System.String lostDate, Nullable<global::System.Decimal> simNo, global::System.String country, global::System.String reason, global::System.String deleteInventry, global::System.String branchcode, global::System.String partnername, global::System.String loginuser)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter lostDateParameter;
            if (lostDate != null)
            {
                lostDateParameter = new ObjectParameter("LostDate", lostDate);
            }
            else
            {
                lostDateParameter = new ObjectParameter("LostDate", typeof(global::System.String));
            }
    
            ObjectParameter simNoParameter;
            if (simNo.HasValue)
            {
                simNoParameter = new ObjectParameter("SimNo", simNo);
            }
            else
            {
                simNoParameter = new ObjectParameter("SimNo", typeof(global::System.Decimal));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            ObjectParameter reasonParameter;
            if (reason != null)
            {
                reasonParameter = new ObjectParameter("Reason", reason);
            }
            else
            {
                reasonParameter = new ObjectParameter("Reason", typeof(global::System.String));
            }
    
            ObjectParameter deleteInventryParameter;
            if (deleteInventry != null)
            {
                deleteInventryParameter = new ObjectParameter("DeleteInventry", deleteInventry);
            }
            else
            {
                deleteInventryParameter = new ObjectParameter("DeleteInventry", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter partnernameParameter;
            if (partnername != null)
            {
                partnernameParameter = new ObjectParameter("partnername", partnername);
            }
            else
            {
                partnernameParameter = new ObjectParameter("partnername", typeof(global::System.String));
            }
    
            ObjectParameter loginuserParameter;
            if (loginuser != null)
            {
                loginuserParameter = new ObjectParameter("loginuser", loginuser);
            }
            else
            {
                loginuserParameter = new ObjectParameter("loginuser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SimLost_Insert", fParameter, lostDateParameter, simNoParameter, countryParameter, reasonParameter, deleteInventryParameter, branchcodeParameter, partnernameParameter, loginuserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int purchaseautobillno_proc(global::System.String branchcode, global::System.String formname, global::System.String usercode, ObjectParameter msg)
        {
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("purchaseautobillno_proc", branchcodeParameter, formnameParameter, usercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int Challanautobillno_proc(global::System.String branchcode, global::System.String formname, global::System.String usercode, ObjectParameter msg)
        {
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("Challanautobillno_proc", branchcodeParameter, formnameParameter, usercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="prefixid">No Metadata Documentation available.</param>
        /// <param name="prefixtype">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="prefixnumber">No Metadata Documentation available.</param>
        /// <param name="startwith">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="status_s">No Metadata Documentation available.</param>
        /// <param name="a">No Metadata Documentation available.</param>
        /// <param name="b">No Metadata Documentation available.</param>
        /// <param name="c">No Metadata Documentation available.</param>
        public int prefixsettings_proc_insert(Nullable<global::System.Int64> prefixid, global::System.String prefixtype, global::System.String formname, global::System.String prefixnumber, global::System.String startwith, global::System.String branchcode, global::System.String status_s, global::System.String a, global::System.String b, global::System.String c)
        {
            ObjectParameter prefixidParameter;
            if (prefixid.HasValue)
            {
                prefixidParameter = new ObjectParameter("prefixid", prefixid);
            }
            else
            {
                prefixidParameter = new ObjectParameter("prefixid", typeof(global::System.Int64));
            }
    
            ObjectParameter prefixtypeParameter;
            if (prefixtype != null)
            {
                prefixtypeParameter = new ObjectParameter("Prefixtype", prefixtype);
            }
            else
            {
                prefixtypeParameter = new ObjectParameter("Prefixtype", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter prefixnumberParameter;
            if (prefixnumber != null)
            {
                prefixnumberParameter = new ObjectParameter("prefixnumber", prefixnumber);
            }
            else
            {
                prefixnumberParameter = new ObjectParameter("prefixnumber", typeof(global::System.String));
            }
    
            ObjectParameter startwithParameter;
            if (startwith != null)
            {
                startwithParameter = new ObjectParameter("startwith", startwith);
            }
            else
            {
                startwithParameter = new ObjectParameter("startwith", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter status_sParameter;
            if (status_s != null)
            {
                status_sParameter = new ObjectParameter("status_s", status_s);
            }
            else
            {
                status_sParameter = new ObjectParameter("status_s", typeof(global::System.String));
            }
    
            ObjectParameter aParameter;
            if (a != null)
            {
                aParameter = new ObjectParameter("A", a);
            }
            else
            {
                aParameter = new ObjectParameter("A", typeof(global::System.String));
            }
    
            ObjectParameter bParameter;
            if (b != null)
            {
                bParameter = new ObjectParameter("B", b);
            }
            else
            {
                bParameter = new ObjectParameter("B", typeof(global::System.String));
            }
    
            ObjectParameter cParameter;
            if (c != null)
            {
                cParameter = new ObjectParameter("C", c);
            }
            else
            {
                cParameter = new ObjectParameter("C", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("prefixsettings_proc_insert", prefixidParameter, prefixtypeParameter, formnameParameter, prefixnumberParameter, startwithParameter, branchcodeParameter, status_sParameter, aParameter, bParameter, cParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="rosettingid">No Metadata Documentation available.</param>
        /// <param name="rolesettingname">No Metadata Documentation available.</param>
        /// <param name="rolesettingcode">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="cmpid">No Metadata Documentation available.</param>
        public int rolenametable_proc_insert(global::System.String f, Nullable<global::System.Int64> rosettingid, global::System.String rolesettingname, global::System.String rolesettingcode, global::System.String usercode, global::System.String branchcode, global::System.String cmpid)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter rosettingidParameter;
            if (rosettingid.HasValue)
            {
                rosettingidParameter = new ObjectParameter("rosettingid", rosettingid);
            }
            else
            {
                rosettingidParameter = new ObjectParameter("rosettingid", typeof(global::System.Int64));
            }
    
            ObjectParameter rolesettingnameParameter;
            if (rolesettingname != null)
            {
                rolesettingnameParameter = new ObjectParameter("rolesettingname", rolesettingname);
            }
            else
            {
                rolesettingnameParameter = new ObjectParameter("rolesettingname", typeof(global::System.String));
            }
    
            ObjectParameter rolesettingcodeParameter;
            if (rolesettingcode != null)
            {
                rolesettingcodeParameter = new ObjectParameter("rolesettingcode", rolesettingcode);
            }
            else
            {
                rolesettingcodeParameter = new ObjectParameter("rolesettingcode", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter cmpidParameter;
            if (cmpid != null)
            {
                cmpidParameter = new ObjectParameter("cmpid", cmpid);
            }
            else
            {
                cmpidParameter = new ObjectParameter("cmpid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("rolenametable_proc_insert", fParameter, rosettingidParameter, rolesettingnameParameter, rolesettingcodeParameter, usercodeParameter, branchcodeParameter, cmpidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int Executiveautobillno_proc(global::System.String branchcode, global::System.String formname, global::System.String usercode, ObjectParameter msg)
        {
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("Executiveautobillno_proc", branchcodeParameter, formnameParameter, usercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="usertype">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="userid">No Metadata Documentation available.</param>
        /// <param name="vdate">No Metadata Documentation available.</param>
        public ObjectResult<Paymentsheet_Result> Paymentsheet(global::System.String f, global::System.String usertype, global::System.String branchcode, global::System.String userid, global::System.String vdate)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter usertypeParameter;
            if (usertype != null)
            {
                usertypeParameter = new ObjectParameter("usertype", usertype);
            }
            else
            {
                usertypeParameter = new ObjectParameter("usertype", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter useridParameter;
            if (userid != null)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.String));
            }
    
            ObjectParameter vdateParameter;
            if (vdate != null)
            {
                vdateParameter = new ObjectParameter("vdate", vdate);
            }
            else
            {
                vdateParameter = new ObjectParameter("vdate", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Paymentsheet_Result>("Paymentsheet", fParameter, usertypeParameter, branchcodeParameter, useridParameter, vdateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="country">No Metadata Documentation available.</param>
        public ObjectResult<live_stockreport_proc_Result> live_stockreport_proc(global::System.String country)
        {
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<live_stockreport_proc_Result>("live_stockreport_proc", countryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="simriplacementid">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="currentsimno">No Metadata Documentation available.</param>
        /// <param name="cafno">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="aloatnewsimno">No Metadata Documentation available.</param>
        /// <param name="execcode">No Metadata Documentation available.</param>
        public int simreplacementtabproc_insert(global::System.String f, Nullable<global::System.Int64> simriplacementid, global::System.String date, global::System.String currentsimno, global::System.String cafno, global::System.String name, global::System.String aloatnewsimno, global::System.String execcode)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter simriplacementidParameter;
            if (simriplacementid.HasValue)
            {
                simriplacementidParameter = new ObjectParameter("simriplacementid", simriplacementid);
            }
            else
            {
                simriplacementidParameter = new ObjectParameter("simriplacementid", typeof(global::System.Int64));
            }
    
            ObjectParameter dateParameter;
            if (date != null)
            {
                dateParameter = new ObjectParameter("date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("date", typeof(global::System.String));
            }
    
            ObjectParameter currentsimnoParameter;
            if (currentsimno != null)
            {
                currentsimnoParameter = new ObjectParameter("currentsimno", currentsimno);
            }
            else
            {
                currentsimnoParameter = new ObjectParameter("currentsimno", typeof(global::System.String));
            }
    
            ObjectParameter cafnoParameter;
            if (cafno != null)
            {
                cafnoParameter = new ObjectParameter("cafno", cafno);
            }
            else
            {
                cafnoParameter = new ObjectParameter("cafno", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter aloatnewsimnoParameter;
            if (aloatnewsimno != null)
            {
                aloatnewsimnoParameter = new ObjectParameter("Aloatnewsimno", aloatnewsimno);
            }
            else
            {
                aloatnewsimnoParameter = new ObjectParameter("Aloatnewsimno", typeof(global::System.String));
            }
    
            ObjectParameter execcodeParameter;
            if (execcode != null)
            {
                execcodeParameter = new ObjectParameter("execcode", execcode);
            }
            else
            {
                execcodeParameter = new ObjectParameter("execcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("simreplacementtabproc_insert", fParameter, simriplacementidParameter, dateParameter, currentsimnoParameter, cafnoParameter, nameParameter, aloatnewsimnoParameter, execcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="topid">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="mobileno">No Metadata Documentation available.</param>
        /// <param name="plancode">No Metadata Documentation available.</param>
        /// <param name="topup">No Metadata Documentation available.</param>
        /// <param name="topup_data">No Metadata Documentation available.</param>
        /// <param name="topup_sptopup">No Metadata Documentation available.</param>
        /// <param name="total">No Metadata Documentation available.</param>
        /// <param name="loginuser">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        public int mobile_topup_proc_insert(global::System.String f, Nullable<global::System.Int64> topid, global::System.String country, global::System.String mobileno, global::System.String plancode, global::System.String topup, global::System.String topup_data, global::System.String topup_sptopup, global::System.String total, global::System.String loginuser, global::System.String branchcode)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter topidParameter;
            if (topid.HasValue)
            {
                topidParameter = new ObjectParameter("topid", topid);
            }
            else
            {
                topidParameter = new ObjectParameter("topid", typeof(global::System.Int64));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            ObjectParameter mobilenoParameter;
            if (mobileno != null)
            {
                mobilenoParameter = new ObjectParameter("mobileno", mobileno);
            }
            else
            {
                mobilenoParameter = new ObjectParameter("mobileno", typeof(global::System.String));
            }
    
            ObjectParameter plancodeParameter;
            if (plancode != null)
            {
                plancodeParameter = new ObjectParameter("plancode", plancode);
            }
            else
            {
                plancodeParameter = new ObjectParameter("plancode", typeof(global::System.String));
            }
    
            ObjectParameter topupParameter;
            if (topup != null)
            {
                topupParameter = new ObjectParameter("topup", topup);
            }
            else
            {
                topupParameter = new ObjectParameter("topup", typeof(global::System.String));
            }
    
            ObjectParameter topup_dataParameter;
            if (topup_data != null)
            {
                topup_dataParameter = new ObjectParameter("topup_data", topup_data);
            }
            else
            {
                topup_dataParameter = new ObjectParameter("topup_data", typeof(global::System.String));
            }
    
            ObjectParameter topup_sptopupParameter;
            if (topup_sptopup != null)
            {
                topup_sptopupParameter = new ObjectParameter("topup_sptopup", topup_sptopup);
            }
            else
            {
                topup_sptopupParameter = new ObjectParameter("topup_sptopup", typeof(global::System.String));
            }
    
            ObjectParameter totalParameter;
            if (total != null)
            {
                totalParameter = new ObjectParameter("total", total);
            }
            else
            {
                totalParameter = new ObjectParameter("total", typeof(global::System.String));
            }
    
            ObjectParameter loginuserParameter;
            if (loginuser != null)
            {
                loginuserParameter = new ObjectParameter("loginuser", loginuser);
            }
            else
            {
                loginuserParameter = new ObjectParameter("loginuser", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("mobile_topup_proc_insert", fParameter, topidParameter, countryParameter, mobilenoParameter, plancodeParameter, topupParameter, topup_dataParameter, topup_sptopupParameter, totalParameter, loginuserParameter, branchcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="billsummaryid">No Metadata Documentation available.</param>
        /// <param name="bdate">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="user">No Metadata Documentation available.</param>
        /// <param name="billNo">No Metadata Documentation available.</param>
        /// <param name="accountCode">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="agreementno">No Metadata Documentation available.</param>
        /// <param name="mobileno">No Metadata Documentation available.</param>
        /// <param name="billdate">No Metadata Documentation available.</param>
        /// <param name="duedate">No Metadata Documentation available.</param>
        /// <param name="billperiod">No Metadata Documentation available.</param>
        /// <param name="currency1">No Metadata Documentation available.</param>
        /// <param name="currency2">No Metadata Documentation available.</param>
        /// <param name="rental">No Metadata Documentation available.</param>
        /// <param name="useges">No Metadata Documentation available.</param>
        /// <param name="aopfubs">No Metadata Documentation available.</param>
        /// <param name="totalamount">No Metadata Documentation available.</param>
        /// <param name="amountininr">No Metadata Documentation available.</param>
        /// <param name="servicetax">No Metadata Documentation available.</param>
        /// <param name="amountpayable">No Metadata Documentation available.</param>
        /// <param name="afterduedate">No Metadata Documentation available.</param>
        /// <param name="conversion">No Metadata Documentation available.</param>
        /// <param name="excelFile">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="loginuser">No Metadata Documentation available.</param>
        public int billsummaryproc_Insert(global::System.String f, Nullable<global::System.Int64> billsummaryid, global::System.String bdate, global::System.String username, global::System.String user, global::System.String billNo, global::System.String accountCode, global::System.String country, global::System.String agreementno, global::System.String mobileno, global::System.String billdate, global::System.String duedate, global::System.String billperiod, global::System.String currency1, global::System.String currency2, global::System.String rental, global::System.String useges, global::System.String aopfubs, global::System.String totalamount, global::System.String amountininr, global::System.String servicetax, global::System.String amountpayable, global::System.String afterduedate, global::System.String conversion, global::System.String excelFile, global::System.String branchcode, global::System.String loginuser)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter billsummaryidParameter;
            if (billsummaryid.HasValue)
            {
                billsummaryidParameter = new ObjectParameter("billsummaryid", billsummaryid);
            }
            else
            {
                billsummaryidParameter = new ObjectParameter("billsummaryid", typeof(global::System.Int64));
            }
    
            ObjectParameter bdateParameter;
            if (bdate != null)
            {
                bdateParameter = new ObjectParameter("bdate", bdate);
            }
            else
            {
                bdateParameter = new ObjectParameter("bdate", typeof(global::System.String));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter userParameter;
            if (user != null)
            {
                userParameter = new ObjectParameter("user", user);
            }
            else
            {
                userParameter = new ObjectParameter("user", typeof(global::System.String));
            }
    
            ObjectParameter billNoParameter;
            if (billNo != null)
            {
                billNoParameter = new ObjectParameter("BillNo", billNo);
            }
            else
            {
                billNoParameter = new ObjectParameter("BillNo", typeof(global::System.String));
            }
    
            ObjectParameter accountCodeParameter;
            if (accountCode != null)
            {
                accountCodeParameter = new ObjectParameter("AccountCode", accountCode);
            }
            else
            {
                accountCodeParameter = new ObjectParameter("AccountCode", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter agreementnoParameter;
            if (agreementno != null)
            {
                agreementnoParameter = new ObjectParameter("Agreementno", agreementno);
            }
            else
            {
                agreementnoParameter = new ObjectParameter("Agreementno", typeof(global::System.String));
            }
    
            ObjectParameter mobilenoParameter;
            if (mobileno != null)
            {
                mobilenoParameter = new ObjectParameter("mobileno", mobileno);
            }
            else
            {
                mobilenoParameter = new ObjectParameter("mobileno", typeof(global::System.String));
            }
    
            ObjectParameter billdateParameter;
            if (billdate != null)
            {
                billdateParameter = new ObjectParameter("Billdate", billdate);
            }
            else
            {
                billdateParameter = new ObjectParameter("Billdate", typeof(global::System.String));
            }
    
            ObjectParameter duedateParameter;
            if (duedate != null)
            {
                duedateParameter = new ObjectParameter("duedate", duedate);
            }
            else
            {
                duedateParameter = new ObjectParameter("duedate", typeof(global::System.String));
            }
    
            ObjectParameter billperiodParameter;
            if (billperiod != null)
            {
                billperiodParameter = new ObjectParameter("billperiod", billperiod);
            }
            else
            {
                billperiodParameter = new ObjectParameter("billperiod", typeof(global::System.String));
            }
    
            ObjectParameter currency1Parameter;
            if (currency1 != null)
            {
                currency1Parameter = new ObjectParameter("currency1", currency1);
            }
            else
            {
                currency1Parameter = new ObjectParameter("currency1", typeof(global::System.String));
            }
    
            ObjectParameter currency2Parameter;
            if (currency2 != null)
            {
                currency2Parameter = new ObjectParameter("currency2", currency2);
            }
            else
            {
                currency2Parameter = new ObjectParameter("currency2", typeof(global::System.String));
            }
    
            ObjectParameter rentalParameter;
            if (rental != null)
            {
                rentalParameter = new ObjectParameter("Rental", rental);
            }
            else
            {
                rentalParameter = new ObjectParameter("Rental", typeof(global::System.String));
            }
    
            ObjectParameter usegesParameter;
            if (useges != null)
            {
                usegesParameter = new ObjectParameter("useges", useges);
            }
            else
            {
                usegesParameter = new ObjectParameter("useges", typeof(global::System.String));
            }
    
            ObjectParameter aopfubsParameter;
            if (aopfubs != null)
            {
                aopfubsParameter = new ObjectParameter("aopfubs", aopfubs);
            }
            else
            {
                aopfubsParameter = new ObjectParameter("aopfubs", typeof(global::System.String));
            }
    
            ObjectParameter totalamountParameter;
            if (totalamount != null)
            {
                totalamountParameter = new ObjectParameter("totalamount", totalamount);
            }
            else
            {
                totalamountParameter = new ObjectParameter("totalamount", typeof(global::System.String));
            }
    
            ObjectParameter amountininrParameter;
            if (amountininr != null)
            {
                amountininrParameter = new ObjectParameter("Amountininr", amountininr);
            }
            else
            {
                amountininrParameter = new ObjectParameter("Amountininr", typeof(global::System.String));
            }
    
            ObjectParameter servicetaxParameter;
            if (servicetax != null)
            {
                servicetaxParameter = new ObjectParameter("servicetax", servicetax);
            }
            else
            {
                servicetaxParameter = new ObjectParameter("servicetax", typeof(global::System.String));
            }
    
            ObjectParameter amountpayableParameter;
            if (amountpayable != null)
            {
                amountpayableParameter = new ObjectParameter("amountpayable", amountpayable);
            }
            else
            {
                amountpayableParameter = new ObjectParameter("amountpayable", typeof(global::System.String));
            }
    
            ObjectParameter afterduedateParameter;
            if (afterduedate != null)
            {
                afterduedateParameter = new ObjectParameter("Afterduedate", afterduedate);
            }
            else
            {
                afterduedateParameter = new ObjectParameter("Afterduedate", typeof(global::System.String));
            }
    
            ObjectParameter conversionParameter;
            if (conversion != null)
            {
                conversionParameter = new ObjectParameter("conversion", conversion);
            }
            else
            {
                conversionParameter = new ObjectParameter("conversion", typeof(global::System.String));
            }
    
            ObjectParameter excelFileParameter;
            if (excelFile != null)
            {
                excelFileParameter = new ObjectParameter("ExcelFile", excelFile);
            }
            else
            {
                excelFileParameter = new ObjectParameter("ExcelFile", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("Branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("Branchcode", typeof(global::System.String));
            }
    
            ObjectParameter loginuserParameter;
            if (loginuser != null)
            {
                loginuserParameter = new ObjectParameter("loginuser", loginuser);
            }
            else
            {
                loginuserParameter = new ObjectParameter("loginuser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("billsummaryproc_Insert", fParameter, billsummaryidParameter, bdateParameter, usernameParameter, userParameter, billNoParameter, accountCodeParameter, countryParameter, agreementnoParameter, mobilenoParameter, billdateParameter, duedateParameter, billperiodParameter, currency1Parameter, currency2Parameter, rentalParameter, usegesParameter, aopfubsParameter, totalamountParameter, amountininrParameter, servicetaxParameter, amountpayableParameter, afterduedateParameter, conversionParameter, excelFileParameter, branchcodeParameter, loginuserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="sNO">No Metadata Documentation available.</param>
        /// <param name="nAME">No Metadata Documentation available.</param>
        /// <param name="aDDRESS">No Metadata Documentation available.</param>
        /// <param name="mOBILENO">No Metadata Documentation available.</param>
        /// <param name="eMAILID">No Metadata Documentation available.</param>
        /// <param name="pRODUCT">No Metadata Documentation available.</param>
        /// <param name="cOMMENT">No Metadata Documentation available.</param>
        /// <param name="showstatus">No Metadata Documentation available.</param>
        public int contacttableproc(global::System.String f, Nullable<global::System.Int64> sNO, global::System.String nAME, global::System.String aDDRESS, global::System.String mOBILENO, global::System.String eMAILID, global::System.String pRODUCT, global::System.String cOMMENT, global::System.String showstatus)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter sNOParameter;
            if (sNO.HasValue)
            {
                sNOParameter = new ObjectParameter("SNO", sNO);
            }
            else
            {
                sNOParameter = new ObjectParameter("SNO", typeof(global::System.Int64));
            }
    
            ObjectParameter nAMEParameter;
            if (nAME != null)
            {
                nAMEParameter = new ObjectParameter("NAME", nAME);
            }
            else
            {
                nAMEParameter = new ObjectParameter("NAME", typeof(global::System.String));
            }
    
            ObjectParameter aDDRESSParameter;
            if (aDDRESS != null)
            {
                aDDRESSParameter = new ObjectParameter("ADDRESS", aDDRESS);
            }
            else
            {
                aDDRESSParameter = new ObjectParameter("ADDRESS", typeof(global::System.String));
            }
    
            ObjectParameter mOBILENOParameter;
            if (mOBILENO != null)
            {
                mOBILENOParameter = new ObjectParameter("MOBILENO", mOBILENO);
            }
            else
            {
                mOBILENOParameter = new ObjectParameter("MOBILENO", typeof(global::System.String));
            }
    
            ObjectParameter eMAILIDParameter;
            if (eMAILID != null)
            {
                eMAILIDParameter = new ObjectParameter("EMAILID", eMAILID);
            }
            else
            {
                eMAILIDParameter = new ObjectParameter("EMAILID", typeof(global::System.String));
            }
    
            ObjectParameter pRODUCTParameter;
            if (pRODUCT != null)
            {
                pRODUCTParameter = new ObjectParameter("PRODUCT", pRODUCT);
            }
            else
            {
                pRODUCTParameter = new ObjectParameter("PRODUCT", typeof(global::System.String));
            }
    
            ObjectParameter cOMMENTParameter;
            if (cOMMENT != null)
            {
                cOMMENTParameter = new ObjectParameter("COMMENT", cOMMENT);
            }
            else
            {
                cOMMENTParameter = new ObjectParameter("COMMENT", typeof(global::System.String));
            }
    
            ObjectParameter showstatusParameter;
            if (showstatus != null)
            {
                showstatusParameter = new ObjectParameter("showstatus", showstatus);
            }
            else
            {
                showstatusParameter = new ObjectParameter("showstatus", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("contacttableproc", fParameter, sNOParameter, nAMEParameter, aDDRESSParameter, mOBILENOParameter, eMAILIDParameter, pRODUCTParameter, cOMMENTParameter, showstatusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="usertype">No Metadata Documentation available.</param>
        public ObjectResult<updatedataval_proc_Result> updatedataval_proc(global::System.String f, global::System.String usercode, global::System.String branchcode, global::System.String usertype)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter usertypeParameter;
            if (usertype != null)
            {
                usertypeParameter = new ObjectParameter("usertype", usertype);
            }
            else
            {
                usertypeParameter = new ObjectParameter("usertype", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<updatedataval_proc_Result>("updatedataval_proc", fParameter, usercodeParameter, branchcodeParameter, usertypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="billexcel">No Metadata Documentation available.</param>
        /// <param name="cafno">No Metadata Documentation available.</param>
        /// <param name="billno">No Metadata Documentation available.</param>
        /// <param name="mobileno">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="excelfilename">No Metadata Documentation available.</param>
        /// <param name="total">No Metadata Documentation available.</param>
        /// <param name="discount">No Metadata Documentation available.</param>
        /// <param name="grandtotal">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        public int billexcelproc(global::System.String f, Nullable<global::System.Int64> billexcel, global::System.String cafno, global::System.String billno, global::System.String mobileno, global::System.String username, global::System.String country, global::System.String excelfilename, global::System.String total, global::System.String discount, global::System.String grandtotal, global::System.String branchcode)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter billexcelParameter;
            if (billexcel.HasValue)
            {
                billexcelParameter = new ObjectParameter("billexcel", billexcel);
            }
            else
            {
                billexcelParameter = new ObjectParameter("billexcel", typeof(global::System.Int64));
            }
    
            ObjectParameter cafnoParameter;
            if (cafno != null)
            {
                cafnoParameter = new ObjectParameter("cafno", cafno);
            }
            else
            {
                cafnoParameter = new ObjectParameter("cafno", typeof(global::System.String));
            }
    
            ObjectParameter billnoParameter;
            if (billno != null)
            {
                billnoParameter = new ObjectParameter("billno", billno);
            }
            else
            {
                billnoParameter = new ObjectParameter("billno", typeof(global::System.String));
            }
    
            ObjectParameter mobilenoParameter;
            if (mobileno != null)
            {
                mobilenoParameter = new ObjectParameter("mobileno", mobileno);
            }
            else
            {
                mobilenoParameter = new ObjectParameter("mobileno", typeof(global::System.String));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            ObjectParameter excelfilenameParameter;
            if (excelfilename != null)
            {
                excelfilenameParameter = new ObjectParameter("excelfilename", excelfilename);
            }
            else
            {
                excelfilenameParameter = new ObjectParameter("excelfilename", typeof(global::System.String));
            }
    
            ObjectParameter totalParameter;
            if (total != null)
            {
                totalParameter = new ObjectParameter("total", total);
            }
            else
            {
                totalParameter = new ObjectParameter("total", typeof(global::System.String));
            }
    
            ObjectParameter discountParameter;
            if (discount != null)
            {
                discountParameter = new ObjectParameter("discount", discount);
            }
            else
            {
                discountParameter = new ObjectParameter("discount", typeof(global::System.String));
            }
    
            ObjectParameter grandtotalParameter;
            if (grandtotal != null)
            {
                grandtotalParameter = new ObjectParameter("grandtotal", grandtotal);
            }
            else
            {
                grandtotalParameter = new ObjectParameter("grandtotal", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("billexcelproc", fParameter, billexcelParameter, cafnoParameter, billnoParameter, mobilenoParameter, usernameParameter, countryParameter, excelfilenameParameter, totalParameter, discountParameter, grandtotalParameter, branchcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int purchaseautobillnoItem_proc(global::System.String branchcode, global::System.String formname, global::System.String usercode, ObjectParameter msg)
        {
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("purchaseautobillnoItem_proc", branchcodeParameter, formnameParameter, usercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int challanoutitemcounter_proc(global::System.String branchcode, global::System.String formname, global::System.String usercode, ObjectParameter msg)
        {
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("challanoutitemcounter_proc", branchcodeParameter, formnameParameter, usercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billno">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        public int citem_cout_proc(global::System.String billno, global::System.String branchcode, global::System.String usercode)
        {
            ObjectParameter billnoParameter;
            if (billno != null)
            {
                billnoParameter = new ObjectParameter("billno", billno);
            }
            else
            {
                billnoParameter = new ObjectParameter("billno", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("citem_cout_proc", billnoParameter, branchcodeParameter, usercodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mAILSETTING_ID">No Metadata Documentation available.</param>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="sMTP_ADDRESS">No Metadata Documentation available.</param>
        /// <param name="pORT_NUMBER">No Metadata Documentation available.</param>
        /// <param name="eNABLE_SSL">No Metadata Documentation available.</param>
        /// <param name="eMAIL_FROM">No Metadata Documentation available.</param>
        /// <param name="pASSWORD">No Metadata Documentation available.</param>
        /// <param name="sUBJECT">No Metadata Documentation available.</param>
        /// <param name="bODY">No Metadata Documentation available.</param>
        /// <param name="lOGINUSER">No Metadata Documentation available.</param>
        /// <param name="bRANCHCODE">No Metadata Documentation available.</param>
        /// <param name="a">No Metadata Documentation available.</param>
        /// <param name="b">No Metadata Documentation available.</param>
        public int MAILSETTINGTABLE_PROC(Nullable<global::System.Int64> mAILSETTING_ID, global::System.String f, global::System.String sMTP_ADDRESS, global::System.String pORT_NUMBER, Nullable<global::System.Boolean> eNABLE_SSL, global::System.String eMAIL_FROM, global::System.String pASSWORD, global::System.String sUBJECT, global::System.String bODY, global::System.String lOGINUSER, global::System.String bRANCHCODE, global::System.String a, global::System.String b)
        {
            ObjectParameter mAILSETTING_IDParameter;
            if (mAILSETTING_ID.HasValue)
            {
                mAILSETTING_IDParameter = new ObjectParameter("MAILSETTING_ID", mAILSETTING_ID);
            }
            else
            {
                mAILSETTING_IDParameter = new ObjectParameter("MAILSETTING_ID", typeof(global::System.Int64));
            }
    
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("F", f);
            }
            else
            {
                fParameter = new ObjectParameter("F", typeof(global::System.String));
            }
    
            ObjectParameter sMTP_ADDRESSParameter;
            if (sMTP_ADDRESS != null)
            {
                sMTP_ADDRESSParameter = new ObjectParameter("SMTP_ADDRESS", sMTP_ADDRESS);
            }
            else
            {
                sMTP_ADDRESSParameter = new ObjectParameter("SMTP_ADDRESS", typeof(global::System.String));
            }
    
            ObjectParameter pORT_NUMBERParameter;
            if (pORT_NUMBER != null)
            {
                pORT_NUMBERParameter = new ObjectParameter("PORT_NUMBER", pORT_NUMBER);
            }
            else
            {
                pORT_NUMBERParameter = new ObjectParameter("PORT_NUMBER", typeof(global::System.String));
            }
    
            ObjectParameter eNABLE_SSLParameter;
            if (eNABLE_SSL.HasValue)
            {
                eNABLE_SSLParameter = new ObjectParameter("ENABLE_SSL", eNABLE_SSL);
            }
            else
            {
                eNABLE_SSLParameter = new ObjectParameter("ENABLE_SSL", typeof(global::System.Boolean));
            }
    
            ObjectParameter eMAIL_FROMParameter;
            if (eMAIL_FROM != null)
            {
                eMAIL_FROMParameter = new ObjectParameter("EMAIL_FROM", eMAIL_FROM);
            }
            else
            {
                eMAIL_FROMParameter = new ObjectParameter("EMAIL_FROM", typeof(global::System.String));
            }
    
            ObjectParameter pASSWORDParameter;
            if (pASSWORD != null)
            {
                pASSWORDParameter = new ObjectParameter("PASSWORD", pASSWORD);
            }
            else
            {
                pASSWORDParameter = new ObjectParameter("PASSWORD", typeof(global::System.String));
            }
    
            ObjectParameter sUBJECTParameter;
            if (sUBJECT != null)
            {
                sUBJECTParameter = new ObjectParameter("SUBJECT", sUBJECT);
            }
            else
            {
                sUBJECTParameter = new ObjectParameter("SUBJECT", typeof(global::System.String));
            }
    
            ObjectParameter bODYParameter;
            if (bODY != null)
            {
                bODYParameter = new ObjectParameter("BODY", bODY);
            }
            else
            {
                bODYParameter = new ObjectParameter("BODY", typeof(global::System.String));
            }
    
            ObjectParameter lOGINUSERParameter;
            if (lOGINUSER != null)
            {
                lOGINUSERParameter = new ObjectParameter("LOGINUSER", lOGINUSER);
            }
            else
            {
                lOGINUSERParameter = new ObjectParameter("LOGINUSER", typeof(global::System.String));
            }
    
            ObjectParameter bRANCHCODEParameter;
            if (bRANCHCODE != null)
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", bRANCHCODE);
            }
            else
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", typeof(global::System.String));
            }
    
            ObjectParameter aParameter;
            if (a != null)
            {
                aParameter = new ObjectParameter("A", a);
            }
            else
            {
                aParameter = new ObjectParameter("A", typeof(global::System.String));
            }
    
            ObjectParameter bParameter;
            if (b != null)
            {
                bParameter = new ObjectParameter("B", b);
            }
            else
            {
                bParameter = new ObjectParameter("B", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("MAILSETTINGTABLE_PROC", mAILSETTING_IDParameter, fParameter, sMTP_ADDRESSParameter, pORT_NUMBERParameter, eNABLE_SSLParameter, eMAIL_FROMParameter, pASSWORDParameter, sUBJECTParameter, bODYParameter, lOGINUSERParameter, bRANCHCODEParameter, aParameter, bParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="cAFNO">No Metadata Documentation available.</param>
        /// <param name="bRANCHCODE">No Metadata Documentation available.</param>
        public ObjectResult<SENDMAIL_PROC_Result> SENDMAIL_PROC(global::System.String f, global::System.String cAFNO, global::System.String bRANCHCODE)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("F", f);
            }
            else
            {
                fParameter = new ObjectParameter("F", typeof(global::System.String));
            }
    
            ObjectParameter cAFNOParameter;
            if (cAFNO != null)
            {
                cAFNOParameter = new ObjectParameter("CAFNO", cAFNO);
            }
            else
            {
                cAFNOParameter = new ObjectParameter("CAFNO", typeof(global::System.String));
            }
    
            ObjectParameter bRANCHCODEParameter;
            if (bRANCHCODE != null)
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", bRANCHCODE);
            }
            else
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SENDMAIL_PROC_Result>("SENDMAIL_PROC", fParameter, cAFNOParameter, bRANCHCODEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="pROFILE_ID">No Metadata Documentation available.</param>
        /// <param name="pROFILE_NAME">No Metadata Documentation available.</param>
        /// <param name="a">No Metadata Documentation available.</param>
        /// <param name="b">No Metadata Documentation available.</param>
        /// <param name="c">No Metadata Documentation available.</param>
        /// <param name="d">No Metadata Documentation available.</param>
        /// <param name="e">No Metadata Documentation available.</param>
        /// <param name="g">No Metadata Documentation available.</param>
        /// <param name="h">No Metadata Documentation available.</param>
        /// <param name="i">No Metadata Documentation available.</param>
        /// <param name="bRANCHCODE">No Metadata Documentation available.</param>
        /// <param name="lOGINUSERCODE">No Metadata Documentation available.</param>
        public int PROFILE_TABLE_PROC(global::System.String f, Nullable<global::System.Int64> pROFILE_ID, global::System.String pROFILE_NAME, global::System.String a, global::System.String b, global::System.String c, global::System.String d, global::System.String e, global::System.String g, global::System.String h, global::System.String i, global::System.String bRANCHCODE, global::System.String lOGINUSERCODE)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("F", f);
            }
            else
            {
                fParameter = new ObjectParameter("F", typeof(global::System.String));
            }
    
            ObjectParameter pROFILE_IDParameter;
            if (pROFILE_ID.HasValue)
            {
                pROFILE_IDParameter = new ObjectParameter("PROFILE_ID", pROFILE_ID);
            }
            else
            {
                pROFILE_IDParameter = new ObjectParameter("PROFILE_ID", typeof(global::System.Int64));
            }
    
            ObjectParameter pROFILE_NAMEParameter;
            if (pROFILE_NAME != null)
            {
                pROFILE_NAMEParameter = new ObjectParameter("PROFILE_NAME", pROFILE_NAME);
            }
            else
            {
                pROFILE_NAMEParameter = new ObjectParameter("PROFILE_NAME", typeof(global::System.String));
            }
    
            ObjectParameter aParameter;
            if (a != null)
            {
                aParameter = new ObjectParameter("A", a);
            }
            else
            {
                aParameter = new ObjectParameter("A", typeof(global::System.String));
            }
    
            ObjectParameter bParameter;
            if (b != null)
            {
                bParameter = new ObjectParameter("B", b);
            }
            else
            {
                bParameter = new ObjectParameter("B", typeof(global::System.String));
            }
    
            ObjectParameter cParameter;
            if (c != null)
            {
                cParameter = new ObjectParameter("C", c);
            }
            else
            {
                cParameter = new ObjectParameter("C", typeof(global::System.String));
            }
    
            ObjectParameter dParameter;
            if (d != null)
            {
                dParameter = new ObjectParameter("D", d);
            }
            else
            {
                dParameter = new ObjectParameter("D", typeof(global::System.String));
            }
    
            ObjectParameter eParameter;
            if (e != null)
            {
                eParameter = new ObjectParameter("E", e);
            }
            else
            {
                eParameter = new ObjectParameter("E", typeof(global::System.String));
            }
    
            ObjectParameter gParameter;
            if (g != null)
            {
                gParameter = new ObjectParameter("G", g);
            }
            else
            {
                gParameter = new ObjectParameter("G", typeof(global::System.String));
            }
    
            ObjectParameter hParameter;
            if (h != null)
            {
                hParameter = new ObjectParameter("H", h);
            }
            else
            {
                hParameter = new ObjectParameter("H", typeof(global::System.String));
            }
    
            ObjectParameter iParameter;
            if (i != null)
            {
                iParameter = new ObjectParameter("I", i);
            }
            else
            {
                iParameter = new ObjectParameter("I", typeof(global::System.String));
            }
    
            ObjectParameter bRANCHCODEParameter;
            if (bRANCHCODE != null)
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", bRANCHCODE);
            }
            else
            {
                bRANCHCODEParameter = new ObjectParameter("BRANCHCODE", typeof(global::System.String));
            }
    
            ObjectParameter lOGINUSERCODEParameter;
            if (lOGINUSERCODE != null)
            {
                lOGINUSERCODEParameter = new ObjectParameter("LOGINUSERCODE", lOGINUSERCODE);
            }
            else
            {
                lOGINUSERCODEParameter = new ObjectParameter("LOGINUSERCODE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("PROFILE_TABLE_PROC", fParameter, pROFILE_IDParameter, pROFILE_NAMEParameter, aParameter, bParameter, cParameter, dParameter, eParameter, gParameter, hParameter, iParameter, bRANCHCODEParameter, lOGINUSERCODEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="voucher_id">No Metadata Documentation available.</param>
        public int newvoucher(global::System.String f, Nullable<global::System.Int32> voucher_id)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter voucher_idParameter;
            if (voucher_id.HasValue)
            {
                voucher_idParameter = new ObjectParameter("voucher_id", voucher_id);
            }
            else
            {
                voucher_idParameter = new ObjectParameter("voucher_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("newvoucher", fParameter, voucher_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="formname">No Metadata Documentation available.</param>
        /// <param name="usercode">No Metadata Documentation available.</param>
        /// <param name="msg">No Metadata Documentation available.</param>
        public int Voucherautobillno_proc(global::System.String branchcode, global::System.String formname, global::System.String usercode, ObjectParameter msg)
        {
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter formnameParameter;
            if (formname != null)
            {
                formnameParameter = new ObjectParameter("formname", formname);
            }
            else
            {
                formnameParameter = new ObjectParameter("formname", typeof(global::System.String));
            }
    
            ObjectParameter usercodeParameter;
            if (usercode != null)
            {
                usercodeParameter = new ObjectParameter("usercode", usercode);
            }
            else
            {
                usercodeParameter = new ObjectParameter("usercode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("Voucherautobillno_proc", branchcodeParameter, formnameParameter, usercodeParameter, msg);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="acno">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        public ObjectResult<paymentSearch_Result1> paymentSearch(global::System.String f, global::System.String acno, global::System.String branchcode)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter acnoParameter;
            if (acno != null)
            {
                acnoParameter = new ObjectParameter("Acno", acno);
            }
            else
            {
                acnoParameter = new ObjectParameter("Acno", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<paymentSearch_Result1>("paymentSearch", fParameter, acnoParameter, branchcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="aLvoucher_Id">No Metadata Documentation available.</param>
        public int allvoDelete(global::System.String f, global::System.String aLvoucher_Id)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter aLvoucher_IdParameter;
            if (aLvoucher_Id != null)
            {
                aLvoucher_IdParameter = new ObjectParameter("ALvoucher_Id", aLvoucher_Id);
            }
            else
            {
                aLvoucher_IdParameter = new ObjectParameter("ALvoucher_Id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("allvoDelete", fParameter, aLvoucher_IdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="f">No Metadata Documentation available.</param>
        /// <param name="challanno">No Metadata Documentation available.</param>
        /// <param name="cdate">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="simno">No Metadata Documentation available.</param>
        /// <param name="handSetName">No Metadata Documentation available.</param>
        /// <param name="handOverBy">No Metadata Documentation available.</param>
        /// <param name="executive_Code">No Metadata Documentation available.</param>
        /// <param name="executivename">No Metadata Documentation available.</param>
        /// <param name="executivenameto">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="branchcode">No Metadata Documentation available.</param>
        /// <param name="partnersname">No Metadata Documentation available.</param>
        public int challanINothersproc(global::System.String f, global::System.String challanno, global::System.String cdate, global::System.String country, global::System.String simno, global::System.String handSetName, global::System.String handOverBy, global::System.String executive_Code, global::System.String executivename, global::System.String executivenameto, global::System.String status, global::System.String branchcode, global::System.String partnersname)
        {
            ObjectParameter fParameter;
            if (f != null)
            {
                fParameter = new ObjectParameter("f", f);
            }
            else
            {
                fParameter = new ObjectParameter("f", typeof(global::System.String));
            }
    
            ObjectParameter challannoParameter;
            if (challanno != null)
            {
                challannoParameter = new ObjectParameter("challanno", challanno);
            }
            else
            {
                challannoParameter = new ObjectParameter("challanno", typeof(global::System.String));
            }
    
            ObjectParameter cdateParameter;
            if (cdate != null)
            {
                cdateParameter = new ObjectParameter("cdate", cdate);
            }
            else
            {
                cdateParameter = new ObjectParameter("cdate", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            ObjectParameter simnoParameter;
            if (simno != null)
            {
                simnoParameter = new ObjectParameter("simno", simno);
            }
            else
            {
                simnoParameter = new ObjectParameter("simno", typeof(global::System.String));
            }
    
            ObjectParameter handSetNameParameter;
            if (handSetName != null)
            {
                handSetNameParameter = new ObjectParameter("HandSetName", handSetName);
            }
            else
            {
                handSetNameParameter = new ObjectParameter("HandSetName", typeof(global::System.String));
            }
    
            ObjectParameter handOverByParameter;
            if (handOverBy != null)
            {
                handOverByParameter = new ObjectParameter("HandOverBy", handOverBy);
            }
            else
            {
                handOverByParameter = new ObjectParameter("HandOverBy", typeof(global::System.String));
            }
    
            ObjectParameter executive_CodeParameter;
            if (executive_Code != null)
            {
                executive_CodeParameter = new ObjectParameter("Executive_Code", executive_Code);
            }
            else
            {
                executive_CodeParameter = new ObjectParameter("Executive_Code", typeof(global::System.String));
            }
    
            ObjectParameter executivenameParameter;
            if (executivename != null)
            {
                executivenameParameter = new ObjectParameter("executivename", executivename);
            }
            else
            {
                executivenameParameter = new ObjectParameter("executivename", typeof(global::System.String));
            }
    
            ObjectParameter executivenametoParameter;
            if (executivenameto != null)
            {
                executivenametoParameter = new ObjectParameter("executivenameto", executivenameto);
            }
            else
            {
                executivenametoParameter = new ObjectParameter("executivenameto", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            ObjectParameter branchcodeParameter;
            if (branchcode != null)
            {
                branchcodeParameter = new ObjectParameter("branchcode", branchcode);
            }
            else
            {
                branchcodeParameter = new ObjectParameter("branchcode", typeof(global::System.String));
            }
    
            ObjectParameter partnersnameParameter;
            if (partnersname != null)
            {
                partnersnameParameter = new ObjectParameter("partnersname", partnersname);
            }
            else
            {
                partnersnameParameter = new ObjectParameter("partnersname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("challanINothersproc", fParameter, challannoParameter, cdateParameter, countryParameter, simnoParameter, handSetNameParameter, handOverByParameter, executive_CodeParameter, executivenameParameter, executivenametoParameter, statusParameter, branchcodeParameter, partnersnameParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="AddNewTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddNewTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddNewTable object.
        /// </summary>
        /// <param name="addNewid">Initial value of the AddNewid property.</param>
        /// <param name="execCode">Initial value of the ExecCode property.</param>
        public static AddNewTable CreateAddNewTable(global::System.Int64 addNewid, global::System.String execCode)
        {
            AddNewTable addNewTable = new AddNewTable();
            addNewTable.AddNewid = addNewid;
            addNewTable.ExecCode = execCode;
            return addNewTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AddNewid
        {
            get
            {
                return _AddNewid;
            }
            set
            {
                OnAddNewidChanging(value);
                ReportPropertyChanging("AddNewid");
                _AddNewid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddNewid");
                OnAddNewidChanged();
            }
        }
        private global::System.Int64 _AddNewid;
        partial void OnAddNewidChanging(global::System.Int64 value);
        partial void OnAddNewidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SDate
        {
            get
            {
                return _SDate;
            }
            set
            {
                OnSDateChanging(value);
                ReportPropertyChanging("SDate");
                _SDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SDate");
                OnSDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SDate;
        partial void OnSDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LDate
        {
            get
            {
                return _LDate;
            }
            set
            {
                OnLDateChanging(value);
                ReportPropertyChanging("LDate");
                _LDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LDate");
                OnLDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LDate;
        partial void OnLDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExecCode
        {
            get
            {
                return _ExecCode;
            }
            set
            {
                if (_ExecCode != value)
                {
                    OnExecCodeChanging(value);
                    ReportPropertyChanging("ExecCode");
                    _ExecCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ExecCode");
                    OnExecCodeChanged();
                }
            }
        }
        private global::System.String _ExecCode;
        partial void OnExecCodeChanging(global::System.String value);
        partial void OnExecCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExecName
        {
            get
            {
                return _ExecName;
            }
            set
            {
                OnExecNameChanging(value);
                ReportPropertyChanging("ExecName");
                _ExecName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExecName");
                OnExecNameChanged();
            }
        }
        private global::System.String _ExecName;
        partial void OnExecNameChanging(global::System.String value);
        partial void OnExecNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="ADDTARIF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ADDTARIF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ADDTARIF object.
        /// </summary>
        /// <param name="sNO">Initial value of the SNO property.</param>
        public static ADDTARIF CreateADDTARIF(global::System.Int64 sNO)
        {
            ADDTARIF aDDTARIF = new ADDTARIF();
            aDDTARIF.SNO = sNO;
            return aDDTARIF;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SNO
        {
            get
            {
                return _SNO;
            }
            set
            {
                if (_SNO != value)
                {
                    OnSNOChanging(value);
                    ReportPropertyChanging("SNO");
                    _SNO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SNO");
                    OnSNOChanged();
                }
            }
        }
        private global::System.Int64 _SNO;
        partial void OnSNOChanging(global::System.Int64 value);
        partial void OnSNOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TARIFF_CODE
        {
            get
            {
                return _TARIFF_CODE;
            }
            set
            {
                OnTARIFF_CODEChanging(value);
                ReportPropertyChanging("TARIFF_CODE");
                _TARIFF_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TARIFF_CODE");
                OnTARIFF_CODEChanged();
            }
        }
        private global::System.String _TARIFF_CODE;
        partial void OnTARIFF_CODEChanging(global::System.String value);
        partial void OnTARIFF_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY
        {
            get
            {
                return _COUNTRY;
            }
            set
            {
                OnCOUNTRYChanging(value);
                ReportPropertyChanging("COUNTRY");
                _COUNTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COUNTRY");
                OnCOUNTRYChanged();
            }
        }
        private global::System.String _COUNTRY;
        partial void OnCOUNTRYChanging(global::System.String value);
        partial void OnCOUNTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLANTYPE
        {
            get
            {
                return _PLANTYPE;
            }
            set
            {
                OnPLANTYPEChanging(value);
                ReportPropertyChanging("PLANTYPE");
                _PLANTYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PLANTYPE");
                OnPLANTYPEChanged();
            }
        }
        private global::System.String _PLANTYPE;
        partial void OnPLANTYPEChanging(global::System.String value);
        partial void OnPLANTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CHARGESTYPE
        {
            get
            {
                return _CHARGESTYPE;
            }
            set
            {
                OnCHARGESTYPEChanging(value);
                ReportPropertyChanging("CHARGESTYPE");
                _CHARGESTYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CHARGESTYPE");
                OnCHARGESTYPEChanged();
            }
        }
        private global::System.String _CHARGESTYPE;
        partial void OnCHARGESTYPEChanging(global::System.String value);
        partial void OnCHARGESTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private global::System.String _VALUE;
        partial void OnVALUEChanging(global::System.String value);
        partial void OnVALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TALK_VALUE
        {
            get
            {
                return _TALK_VALUE;
            }
            set
            {
                OnTALK_VALUEChanging(value);
                ReportPropertyChanging("TALK_VALUE");
                _TALK_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TALK_VALUE");
                OnTALK_VALUEChanged();
            }
        }
        private global::System.String _TALK_VALUE;
        partial void OnTALK_VALUEChanging(global::System.String value);
        partial void OnTALK_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PERMINCHARGES
        {
            get
            {
                return _PERMINCHARGES;
            }
            set
            {
                OnPERMINCHARGESChanging(value);
                ReportPropertyChanging("PERMINCHARGES");
                _PERMINCHARGES = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PERMINCHARGES");
                OnPERMINCHARGESChanged();
            }
        }
        private global::System.String _PERMINCHARGES;
        partial void OnPERMINCHARGESChanging(global::System.String value);
        partial void OnPERMINCHARGESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VALIDITY_DAYS
        {
            get
            {
                return _VALIDITY_DAYS;
            }
            set
            {
                OnVALIDITY_DAYSChanging(value);
                ReportPropertyChanging("VALIDITY_DAYS");
                _VALIDITY_DAYS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VALIDITY_DAYS");
                OnVALIDITY_DAYSChanged();
            }
        }
        private global::System.String _VALIDITY_DAYS;
        partial void OnVALIDITY_DAYSChanging(global::System.String value);
        partial void OnVALIDITY_DAYSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_FROM
        {
            get
            {
                return _COUNTRY_FROM;
            }
            set
            {
                OnCOUNTRY_FROMChanging(value);
                ReportPropertyChanging("COUNTRY_FROM");
                _COUNTRY_FROM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COUNTRY_FROM");
                OnCOUNTRY_FROMChanged();
            }
        }
        private global::System.String _COUNTRY_FROM;
        partial void OnCOUNTRY_FROMChanging(global::System.String value);
        partial void OnCOUNTRY_FROMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_TO
        {
            get
            {
                return _COUNTRY_TO;
            }
            set
            {
                OnCOUNTRY_TOChanging(value);
                ReportPropertyChanging("COUNTRY_TO");
                _COUNTRY_TO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COUNTRY_TO");
                OnCOUNTRY_TOChanged();
            }
        }
        private global::System.String _COUNTRY_TO;
        partial void OnCOUNTRY_TOChanging(global::System.String value);
        partial void OnCOUNTRY_TOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String A
        {
            get
            {
                return _A;
            }
            set
            {
                OnAChanging(value);
                ReportPropertyChanging("A");
                _A = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("A");
                OnAChanged();
            }
        }
        private global::System.String _A;
        partial void OnAChanging(global::System.String value);
        partial void OnAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String B
        {
            get
            {
                return _B;
            }
            set
            {
                OnBChanging(value);
                ReportPropertyChanging("B");
                _B = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("B");
                OnBChanged();
            }
        }
        private global::System.String _B;
        partial void OnBChanging(global::System.String value);
        partial void OnBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String C
        {
            get
            {
                return _C;
            }
            set
            {
                OnCChanging(value);
                ReportPropertyChanging("C");
                _C = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("C");
                OnCChanged();
            }
        }
        private global::System.String _C;
        partial void OnCChanging(global::System.String value);
        partial void OnCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String D
        {
            get
            {
                return _D;
            }
            set
            {
                OnDChanging(value);
                ReportPropertyChanging("D");
                _D = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("D");
                OnDChanged();
            }
        }
        private global::System.String _D;
        partial void OnDChanging(global::System.String value);
        partial void OnDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="billexcel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class billexcel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new billexcel object.
        /// </summary>
        /// <param name="billexcel1">Initial value of the billexcel1 property.</param>
        /// <param name="cafno">Initial value of the cafno property.</param>
        public static billexcel Createbillexcel(global::System.Int64 billexcel1, global::System.String cafno)
        {
            billexcel billexcel = new billexcel();
            billexcel.billexcel1 = billexcel1;
            billexcel.cafno = cafno;
            return billexcel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 billexcel1
        {
            get
            {
                return _billexcel1;
            }
            set
            {
                Onbillexcel1Changing(value);
                ReportPropertyChanging("billexcel1");
                _billexcel1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("billexcel1");
                Onbillexcel1Changed();
            }
        }
        private global::System.Int64 _billexcel1;
        partial void Onbillexcel1Changing(global::System.Int64 value);
        partial void Onbillexcel1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cafno
        {
            get
            {
                return _cafno;
            }
            set
            {
                if (_cafno != value)
                {
                    OncafnoChanging(value);
                    ReportPropertyChanging("cafno");
                    _cafno = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cafno");
                    OncafnoChanged();
                }
            }
        }
        private global::System.String _cafno;
        partial void OncafnoChanging(global::System.String value);
        partial void OncafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mobileno
        {
            get
            {
                return _mobileno;
            }
            set
            {
                OnmobilenoChanging(value);
                ReportPropertyChanging("mobileno");
                _mobileno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mobileno");
                OnmobilenoChanged();
            }
        }
        private global::System.String _mobileno;
        partial void OnmobilenoChanging(global::System.String value);
        partial void OnmobilenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String excelfilename
        {
            get
            {
                return _excelfilename;
            }
            set
            {
                OnexcelfilenameChanging(value);
                ReportPropertyChanging("excelfilename");
                _excelfilename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("excelfilename");
                OnexcelfilenameChanged();
            }
        }
        private global::System.String _excelfilename;
        partial void OnexcelfilenameChanging(global::System.String value);
        partial void OnexcelfilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String total
        {
            get
            {
                return _total;
            }
            set
            {
                OntotalChanging(value);
                ReportPropertyChanging("total");
                _total = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("total");
                OntotalChanged();
            }
        }
        private global::System.String _total;
        partial void OntotalChanging(global::System.String value);
        partial void OntotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String discount
        {
            get
            {
                return _discount;
            }
            set
            {
                OndiscountChanging(value);
                ReportPropertyChanging("discount");
                _discount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("discount");
                OndiscountChanged();
            }
        }
        private global::System.String _discount;
        partial void OndiscountChanging(global::System.String value);
        partial void OndiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String grandtotal
        {
            get
            {
                return _grandtotal;
            }
            set
            {
                OngrandtotalChanging(value);
                ReportPropertyChanging("grandtotal");
                _grandtotal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("grandtotal");
                OngrandtotalChanged();
            }
        }
        private global::System.String _grandtotal;
        partial void OngrandtotalChanging(global::System.String value);
        partial void OngrandtotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String loginuser
        {
            get
            {
                return _loginuser;
            }
            set
            {
                OnloginuserChanging(value);
                ReportPropertyChanging("loginuser");
                _loginuser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("loginuser");
                OnloginuserChanged();
            }
        }
        private global::System.String _loginuser;
        partial void OnloginuserChanging(global::System.String value);
        partial void OnloginuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="BillUpload")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillUpload : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillUpload object.
        /// </summary>
        /// <param name="billid">Initial value of the billid property.</param>
        /// <param name="cafno">Initial value of the cafno property.</param>
        public static BillUpload CreateBillUpload(global::System.Int64 billid, global::System.String cafno)
        {
            BillUpload billUpload = new BillUpload();
            billUpload.billid = billid;
            billUpload.cafno = cafno;
            return billUpload;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 billid
        {
            get
            {
                return _billid;
            }
            set
            {
                if (_billid != value)
                {
                    OnbillidChanging(value);
                    ReportPropertyChanging("billid");
                    _billid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("billid");
                    OnbillidChanged();
                }
            }
        }
        private global::System.Int64 _billid;
        partial void OnbillidChanging(global::System.Int64 value);
        partial void OnbillidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cafno
        {
            get
            {
                return _cafno;
            }
            set
            {
                OncafnoChanging(value);
                ReportPropertyChanging("cafno");
                _cafno = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cafno");
                OncafnoChanged();
            }
        }
        private global::System.String _cafno;
        partial void OncafnoChanging(global::System.String value);
        partial void OncafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private global::System.String _amount;
        partial void OnamountChanging(global::System.String value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String particulars
        {
            get
            {
                return _particulars;
            }
            set
            {
                OnparticularsChanging(value);
                ReportPropertyChanging("particulars");
                _particulars = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("particulars");
                OnparticularsChanged();
            }
        }
        private global::System.String _particulars;
        partial void OnparticularsChanging(global::System.String value);
        partial void OnparticularsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.String _date;
        partial void OndateChanging(global::System.String value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String caffile
        {
            get
            {
                return _caffile;
            }
            set
            {
                OncaffileChanging(value);
                ReportPropertyChanging("caffile");
                _caffile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("caffile");
                OncaffileChanged();
            }
        }
        private global::System.String _caffile;
        partial void OncaffileChanging(global::System.String value);
        partial void OncaffileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billfile
        {
            get
            {
                return _billfile;
            }
            set
            {
                OnbillfileChanging(value);
                ReportPropertyChanging("billfile");
                _billfile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billfile");
                OnbillfileChanged();
            }
        }
        private global::System.String _billfile;
        partial void OnbillfileChanging(global::System.String value);
        partial void OnbillfileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String execcode
        {
            get
            {
                return _execcode;
            }
            set
            {
                OnexeccodeChanging(value);
                ReportPropertyChanging("execcode");
                _execcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("execcode");
                OnexeccodeChanged();
            }
        }
        private global::System.String _execcode;
        partial void OnexeccodeChanging(global::System.String value);
        partial void OnexeccodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_BillUpload_ClientMaster", "ClientMaster")]
        public ClientMaster ClientMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientMaster>("inventoryforwebappModel.FK_BillUpload_ClientMaster", "ClientMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientMaster>("inventoryforwebappModel.FK_BillUpload_ClientMaster", "ClientMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientMaster> ClientMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientMaster>("inventoryforwebappModel.FK_BillUpload_ClientMaster", "ClientMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientMaster>("inventoryforwebappModel.FK_BillUpload_ClientMaster", "ClientMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="ChallanIn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChallanIn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChallanIn object.
        /// </summary>
        /// <param name="pkchallanin">Initial value of the pkchallanin property.</param>
        /// <param name="loginUsercode">Initial value of the LoginUsercode property.</param>
        public static ChallanIn CreateChallanIn(global::System.Int64 pkchallanin, global::System.String loginUsercode)
        {
            ChallanIn challanIn = new ChallanIn();
            challanIn.pkchallanin = pkchallanin;
            challanIn.LoginUsercode = loginUsercode;
            return challanIn;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String chdate
        {
            get
            {
                return _chdate;
            }
            set
            {
                OnchdateChanging(value);
                ReportPropertyChanging("chdate");
                _chdate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("chdate");
                OnchdateChanged();
            }
        }
        private global::System.String _chdate;
        partial void OnchdateChanging(global::System.String value);
        partial void OnchdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 pkchallanin
        {
            get
            {
                return _pkchallanin;
            }
            set
            {
                if (_pkchallanin != value)
                {
                    OnpkchallaninChanging(value);
                    ReportPropertyChanging("pkchallanin");
                    _pkchallanin = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pkchallanin");
                    OnpkchallaninChanged();
                }
            }
        }
        private global::System.Int64 _pkchallanin;
        partial void OnpkchallaninChanging(global::System.Int64 value);
        partial void OnpkchallaninChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> fkchallanoutid
        {
            get
            {
                return _fkchallanoutid;
            }
            set
            {
                OnfkchallanoutidChanging(value);
                ReportPropertyChanging("fkchallanoutid");
                _fkchallanoutid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkchallanoutid");
                OnfkchallanoutidChanged();
            }
        }
        private Nullable<global::System.Int64> _fkchallanoutid;
        partial void OnfkchallanoutidChanging(Nullable<global::System.Int64> value);
        partial void OnfkchallanoutidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChallanNo
        {
            get
            {
                return _ChallanNo;
            }
            set
            {
                OnChallanNoChanging(value);
                ReportPropertyChanging("ChallanNo");
                _ChallanNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChallanNo");
                OnChallanNoChanged();
            }
        }
        private global::System.String _ChallanNo;
        partial void OnChallanNoChanging(global::System.String value);
        partial void OnChallanNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimNo
        {
            get
            {
                return _SimNo;
            }
            set
            {
                OnSimNoChanging(value);
                ReportPropertyChanging("SimNo");
                _SimNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimNo");
                OnSimNoChanged();
            }
        }
        private global::System.String _SimNo;
        partial void OnSimNoChanging(global::System.String value);
        partial void OnSimNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNo
        {
            get
            {
                return _MobileNo;
            }
            set
            {
                OnMobileNoChanging(value);
                ReportPropertyChanging("MobileNo");
                _MobileNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileNo");
                OnMobileNoChanged();
            }
        }
        private global::System.String _MobileNo;
        partial void OnMobileNoChanging(global::System.String value);
        partial void OnMobileNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExecName
        {
            get
            {
                return _ExecName;
            }
            set
            {
                OnExecNameChanging(value);
                ReportPropertyChanging("ExecName");
                _ExecName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExecName");
                OnExecNameChanged();
            }
        }
        private global::System.String _ExecName;
        partial void OnExecNameChanging(global::System.String value);
        partial void OnExecNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginUsercode
        {
            get
            {
                return _LoginUsercode;
            }
            set
            {
                OnLoginUsercodeChanging(value);
                ReportPropertyChanging("LoginUsercode");
                _LoginUsercode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginUsercode");
                OnLoginUsercodeChanged();
            }
        }
        private global::System.String _LoginUsercode;
        partial void OnLoginUsercodeChanging(global::System.String value);
        partial void OnLoginUsercodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="challanout")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class challanout : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new challanout object.
        /// </summary>
        /// <param name="country">Initial value of the country property.</param>
        /// <param name="others">Initial value of the others property.</param>
        /// <param name="pkchallanid">Initial value of the pkchallanid property.</param>
        public static challanout Createchallanout(global::System.String country, global::System.String others, global::System.Int64 pkchallanid)
        {
            challanout challanout = new challanout();
            challanout.country = country;
            challanout.others = others;
            challanout.pkchallanid = pkchallanid;
            return challanout;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String challanno
        {
            get
            {
                return _challanno;
            }
            set
            {
                OnchallannoChanging(value);
                ReportPropertyChanging("challanno");
                _challanno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("challanno");
                OnchallannoChanged();
            }
        }
        private global::System.String _challanno;
        partial void OnchallannoChanging(global::System.String value);
        partial void OnchallannoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> cdate
        {
            get
            {
                return _cdate;
            }
            set
            {
                OncdateChanging(value);
                ReportPropertyChanging("cdate");
                _cdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cdate");
                OncdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _cdate;
        partial void OncdateChanging(Nullable<global::System.DateTime> value);
        partial void OncdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemtype
        {
            get
            {
                return _itemtype;
            }
            set
            {
                OnitemtypeChanging(value);
                ReportPropertyChanging("itemtype");
                _itemtype = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itemtype");
                OnitemtypeChanged();
            }
        }
        private global::System.String _itemtype;
        partial void OnitemtypeChanging(global::System.String value);
        partial void OnitemtypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String others
        {
            get
            {
                return _others;
            }
            set
            {
                OnothersChanging(value);
                ReportPropertyChanging("others");
                _others = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("others");
                OnothersChanged();
            }
        }
        private global::System.String _others;
        partial void OnothersChanging(global::System.String value);
        partial void OnothersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String executivenameto
        {
            get
            {
                return _executivenameto;
            }
            set
            {
                OnexecutivenametoChanging(value);
                ReportPropertyChanging("executivenameto");
                _executivenameto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("executivenameto");
                OnexecutivenametoChanged();
            }
        }
        private global::System.String _executivenameto;
        partial void OnexecutivenametoChanging(global::System.String value);
        partial void OnexecutivenametoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String executivename
        {
            get
            {
                return _executivename;
            }
            set
            {
                OnexecutivenameChanging(value);
                ReportPropertyChanging("executivename");
                _executivename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("executivename");
                OnexecutivenameChanged();
            }
        }
        private global::System.String _executivename;
        partial void OnexecutivenameChanging(global::System.String value);
        partial void OnexecutivenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 pkchallanid
        {
            get
            {
                return _pkchallanid;
            }
            set
            {
                if (_pkchallanid != value)
                {
                    OnpkchallanidChanging(value);
                    ReportPropertyChanging("pkchallanid");
                    _pkchallanid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pkchallanid");
                    OnpkchallanidChanged();
                }
            }
        }
        private global::System.Int64 _pkchallanid;
        partial void OnpkchallanidChanging(global::System.Int64 value);
        partial void OnpkchallanidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String givento
        {
            get
            {
                return _givento;
            }
            set
            {
                OngiventoChanging(value);
                ReportPropertyChanging("givento");
                _givento = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("givento");
                OngiventoChanged();
            }
        }
        private global::System.String _givento;
        partial void OngiventoChanging(global::System.String value);
        partial void OngiventoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_challanout_CountryList", "CountryList")]
        public CountryList CountryList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_challanout_CountryList", "CountryList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_challanout_CountryList", "CountryList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryList> CountryListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_challanout_CountryList", "CountryList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryList>("inventoryforwebappModel.FK_challanout_CountryList", "CountryList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_challanout_PurchaseEntry", "PurchaseEntry")]
        public PurchaseEntry PurchaseEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntry>("inventoryforwebappModel.FK_challanout_PurchaseEntry", "PurchaseEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntry>("inventoryforwebappModel.FK_challanout_PurchaseEntry", "PurchaseEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseEntry> PurchaseEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntry>("inventoryforwebappModel.FK_challanout_PurchaseEntry", "PurchaseEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseEntry>("inventoryforwebappModel.FK_challanout_PurchaseEntry", "PurchaseEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMaster_challanout", "ClientMaster")]
        public EntityCollection<ClientMaster> ClientMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientMaster>("inventoryforwebappModel.FK_ClientMaster_challanout", "ClientMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientMaster>("inventoryforwebappModel.FK_ClientMaster_challanout", "ClientMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="challanoutcounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class challanoutcounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new challanoutcounter object.
        /// </summary>
        /// <param name="challanoutid">Initial value of the challanoutid property.</param>
        public static challanoutcounter Createchallanoutcounter(global::System.Int64 challanoutid)
        {
            challanoutcounter challanoutcounter = new challanoutcounter();
            challanoutcounter.challanoutid = challanoutid;
            return challanoutcounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 challanoutid
        {
            get
            {
                return _challanoutid;
            }
            set
            {
                if (_challanoutid != value)
                {
                    OnchallanoutidChanging(value);
                    ReportPropertyChanging("challanoutid");
                    _challanoutid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("challanoutid");
                    OnchallanoutidChanged();
                }
            }
        }
        private global::System.Int64 _challanoutid;
        partial void OnchallanoutidChanging(global::System.Int64 value);
        partial void OnchallanoutidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="challanoutitemcounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class challanoutitemcounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new challanoutitemcounter object.
        /// </summary>
        /// <param name="challanoutitemid">Initial value of the challanoutitemid property.</param>
        public static challanoutitemcounter Createchallanoutitemcounter(global::System.Int64 challanoutitemid)
        {
            challanoutitemcounter challanoutitemcounter = new challanoutitemcounter();
            challanoutitemcounter.challanoutitemid = challanoutitemid;
            return challanoutitemcounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 challanoutitemid
        {
            get
            {
                return _challanoutitemid;
            }
            set
            {
                if (_challanoutitemid != value)
                {
                    OnchallanoutitemidChanging(value);
                    ReportPropertyChanging("challanoutitemid");
                    _challanoutitemid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("challanoutitemid");
                    OnchallanoutitemidChanged();
                }
            }
        }
        private global::System.Int64 _challanoutitemid;
        partial void OnchallanoutitemidChanging(global::System.Int64 value);
        partial void OnchallanoutitemidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="challanoutother")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class challanoutother : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new challanoutother object.
        /// </summary>
        /// <param name="itemname">Initial value of the itemname property.</param>
        /// <param name="imeino">Initial value of the Imeino property.</param>
        /// <param name="executivename">Initial value of the executivename property.</param>
        /// <param name="pkchallanid">Initial value of the pkchallanid property.</param>
        public static challanoutother Createchallanoutother(global::System.String itemname, global::System.String imeino, global::System.String executivename, global::System.Int64 pkchallanid)
        {
            challanoutother challanoutother = new challanoutother();
            challanoutother.itemname = itemname;
            challanoutother.Imeino = imeino;
            challanoutother.executivename = executivename;
            challanoutother.pkchallanid = pkchallanid;
            return challanoutother;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String challanno
        {
            get
            {
                return _challanno;
            }
            set
            {
                OnchallannoChanging(value);
                ReportPropertyChanging("challanno");
                _challanno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("challanno");
                OnchallannoChanged();
            }
        }
        private global::System.String _challanno;
        partial void OnchallannoChanging(global::System.String value);
        partial void OnchallannoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> cdate
        {
            get
            {
                return _cdate;
            }
            set
            {
                OncdateChanging(value);
                ReportPropertyChanging("cdate");
                _cdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cdate");
                OncdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _cdate;
        partial void OncdateChanging(Nullable<global::System.DateTime> value);
        partial void OncdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sno
        {
            get
            {
                return _sno;
            }
            set
            {
                OnsnoChanging(value);
                ReportPropertyChanging("sno");
                _sno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sno");
                OnsnoChanged();
            }
        }
        private global::System.String _sno;
        partial void OnsnoChanging(global::System.String value);
        partial void OnsnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemtype
        {
            get
            {
                return _itemtype;
            }
            set
            {
                OnitemtypeChanging(value);
                ReportPropertyChanging("itemtype");
                _itemtype = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itemtype");
                OnitemtypeChanged();
            }
        }
        private global::System.String _itemtype;
        partial void OnitemtypeChanging(global::System.String value);
        partial void OnitemtypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String itemname
        {
            get
            {
                return _itemname;
            }
            set
            {
                OnitemnameChanging(value);
                ReportPropertyChanging("itemname");
                _itemname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("itemname");
                OnitemnameChanged();
            }
        }
        private global::System.String _itemname;
        partial void OnitemnameChanging(global::System.String value);
        partial void OnitemnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Imeino
        {
            get
            {
                return _Imeino;
            }
            set
            {
                OnImeinoChanging(value);
                ReportPropertyChanging("Imeino");
                _Imeino = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Imeino");
                OnImeinoChanged();
            }
        }
        private global::System.String _Imeino;
        partial void OnImeinoChanging(global::System.String value);
        partial void OnImeinoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String executivenameto
        {
            get
            {
                return _executivenameto;
            }
            set
            {
                OnexecutivenametoChanging(value);
                ReportPropertyChanging("executivenameto");
                _executivenameto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("executivenameto");
                OnexecutivenametoChanged();
            }
        }
        private global::System.String _executivenameto;
        partial void OnexecutivenametoChanging(global::System.String value);
        partial void OnexecutivenametoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String executivename
        {
            get
            {
                return _executivename;
            }
            set
            {
                OnexecutivenameChanging(value);
                ReportPropertyChanging("executivename");
                _executivename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("executivename");
                OnexecutivenameChanged();
            }
        }
        private global::System.String _executivename;
        partial void OnexecutivenameChanging(global::System.String value);
        partial void OnexecutivenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 pkchallanid
        {
            get
            {
                return _pkchallanid;
            }
            set
            {
                if (_pkchallanid != value)
                {
                    OnpkchallanidChanging(value);
                    ReportPropertyChanging("pkchallanid");
                    _pkchallanid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pkchallanid");
                    OnpkchallanidChanged();
                }
            }
        }
        private global::System.Int64 _pkchallanid;
        partial void OnpkchallanidChanging(global::System.Int64 value);
        partial void OnpkchallanidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String partnersname
        {
            get
            {
                return _partnersname;
            }
            set
            {
                OnpartnersnameChanging(value);
                ReportPropertyChanging("partnersname");
                _partnersname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("partnersname");
                OnpartnersnameChanged();
            }
        }
        private global::System.String _partnersname;
        partial void OnpartnersnameChanging(global::System.String value);
        partial void OnpartnersnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_challanoutothers_PurchaseEntryotherstab", "PurchaseEntryotherstab")]
        public PurchaseEntryotherstab PurchaseEntryotherstab
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntryotherstab>("inventoryforwebappModel.FK_challanoutothers_PurchaseEntryotherstab", "PurchaseEntryotherstab").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntryotherstab>("inventoryforwebappModel.FK_challanoutothers_PurchaseEntryotherstab", "PurchaseEntryotherstab").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseEntryotherstab> PurchaseEntryotherstabReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntryotherstab>("inventoryforwebappModel.FK_challanoutothers_PurchaseEntryotherstab", "PurchaseEntryotherstab");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseEntryotherstab>("inventoryforwebappModel.FK_challanoutothers_PurchaseEntryotherstab", "PurchaseEntryotherstab", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMasterothers_challanoutothers", "ClientMasterother")]
        public EntityCollection<ClientMasterother> ClientMasterothers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientMasterother>("inventoryforwebappModel.FK_ClientMasterothers_challanoutothers", "ClientMasterother");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientMasterother>("inventoryforwebappModel.FK_ClientMasterothers_challanoutothers", "ClientMasterother", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="ClientMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientMaster object.
        /// </summary>
        /// <param name="cafno">Initial value of the cafno property.</param>
        /// <param name="sim_No">Initial value of the Sim_No property.</param>
        public static ClientMaster CreateClientMaster(global::System.String cafno, global::System.String sim_No)
        {
            ClientMaster clientMaster = new ClientMaster();
            clientMaster.cafno = cafno;
            clientMaster.Sim_No = sim_No;
            return clientMaster;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> clmasterdate
        {
            get
            {
                return _clmasterdate;
            }
            set
            {
                OnclmasterdateChanging(value);
                ReportPropertyChanging("clmasterdate");
                _clmasterdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("clmasterdate");
                OnclmasterdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _clmasterdate;
        partial void OnclmasterdateChanging(Nullable<global::System.DateTime> value);
        partial void OnclmasterdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cafno
        {
            get
            {
                return _cafno;
            }
            set
            {
                if (_cafno != value)
                {
                    OncafnoChanging(value);
                    ReportPropertyChanging("cafno");
                    _cafno = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cafno");
                    OncafnoChanged();
                }
            }
        }
        private global::System.String _cafno;
        partial void OncafnoChanging(global::System.String value);
        partial void OncafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customeracno
        {
            get
            {
                return _customeracno;
            }
            set
            {
                OncustomeracnoChanging(value);
                ReportPropertyChanging("customeracno");
                _customeracno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customeracno");
                OncustomeracnoChanged();
            }
        }
        private global::System.String _customeracno;
        partial void OncustomeracnoChanging(global::System.String value);
        partial void OncustomeracnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> fkchallanoutid
        {
            get
            {
                return _fkchallanoutid;
            }
            set
            {
                OnfkchallanoutidChanging(value);
                ReportPropertyChanging("fkchallanoutid");
                _fkchallanoutid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkchallanoutid");
                OnfkchallanoutidChanged();
            }
        }
        private Nullable<global::System.Int64> _fkchallanoutid;
        partial void OnfkchallanoutidChanging(Nullable<global::System.Int64> value);
        partial void OnfkchallanoutidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pdffile
        {
            get
            {
                return _pdffile;
            }
            set
            {
                OnpdffileChanging(value);
                ReportPropertyChanging("pdffile");
                _pdffile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pdffile");
                OnpdffileChanged();
            }
        }
        private global::System.String _pdffile;
        partial void OnpdffileChanging(global::System.String value);
        partial void OnpdffileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User_Name
        {
            get
            {
                return _User_Name;
            }
            set
            {
                OnUser_NameChanging(value);
                ReportPropertyChanging("User_Name");
                _User_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User_Name");
                OnUser_NameChanged();
            }
        }
        private global::System.String _User_Name;
        partial void OnUser_NameChanging(global::System.String value);
        partial void OnUser_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Father_Name
        {
            get
            {
                return _Father_Name;
            }
            set
            {
                OnFather_NameChanging(value);
                ReportPropertyChanging("Father_Name");
                _Father_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Father_Name");
                OnFather_NameChanged();
            }
        }
        private global::System.String _Father_Name;
        partial void OnFather_NameChanging(global::System.String value);
        partial void OnFather_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payment_Mode
        {
            get
            {
                return _Payment_Mode;
            }
            set
            {
                OnPayment_ModeChanging(value);
                ReportPropertyChanging("Payment_Mode");
                _Payment_Mode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payment_Mode");
                OnPayment_ModeChanged();
            }
        }
        private global::System.String _Payment_Mode;
        partial void OnPayment_ModeChanging(global::System.String value);
        partial void OnPayment_ModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                OnBankChanging(value);
                ReportPropertyChanging("Bank");
                _Bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bank");
                OnBankChanged();
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cheque_No
        {
            get
            {
                return _Cheque_No;
            }
            set
            {
                OnCheque_NoChanging(value);
                ReportPropertyChanging("Cheque_No");
                _Cheque_No = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cheque_No");
                OnCheque_NoChanged();
            }
        }
        private global::System.String _Cheque_No;
        partial void OnCheque_NoChanging(global::System.String value);
        partial void OnCheque_NoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sim_No
        {
            get
            {
                return _Sim_No;
            }
            set
            {
                OnSim_NoChanging(value);
                ReportPropertyChanging("Sim_No");
                _Sim_No = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sim_No");
                OnSim_NoChanged();
            }
        }
        private global::System.String _Sim_No;
        partial void OnSim_NoChanging(global::System.String value);
        partial void OnSim_NoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mobileno
        {
            get
            {
                return _mobileno;
            }
            set
            {
                OnmobilenoChanging(value);
                ReportPropertyChanging("mobileno");
                _mobileno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mobileno");
                OnmobilenoChanged();
            }
        }
        private global::System.String _mobileno;
        partial void OnmobilenoChanging(global::System.String value);
        partial void OnmobilenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Plan
        {
            get
            {
                return _Plan;
            }
            set
            {
                OnPlanChanging(value);
                ReportPropertyChanging("Plan");
                _Plan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Plan");
                OnPlanChanged();
            }
        }
        private global::System.String _Plan;
        partial void OnPlanChanging(global::System.String value);
        partial void OnPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Validity
        {
            get
            {
                return _Validity;
            }
            set
            {
                OnValidityChanging(value);
                ReportPropertyChanging("Validity");
                _Validity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Validity");
                OnValidityChanged();
            }
        }
        private global::System.String _Validity;
        partial void OnValidityChanging(global::System.String value);
        partial void OnValidityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Start_Date
        {
            get
            {
                return _Start_Date;
            }
            set
            {
                OnStart_DateChanging(value);
                ReportPropertyChanging("Start_Date");
                _Start_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start_Date");
                OnStart_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Start_Date;
        partial void OnStart_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnStart_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> End_Date
        {
            get
            {
                return _End_Date;
            }
            set
            {
                OnEnd_DateChanging(value);
                ReportPropertyChanging("End_Date");
                _End_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End_Date");
                OnEnd_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _End_Date;
        partial void OnEnd_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnd_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Sim_Return_Date
        {
            get
            {
                return _Sim_Return_Date;
            }
            set
            {
                OnSim_Return_DateChanging(value);
                ReportPropertyChanging("Sim_Return_Date");
                _Sim_Return_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sim_Return_Date");
                OnSim_Return_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Sim_Return_Date;
        partial void OnSim_Return_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnSim_Return_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tarrif_Detail
        {
            get
            {
                return _Tarrif_Detail;
            }
            set
            {
                OnTarrif_DetailChanging(value);
                ReportPropertyChanging("Tarrif_Detail");
                _Tarrif_Detail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tarrif_Detail");
                OnTarrif_DetailChanged();
            }
        }
        private global::System.String _Tarrif_Detail;
        partial void OnTarrif_DetailChanging(global::System.String value);
        partial void OnTarrif_DetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Executive_Name
        {
            get
            {
                return _Executive_Name;
            }
            set
            {
                OnExecutive_NameChanging(value);
                ReportPropertyChanging("Executive_Name");
                _Executive_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Executive_Name");
                OnExecutive_NameChanged();
            }
        }
        private global::System.String _Executive_Name;
        partial void OnExecutive_NameChanging(global::System.String value);
        partial void OnExecutive_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Executive_Code
        {
            get
            {
                return _Executive_Code;
            }
            set
            {
                OnExecutive_CodeChanging(value);
                ReportPropertyChanging("Executive_Code");
                _Executive_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Executive_Code");
                OnExecutive_CodeChanged();
            }
        }
        private global::System.String _Executive_Code;
        partial void OnExecutive_CodeChanging(global::System.String value);
        partial void OnExecutive_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String tfno
        {
            get
            {
                return _tfno;
            }
            set
            {
                OntfnoChanging(value);
                ReportPropertyChanging("tfno");
                _tfno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tfno");
                OntfnoChanged();
            }
        }
        private global::System.String _tfno;
        partial void OntfnoChanging(global::System.String value);
        partial void OntfnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REMARK
        {
            get
            {
                return _REMARK;
            }
            set
            {
                OnREMARKChanging(value);
                ReportPropertyChanging("REMARK");
                _REMARK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REMARK");
                OnREMARKChanged();
            }
        }
        private global::System.String _REMARK;
        partial void OnREMARKChanging(global::System.String value);
        partial void OnREMARKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemname
        {
            get
            {
                return _itemname;
            }
            set
            {
                OnitemnameChanging(value);
                ReportPropertyChanging("itemname");
                _itemname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itemname");
                OnitemnameChanged();
            }
        }
        private global::System.String _itemname;
        partial void OnitemnameChanging(global::System.String value);
        partial void OnitemnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String imeino
        {
            get
            {
                return _imeino;
            }
            set
            {
                OnimeinoChanging(value);
                ReportPropertyChanging("imeino");
                _imeino = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("imeino");
                OnimeinoChanged();
            }
        }
        private global::System.String _imeino;
        partial void OnimeinoChanging(global::System.String value);
        partial void OnimeinoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String amtstatus
        {
            get
            {
                return _amtstatus;
            }
            set
            {
                OnamtstatusChanging(value);
                ReportPropertyChanging("amtstatus");
                _amtstatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("amtstatus");
                OnamtstatusChanged();
            }
        }
        private global::System.String _amtstatus;
        partial void OnamtstatusChanging(global::System.String value);
        partial void OnamtstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String neft
        {
            get
            {
                return _neft;
            }
            set
            {
                OnneftChanging(value);
                ReportPropertyChanging("neft");
                _neft = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("neft");
                OnneftChanged();
            }
        }
        private global::System.String _neft;
        partial void OnneftChanging(global::System.String value);
        partial void OnneftChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_BillUpload_ClientMaster", "BillUpload")]
        public EntityCollection<BillUpload> BillUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillUpload>("inventoryforwebappModel.FK_BillUpload_ClientMaster", "BillUpload");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillUpload>("inventoryforwebappModel.FK_BillUpload_ClientMaster", "BillUpload", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMaster_challanout", "challanout")]
        public challanout challanout
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challanout>("inventoryforwebappModel.FK_ClientMaster_challanout", "challanout").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challanout>("inventoryforwebappModel.FK_ClientMaster_challanout", "challanout").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<challanout> challanoutReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challanout>("inventoryforwebappModel.FK_ClientMaster_challanout", "challanout");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<challanout>("inventoryforwebappModel.FK_ClientMaster_challanout", "challanout", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMaster_ClientMaster", "CountryList")]
        public CountryList CountryList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_ClientMaster_ClientMaster", "CountryList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_ClientMaster_ClientMaster", "CountryList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryList> CountryListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_ClientMaster_ClientMaster", "CountryList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryList>("inventoryforwebappModel.FK_ClientMaster_ClientMaster", "CountryList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMaster_customerdetailstable", "customerdetailstable")]
        public customerdetailstable customerdetailstable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customerdetailstable>("inventoryforwebappModel.FK_ClientMaster_customerdetailstable", "customerdetailstable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customerdetailstable>("inventoryforwebappModel.FK_ClientMaster_customerdetailstable", "customerdetailstable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<customerdetailstable> customerdetailstableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customerdetailstable>("inventoryforwebappModel.FK_ClientMaster_customerdetailstable", "customerdetailstable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<customerdetailstable>("inventoryforwebappModel.FK_ClientMaster_customerdetailstable", "customerdetailstable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="ClientMasterother")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientMasterother : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientMasterother object.
        /// </summary>
        /// <param name="cafno">Initial value of the cafno property.</param>
        /// <param name="itemname">Initial value of the itemname property.</param>
        /// <param name="imeino">Initial value of the imeino property.</param>
        /// <param name="executive_Code">Initial value of the Executive_Code property.</param>
        public static ClientMasterother CreateClientMasterother(global::System.String cafno, global::System.String itemname, global::System.String imeino, global::System.String executive_Code)
        {
            ClientMasterother clientMasterother = new ClientMasterother();
            clientMasterother.cafno = cafno;
            clientMasterother.itemname = itemname;
            clientMasterother.imeino = imeino;
            clientMasterother.Executive_Code = executive_Code;
            return clientMasterother;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cafno
        {
            get
            {
                return _cafno;
            }
            set
            {
                if (_cafno != value)
                {
                    OncafnoChanging(value);
                    ReportPropertyChanging("cafno");
                    _cafno = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cafno");
                    OncafnoChanged();
                }
            }
        }
        private global::System.String _cafno;
        partial void OncafnoChanging(global::System.String value);
        partial void OncafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customeracno
        {
            get
            {
                return _customeracno;
            }
            set
            {
                OncustomeracnoChanging(value);
                ReportPropertyChanging("customeracno");
                _customeracno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customeracno");
                OncustomeracnoChanged();
            }
        }
        private global::System.String _customeracno;
        partial void OncustomeracnoChanging(global::System.String value);
        partial void OncustomeracnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> fkchallanoutid
        {
            get
            {
                return _fkchallanoutid;
            }
            set
            {
                OnfkchallanoutidChanging(value);
                ReportPropertyChanging("fkchallanoutid");
                _fkchallanoutid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkchallanoutid");
                OnfkchallanoutidChanged();
            }
        }
        private Nullable<global::System.Int64> _fkchallanoutid;
        partial void OnfkchallanoutidChanging(Nullable<global::System.Int64> value);
        partial void OnfkchallanoutidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User_Name
        {
            get
            {
                return _User_Name;
            }
            set
            {
                OnUser_NameChanging(value);
                ReportPropertyChanging("User_Name");
                _User_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User_Name");
                OnUser_NameChanged();
            }
        }
        private global::System.String _User_Name;
        partial void OnUser_NameChanging(global::System.String value);
        partial void OnUser_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Father_Name
        {
            get
            {
                return _Father_Name;
            }
            set
            {
                OnFather_NameChanging(value);
                ReportPropertyChanging("Father_Name");
                _Father_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Father_Name");
                OnFather_NameChanged();
            }
        }
        private global::System.String _Father_Name;
        partial void OnFather_NameChanging(global::System.String value);
        partial void OnFather_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payment_Mode
        {
            get
            {
                return _Payment_Mode;
            }
            set
            {
                OnPayment_ModeChanging(value);
                ReportPropertyChanging("Payment_Mode");
                _Payment_Mode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payment_Mode");
                OnPayment_ModeChanged();
            }
        }
        private global::System.String _Payment_Mode;
        partial void OnPayment_ModeChanging(global::System.String value);
        partial void OnPayment_ModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                OnBankChanging(value);
                ReportPropertyChanging("Bank");
                _Bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bank");
                OnBankChanged();
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cheque_No
        {
            get
            {
                return _Cheque_No;
            }
            set
            {
                OnCheque_NoChanging(value);
                ReportPropertyChanging("Cheque_No");
                _Cheque_No = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cheque_No");
                OnCheque_NoChanged();
            }
        }
        private global::System.String _Cheque_No;
        partial void OnCheque_NoChanging(global::System.String value);
        partial void OnCheque_NoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String itemname
        {
            get
            {
                return _itemname;
            }
            set
            {
                OnitemnameChanging(value);
                ReportPropertyChanging("itemname");
                _itemname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("itemname");
                OnitemnameChanged();
            }
        }
        private global::System.String _itemname;
        partial void OnitemnameChanging(global::System.String value);
        partial void OnitemnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String imeino
        {
            get
            {
                return _imeino;
            }
            set
            {
                OnimeinoChanging(value);
                ReportPropertyChanging("imeino");
                _imeino = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("imeino");
                OnimeinoChanged();
            }
        }
        private global::System.String _imeino;
        partial void OnimeinoChanging(global::System.String value);
        partial void OnimeinoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Plan
        {
            get
            {
                return _Plan;
            }
            set
            {
                OnPlanChanging(value);
                ReportPropertyChanging("Plan");
                _Plan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Plan");
                OnPlanChanged();
            }
        }
        private global::System.String _Plan;
        partial void OnPlanChanging(global::System.String value);
        partial void OnPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Executive_Name
        {
            get
            {
                return _Executive_Name;
            }
            set
            {
                OnExecutive_NameChanging(value);
                ReportPropertyChanging("Executive_Name");
                _Executive_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Executive_Name");
                OnExecutive_NameChanged();
            }
        }
        private global::System.String _Executive_Name;
        partial void OnExecutive_NameChanging(global::System.String value);
        partial void OnExecutive_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Executive_Code
        {
            get
            {
                return _Executive_Code;
            }
            set
            {
                OnExecutive_CodeChanging(value);
                ReportPropertyChanging("Executive_Code");
                _Executive_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Executive_Code");
                OnExecutive_CodeChanged();
            }
        }
        private global::System.String _Executive_Code;
        partial void OnExecutive_CodeChanging(global::System.String value);
        partial void OnExecutive_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STATUS
        {
            get
            {
                return _STATUS;
            }
            set
            {
                OnSTATUSChanging(value);
                ReportPropertyChanging("STATUS");
                _STATUS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STATUS");
                OnSTATUSChanged();
            }
        }
        private global::System.String _STATUS;
        partial void OnSTATUSChanging(global::System.String value);
        partial void OnSTATUSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemtype
        {
            get
            {
                return _itemtype;
            }
            set
            {
                OnitemtypeChanging(value);
                ReportPropertyChanging("itemtype");
                _itemtype = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itemtype");
                OnitemtypeChanged();
            }
        }
        private global::System.String _itemtype;
        partial void OnitemtypeChanging(global::System.String value);
        partial void OnitemtypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMasterothers_challanoutothers", "challanoutother")]
        public challanoutother challanoutother
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challanoutother>("inventoryforwebappModel.FK_ClientMasterothers_challanoutothers", "challanoutother").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challanoutother>("inventoryforwebappModel.FK_ClientMasterothers_challanoutothers", "challanoutother").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<challanoutother> challanoutotherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challanoutother>("inventoryforwebappModel.FK_ClientMasterothers_challanoutothers", "challanoutother");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<challanoutother>("inventoryforwebappModel.FK_ClientMasterothers_challanoutothers", "challanoutother", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMasterothers_PurchaseEntryotherstab", "PurchaseEntryotherstab")]
        public PurchaseEntryotherstab PurchaseEntryotherstab
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntryotherstab>("inventoryforwebappModel.FK_ClientMasterothers_PurchaseEntryotherstab", "PurchaseEntryotherstab").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntryotherstab>("inventoryforwebappModel.FK_ClientMasterothers_PurchaseEntryotherstab", "PurchaseEntryotherstab").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseEntryotherstab> PurchaseEntryotherstabReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntryotherstab>("inventoryforwebappModel.FK_ClientMasterothers_PurchaseEntryotherstab", "PurchaseEntryotherstab");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseEntryotherstab>("inventoryforwebappModel.FK_ClientMasterothers_PurchaseEntryotherstab", "PurchaseEntryotherstab", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="ClientmasterTFNO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientmasterTFNO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientmasterTFNO object.
        /// </summary>
        /// <param name="clientmasterTFNO1">Initial value of the ClientmasterTFNO1 property.</param>
        public static ClientmasterTFNO CreateClientmasterTFNO(global::System.Int64 clientmasterTFNO1)
        {
            ClientmasterTFNO clientmasterTFNO = new ClientmasterTFNO();
            clientmasterTFNO.ClientmasterTFNO1 = clientmasterTFNO1;
            return clientmasterTFNO;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClientmasterTFNO1
        {
            get
            {
                return _ClientmasterTFNO1;
            }
            set
            {
                if (_ClientmasterTFNO1 != value)
                {
                    OnClientmasterTFNO1Changing(value);
                    ReportPropertyChanging("ClientmasterTFNO1");
                    _ClientmasterTFNO1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientmasterTFNO1");
                    OnClientmasterTFNO1Changed();
                }
            }
        }
        private global::System.Int64 _ClientmasterTFNO1;
        partial void OnClientmasterTFNO1Changing(global::System.Int64 value);
        partial void OnClientmasterTFNO1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="CompanyProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyProfile object.
        /// </summary>
        /// <param name="cmpid">Initial value of the cmpid property.</param>
        public static CompanyProfile CreateCompanyProfile(global::System.Int64 cmpid)
        {
            CompanyProfile companyProfile = new CompanyProfile();
            companyProfile.cmpid = cmpid;
            return companyProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 cmpid
        {
            get
            {
                return _cmpid;
            }
            set
            {
                if (_cmpid != value)
                {
                    OncmpidChanging(value);
                    ReportPropertyChanging("cmpid");
                    _cmpid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cmpid");
                    OncmpidChanged();
                }
            }
        }
        private global::System.Int64 _cmpid;
        partial void OncmpidChanging(global::System.Int64 value);
        partial void OncmpidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManagingDirector
        {
            get
            {
                return _ManagingDirector;
            }
            set
            {
                OnManagingDirectorChanging(value);
                ReportPropertyChanging("ManagingDirector");
                _ManagingDirector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManagingDirector");
                OnManagingDirectorChanged();
            }
        }
        private global::System.String _ManagingDirector;
        partial void OnManagingDirectorChanging(global::System.String value);
        partial void OnManagingDirectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNo
        {
            get
            {
                return _ContactNo;
            }
            set
            {
                OnContactNoChanging(value);
                ReportPropertyChanging("ContactNo");
                _ContactNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNo");
                OnContactNoChanged();
            }
        }
        private global::System.String _ContactNo;
        partial void OnContactNoChanging(global::System.String value);
        partial void OnContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustSupportNo
        {
            get
            {
                return _CustSupportNo;
            }
            set
            {
                OnCustSupportNoChanging(value);
                ReportPropertyChanging("CustSupportNo");
                _CustSupportNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustSupportNo");
                OnCustSupportNoChanged();
            }
        }
        private global::System.String _CustSupportNo;
        partial void OnCustSupportNoChanging(global::System.String value);
        partial void OnCustSupportNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PunchLine
        {
            get
            {
                return _PunchLine;
            }
            set
            {
                OnPunchLineChanging(value);
                ReportPropertyChanging("PunchLine");
                _PunchLine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PunchLine");
                OnPunchLineChanged();
            }
        }
        private global::System.String _PunchLine;
        partial void OnPunchLineChanging(global::System.String value);
        partial void OnPunchLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailID
        {
            get
            {
                return _EmailID;
            }
            set
            {
                OnEmailIDChanging(value);
                ReportPropertyChanging("EmailID");
                _EmailID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailID");
                OnEmailIDChanged();
            }
        }
        private global::System.String _EmailID;
        partial void OnEmailIDChanging(global::System.String value);
        partial void OnEmailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebSite
        {
            get
            {
                return _WebSite;
            }
            set
            {
                OnWebSiteChanging(value);
                ReportPropertyChanging("WebSite");
                _WebSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebSite");
                OnWebSiteChanged();
            }
        }
        private global::System.String _WebSite;
        partial void OnWebSiteChanging(global::System.String value);
        partial void OnWebSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bankdetails
        {
            get
            {
                return _bankdetails;
            }
            set
            {
                OnbankdetailsChanging(value);
                ReportPropertyChanging("bankdetails");
                _bankdetails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bankdetails");
                OnbankdetailsChanged();
            }
        }
        private global::System.String _bankdetails;
        partial void OnbankdetailsChanging(global::System.String value);
        partial void OnbankdetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String panno
        {
            get
            {
                return _panno;
            }
            set
            {
                OnpannoChanging(value);
                ReportPropertyChanging("panno");
                _panno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("panno");
                OnpannoChanged();
            }
        }
        private global::System.String _panno;
        partial void OnpannoChanging(global::System.String value);
        partial void OnpannoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String servicetax
        {
            get
            {
                return _servicetax;
            }
            set
            {
                OnservicetaxChanging(value);
                ReportPropertyChanging("servicetax");
                _servicetax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("servicetax");
                OnservicetaxChanged();
            }
        }
        private global::System.String _servicetax;
        partial void OnservicetaxChanging(global::System.String value);
        partial void OnservicetaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String loginusercode
        {
            get
            {
                return _loginusercode;
            }
            set
            {
                OnloginusercodeChanging(value);
                ReportPropertyChanging("loginusercode");
                _loginusercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("loginusercode");
                OnloginusercodeChanged();
            }
        }
        private global::System.String _loginusercode;
        partial void OnloginusercodeChanging(global::System.String value);
        partial void OnloginusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="consigneename")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class consigneename : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new consigneename object.
        /// </summary>
        /// <param name="cmpid">Initial value of the cmpid property.</param>
        public static consigneename Createconsigneename(global::System.Int64 cmpid)
        {
            consigneename consigneename = new consigneename();
            consigneename.cmpid = cmpid;
            return consigneename;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 cmpid
        {
            get
            {
                return _cmpid;
            }
            set
            {
                if (_cmpid != value)
                {
                    OncmpidChanging(value);
                    ReportPropertyChanging("cmpid");
                    _cmpid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cmpid");
                    OncmpidChanged();
                }
            }
        }
        private global::System.Int64 _cmpid;
        partial void OncmpidChanging(global::System.Int64 value);
        partial void OncmpidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManagingDirector
        {
            get
            {
                return _ManagingDirector;
            }
            set
            {
                OnManagingDirectorChanging(value);
                ReportPropertyChanging("ManagingDirector");
                _ManagingDirector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManagingDirector");
                OnManagingDirectorChanged();
            }
        }
        private global::System.String _ManagingDirector;
        partial void OnManagingDirectorChanging(global::System.String value);
        partial void OnManagingDirectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNo
        {
            get
            {
                return _ContactNo;
            }
            set
            {
                OnContactNoChanging(value);
                ReportPropertyChanging("ContactNo");
                _ContactNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNo");
                OnContactNoChanged();
            }
        }
        private global::System.String _ContactNo;
        partial void OnContactNoChanging(global::System.String value);
        partial void OnContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustSupportNo
        {
            get
            {
                return _CustSupportNo;
            }
            set
            {
                OnCustSupportNoChanging(value);
                ReportPropertyChanging("CustSupportNo");
                _CustSupportNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustSupportNo");
                OnCustSupportNoChanged();
            }
        }
        private global::System.String _CustSupportNo;
        partial void OnCustSupportNoChanging(global::System.String value);
        partial void OnCustSupportNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PunchLine
        {
            get
            {
                return _PunchLine;
            }
            set
            {
                OnPunchLineChanging(value);
                ReportPropertyChanging("PunchLine");
                _PunchLine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PunchLine");
                OnPunchLineChanged();
            }
        }
        private global::System.String _PunchLine;
        partial void OnPunchLineChanging(global::System.String value);
        partial void OnPunchLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailID
        {
            get
            {
                return _EmailID;
            }
            set
            {
                OnEmailIDChanging(value);
                ReportPropertyChanging("EmailID");
                _EmailID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailID");
                OnEmailIDChanged();
            }
        }
        private global::System.String _EmailID;
        partial void OnEmailIDChanging(global::System.String value);
        partial void OnEmailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebSite
        {
            get
            {
                return _WebSite;
            }
            set
            {
                OnWebSiteChanging(value);
                ReportPropertyChanging("WebSite");
                _WebSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebSite");
                OnWebSiteChanged();
            }
        }
        private global::System.String _WebSite;
        partial void OnWebSiteChanging(global::System.String value);
        partial void OnWebSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String loginusercode
        {
            get
            {
                return _loginusercode;
            }
            set
            {
                OnloginusercodeChanging(value);
                ReportPropertyChanging("loginusercode");
                _loginusercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("loginusercode");
                OnloginusercodeChanged();
            }
        }
        private global::System.String _loginusercode;
        partial void OnloginusercodeChanging(global::System.String value);
        partial void OnloginusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="CountryList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryList object.
        /// </summary>
        /// <param name="country">Initial value of the Country property.</param>
        public static CountryList CreateCountryList(global::System.String country)
        {
            CountryList countryList = new CountryList();
            countryList.Country = country;
            return countryList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                if (_Country != value)
                {
                    OnCountryChanging(value);
                    ReportPropertyChanging("Country");
                    _Country = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Country");
                    OnCountryChanged();
                }
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String isdcode
        {
            get
            {
                return _isdcode;
            }
            set
            {
                OnisdcodeChanging(value);
                ReportPropertyChanging("isdcode");
                _isdcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("isdcode");
                OnisdcodeChanged();
            }
        }
        private global::System.String _isdcode;
        partial void OnisdcodeChanging(global::System.String value);
        partial void OnisdcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Indiacalling
        {
            get
            {
                return _Indiacalling;
            }
            set
            {
                OnIndiacallingChanging(value);
                ReportPropertyChanging("Indiacalling");
                _Indiacalling = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Indiacalling");
                OnIndiacallingChanged();
            }
        }
        private global::System.String _Indiacalling;
        partial void OnIndiacallingChanging(global::System.String value);
        partial void OnIndiacallingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String countrycode
        {
            get
            {
                return _countrycode;
            }
            set
            {
                OncountrycodeChanging(value);
                ReportPropertyChanging("countrycode");
                _countrycode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("countrycode");
                OncountrycodeChanged();
            }
        }
        private global::System.String _countrycode;
        partial void OncountrycodeChanging(global::System.String value);
        partial void OncountrycodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String importantnotice
        {
            get
            {
                return _importantnotice;
            }
            set
            {
                OnimportantnoticeChanging(value);
                ReportPropertyChanging("importantnotice");
                _importantnotice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("importantnotice");
                OnimportantnoticeChanged();
            }
        }
        private global::System.String _importantnotice;
        partial void OnimportantnoticeChanging(global::System.String value);
        partial void OnimportantnoticeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String impnotice
        {
            get
            {
                return _impnotice;
            }
            set
            {
                OnimpnoticeChanging(value);
                ReportPropertyChanging("impnotice");
                _impnotice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("impnotice");
                OnimpnoticeChanged();
            }
        }
        private global::System.String _impnotice;
        partial void OnimpnoticeChanging(global::System.String value);
        partial void OnimpnoticeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_challanout_CountryList", "challanout")]
        public EntityCollection<challanout> challanouts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<challanout>("inventoryforwebappModel.FK_challanout_CountryList", "challanout");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<challanout>("inventoryforwebappModel.FK_challanout_CountryList", "challanout", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_pdffiles_CountryList", "pdffile")]
        public EntityCollection<pdffile> pdffiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<pdffile>("inventoryforwebappModel.FK_pdffiles_CountryList", "pdffile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<pdffile>("inventoryforwebappModel.FK_pdffiles_CountryList", "pdffile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_PurchaseEntry_CountryList", "PurchaseEntry")]
        public EntityCollection<PurchaseEntry> PurchaseEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseEntry>("inventoryforwebappModel.FK_PurchaseEntry_CountryList", "PurchaseEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseEntry>("inventoryforwebappModel.FK_PurchaseEntry_CountryList", "PurchaseEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMaster_ClientMaster", "ClientMaster")]
        public EntityCollection<ClientMaster> ClientMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientMaster>("inventoryforwebappModel.FK_ClientMaster_ClientMaster", "ClientMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientMaster>("inventoryforwebappModel.FK_ClientMaster_ClientMaster", "ClientMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_NewSimRequest_CountryList", "NewSimRequest")]
        public EntityCollection<NewSimRequest> NewSimRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NewSimRequest>("inventoryforwebappModel.FK_NewSimRequest_CountryList", "NewSimRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NewSimRequest>("inventoryforwebappModel.FK_NewSimRequest_CountryList", "NewSimRequest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="customeraccounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class customeraccounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new customeraccounter object.
        /// </summary>
        /// <param name="customeracid">Initial value of the customeracid property.</param>
        public static customeraccounter Createcustomeraccounter(global::System.Int64 customeracid)
        {
            customeraccounter customeraccounter = new customeraccounter();
            customeraccounter.customeracid = customeracid;
            return customeraccounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customeracid
        {
            get
            {
                return _customeracid;
            }
            set
            {
                if (_customeracid != value)
                {
                    OncustomeracidChanging(value);
                    ReportPropertyChanging("customeracid");
                    _customeracid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("customeracid");
                    OncustomeracidChanged();
                }
            }
        }
        private global::System.Int64 _customeracid;
        partial void OncustomeracidChanging(global::System.Int64 value);
        partial void OncustomeracidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="customerdetailstable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class customerdetailstable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new customerdetailstable object.
        /// </summary>
        /// <param name="customerdetailstableid">Initial value of the customerdetailstableid property.</param>
        /// <param name="customeracno">Initial value of the customeracno property.</param>
        public static customerdetailstable Createcustomerdetailstable(global::System.Int64 customerdetailstableid, global::System.String customeracno)
        {
            customerdetailstable customerdetailstable = new customerdetailstable();
            customerdetailstable.customerdetailstableid = customerdetailstableid;
            customerdetailstable.customeracno = customeracno;
            return customerdetailstable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customerdetailstableid
        {
            get
            {
                return _customerdetailstableid;
            }
            set
            {
                OncustomerdetailstableidChanging(value);
                ReportPropertyChanging("customerdetailstableid");
                _customerdetailstableid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("customerdetailstableid");
                OncustomerdetailstableidChanged();
            }
        }
        private global::System.Int64 _customerdetailstableid;
        partial void OncustomerdetailstableidChanging(global::System.Int64 value);
        partial void OncustomerdetailstableidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customeracno
        {
            get
            {
                return _customeracno;
            }
            set
            {
                if (_customeracno != value)
                {
                    OncustomeracnoChanging(value);
                    ReportPropertyChanging("customeracno");
                    _customeracno = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("customeracno");
                    OncustomeracnoChanged();
                }
            }
        }
        private global::System.String _customeracno;
        partial void OncustomeracnoChanging(global::System.String value);
        partial void OncustomeracnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customername
        {
            get
            {
                return _customername;
            }
            set
            {
                OncustomernameChanging(value);
                ReportPropertyChanging("customername");
                _customername = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customername");
                OncustomernameChanged();
            }
        }
        private global::System.String _customername;
        partial void OncustomernameChanging(global::System.String value);
        partial void OncustomernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customeraddress
        {
            get
            {
                return _customeraddress;
            }
            set
            {
                OncustomeraddressChanging(value);
                ReportPropertyChanging("customeraddress");
                _customeraddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customeraddress");
                OncustomeraddressChanged();
            }
        }
        private global::System.String _customeraddress;
        partial void OncustomeraddressChanging(global::System.String value);
        partial void OncustomeraddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emailid
        {
            get
            {
                return _emailid;
            }
            set
            {
                OnemailidChanging(value);
                ReportPropertyChanging("emailid");
                _emailid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("emailid");
                OnemailidChanged();
            }
        }
        private global::System.String _emailid;
        partial void OnemailidChanging(global::System.String value);
        partial void OnemailidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String website
        {
            get
            {
                return _website;
            }
            set
            {
                OnwebsiteChanging(value);
                ReportPropertyChanging("website");
                _website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("website");
                OnwebsiteChanged();
            }
        }
        private global::System.String _website;
        partial void OnwebsiteChanging(global::System.String value);
        partial void OnwebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String passportno
        {
            get
            {
                return _passportno;
            }
            set
            {
                OnpassportnoChanging(value);
                ReportPropertyChanging("passportno");
                _passportno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("passportno");
                OnpassportnoChanged();
            }
        }
        private global::System.String _passportno;
        partial void OnpassportnoChanging(global::System.String value);
        partial void OnpassportnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mobileno
        {
            get
            {
                return _mobileno;
            }
            set
            {
                OnmobilenoChanging(value);
                ReportPropertyChanging("mobileno");
                _mobileno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mobileno");
                OnmobilenoChanged();
            }
        }
        private global::System.String _mobileno;
        partial void OnmobilenoChanging(global::System.String value);
        partial void OnmobilenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String alternateno
        {
            get
            {
                return _alternateno;
            }
            set
            {
                OnalternatenoChanging(value);
                ReportPropertyChanging("alternateno");
                _alternateno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("alternateno");
                OnalternatenoChanged();
            }
        }
        private global::System.String _alternateno;
        partial void OnalternatenoChanging(global::System.String value);
        partial void OnalternatenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String loginusercode
        {
            get
            {
                return _loginusercode;
            }
            set
            {
                OnloginusercodeChanging(value);
                ReportPropertyChanging("loginusercode");
                _loginusercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("loginusercode");
                OnloginusercodeChanged();
            }
        }
        private global::System.String _loginusercode;
        partial void OnloginusercodeChanging(global::System.String value);
        partial void OnloginusercodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMaster_customerdetailstable", "ClientMaster")]
        public EntityCollection<ClientMaster> ClientMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientMaster>("inventoryforwebappModel.FK_ClientMaster_customerdetailstable", "ClientMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientMaster>("inventoryforwebappModel.FK_ClientMaster_customerdetailstable", "ClientMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="Executivecounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Executivecounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Executivecounter object.
        /// </summary>
        /// <param name="executiveid">Initial value of the Executiveid property.</param>
        public static Executivecounter CreateExecutivecounter(global::System.Int64 executiveid)
        {
            Executivecounter executivecounter = new Executivecounter();
            executivecounter.Executiveid = executiveid;
            return executivecounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Executiveid
        {
            get
            {
                return _Executiveid;
            }
            set
            {
                if (_Executiveid != value)
                {
                    OnExecutiveidChanging(value);
                    ReportPropertyChanging("Executiveid");
                    _Executiveid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Executiveid");
                    OnExecutiveidChanged();
                }
            }
        }
        private global::System.Int64 _Executiveid;
        partial void OnExecutiveidChanging(global::System.Int64 value);
        partial void OnExecutiveidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="LostSimData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LostSimData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LostSimData object.
        /// </summary>
        /// <param name="simNo">Initial value of the SimNo property.</param>
        /// <param name="branchcode">Initial value of the branchcode property.</param>
        /// <param name="loginuser">Initial value of the loginuser property.</param>
        public static LostSimData CreateLostSimData(global::System.String simNo, global::System.String branchcode, global::System.String loginuser)
        {
            LostSimData lostSimData = new LostSimData();
            lostSimData.SimNo = simNo;
            lostSimData.branchcode = branchcode;
            lostSimData.loginuser = loginuser;
            return lostSimData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LostDate
        {
            get
            {
                return _LostDate;
            }
            set
            {
                OnLostDateChanging(value);
                ReportPropertyChanging("LostDate");
                _LostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LostDate");
                OnLostDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LostDate;
        partial void OnLostDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SimNo
        {
            get
            {
                return _SimNo;
            }
            set
            {
                if (_SimNo != value)
                {
                    OnSimNoChanging(value);
                    ReportPropertyChanging("SimNo");
                    _SimNo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SimNo");
                    OnSimNoChanged();
                }
            }
        }
        private global::System.String _SimNo;
        partial void OnSimNoChanging(global::System.String value);
        partial void OnSimNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeleteInventry
        {
            get
            {
                return _DeleteInventry;
            }
            set
            {
                OnDeleteInventryChanging(value);
                ReportPropertyChanging("DeleteInventry");
                _DeleteInventry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeleteInventry");
                OnDeleteInventryChanged();
            }
        }
        private global::System.String _DeleteInventry;
        partial void OnDeleteInventryChanging(global::System.String value);
        partial void OnDeleteInventryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String partnername
        {
            get
            {
                return _partnername;
            }
            set
            {
                OnpartnernameChanging(value);
                ReportPropertyChanging("partnername");
                _partnername = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("partnername");
                OnpartnernameChanged();
            }
        }
        private global::System.String _partnername;
        partial void OnpartnernameChanging(global::System.String value);
        partial void OnpartnernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String loginuser
        {
            get
            {
                return _loginuser;
            }
            set
            {
                OnloginuserChanging(value);
                ReportPropertyChanging("loginuser");
                _loginuser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("loginuser");
                OnloginuserChanged();
            }
        }
        private global::System.String _loginuser;
        partial void OnloginuserChanging(global::System.String value);
        partial void OnloginuserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_LostSimData_PurchaseEntry", "PurchaseEntry")]
        public PurchaseEntry PurchaseEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntry>("inventoryforwebappModel.FK_LostSimData_PurchaseEntry", "PurchaseEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntry>("inventoryforwebappModel.FK_LostSimData_PurchaseEntry", "PurchaseEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseEntry> PurchaseEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseEntry>("inventoryforwebappModel.FK_LostSimData_PurchaseEntry", "PurchaseEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseEntry>("inventoryforwebappModel.FK_LostSimData_PurchaseEntry", "PurchaseEntry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="MAILSETTINGTABLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MAILSETTINGTABLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MAILSETTINGTABLE object.
        /// </summary>
        /// <param name="mAILSETTING_ID">Initial value of the MAILSETTING_ID property.</param>
        public static MAILSETTINGTABLE CreateMAILSETTINGTABLE(global::System.Int64 mAILSETTING_ID)
        {
            MAILSETTINGTABLE mAILSETTINGTABLE = new MAILSETTINGTABLE();
            mAILSETTINGTABLE.MAILSETTING_ID = mAILSETTING_ID;
            return mAILSETTINGTABLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MAILSETTING_ID
        {
            get
            {
                return _MAILSETTING_ID;
            }
            set
            {
                if (_MAILSETTING_ID != value)
                {
                    OnMAILSETTING_IDChanging(value);
                    ReportPropertyChanging("MAILSETTING_ID");
                    _MAILSETTING_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MAILSETTING_ID");
                    OnMAILSETTING_IDChanged();
                }
            }
        }
        private global::System.Int64 _MAILSETTING_ID;
        partial void OnMAILSETTING_IDChanging(global::System.Int64 value);
        partial void OnMAILSETTING_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SMTP_ADDRESS
        {
            get
            {
                return _SMTP_ADDRESS;
            }
            set
            {
                OnSMTP_ADDRESSChanging(value);
                ReportPropertyChanging("SMTP_ADDRESS");
                _SMTP_ADDRESS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SMTP_ADDRESS");
                OnSMTP_ADDRESSChanged();
            }
        }
        private global::System.String _SMTP_ADDRESS;
        partial void OnSMTP_ADDRESSChanging(global::System.String value);
        partial void OnSMTP_ADDRESSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORT_NUMBER
        {
            get
            {
                return _PORT_NUMBER;
            }
            set
            {
                OnPORT_NUMBERChanging(value);
                ReportPropertyChanging("PORT_NUMBER");
                _PORT_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORT_NUMBER");
                OnPORT_NUMBERChanged();
            }
        }
        private global::System.String _PORT_NUMBER;
        partial void OnPORT_NUMBERChanging(global::System.String value);
        partial void OnPORT_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ENABLE_SSL
        {
            get
            {
                return _ENABLE_SSL;
            }
            set
            {
                OnENABLE_SSLChanging(value);
                ReportPropertyChanging("ENABLE_SSL");
                _ENABLE_SSL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ENABLE_SSL");
                OnENABLE_SSLChanged();
            }
        }
        private Nullable<global::System.Boolean> _ENABLE_SSL;
        partial void OnENABLE_SSLChanging(Nullable<global::System.Boolean> value);
        partial void OnENABLE_SSLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL_FROM
        {
            get
            {
                return _EMAIL_FROM;
            }
            set
            {
                OnEMAIL_FROMChanging(value);
                ReportPropertyChanging("EMAIL_FROM");
                _EMAIL_FROM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL_FROM");
                OnEMAIL_FROMChanged();
            }
        }
        private global::System.String _EMAIL_FROM;
        partial void OnEMAIL_FROMChanging(global::System.String value);
        partial void OnEMAIL_FROMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PASSWORD
        {
            get
            {
                return _PASSWORD;
            }
            set
            {
                OnPASSWORDChanging(value);
                ReportPropertyChanging("PASSWORD");
                _PASSWORD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PASSWORD");
                OnPASSWORDChanged();
            }
        }
        private global::System.String _PASSWORD;
        partial void OnPASSWORDChanging(global::System.String value);
        partial void OnPASSWORDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUBJECT
        {
            get
            {
                return _SUBJECT;
            }
            set
            {
                OnSUBJECTChanging(value);
                ReportPropertyChanging("SUBJECT");
                _SUBJECT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUBJECT");
                OnSUBJECTChanged();
            }
        }
        private global::System.String _SUBJECT;
        partial void OnSUBJECTChanging(global::System.String value);
        partial void OnSUBJECTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BODY
        {
            get
            {
                return _BODY;
            }
            set
            {
                OnBODYChanging(value);
                ReportPropertyChanging("BODY");
                _BODY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BODY");
                OnBODYChanged();
            }
        }
        private global::System.String _BODY;
        partial void OnBODYChanging(global::System.String value);
        partial void OnBODYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOGINUSER
        {
            get
            {
                return _LOGINUSER;
            }
            set
            {
                OnLOGINUSERChanging(value);
                ReportPropertyChanging("LOGINUSER");
                _LOGINUSER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOGINUSER");
                OnLOGINUSERChanged();
            }
        }
        private global::System.String _LOGINUSER;
        partial void OnLOGINUSERChanging(global::System.String value);
        partial void OnLOGINUSERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BRANCHCODE
        {
            get
            {
                return _BRANCHCODE;
            }
            set
            {
                OnBRANCHCODEChanging(value);
                ReportPropertyChanging("BRANCHCODE");
                _BRANCHCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BRANCHCODE");
                OnBRANCHCODEChanged();
            }
        }
        private global::System.String _BRANCHCODE;
        partial void OnBRANCHCODEChanging(global::System.String value);
        partial void OnBRANCHCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String A
        {
            get
            {
                return _A;
            }
            set
            {
                OnAChanging(value);
                ReportPropertyChanging("A");
                _A = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("A");
                OnAChanged();
            }
        }
        private global::System.String _A;
        partial void OnAChanging(global::System.String value);
        partial void OnAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String B
        {
            get
            {
                return _B;
            }
            set
            {
                OnBChanging(value);
                ReportPropertyChanging("B");
                _B = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("B");
                OnBChanged();
            }
        }
        private global::System.String _B;
        partial void OnBChanging(global::System.String value);
        partial void OnBChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="mobile_topup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mobile_topup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mobile_topup object.
        /// </summary>
        /// <param name="topid">Initial value of the topid property.</param>
        public static mobile_topup Createmobile_topup(global::System.Int64 topid)
        {
            mobile_topup mobile_topup = new mobile_topup();
            mobile_topup.topid = topid;
            return mobile_topup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 topid
        {
            get
            {
                return _topid;
            }
            set
            {
                if (_topid != value)
                {
                    OntopidChanging(value);
                    ReportPropertyChanging("topid");
                    _topid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("topid");
                    OntopidChanged();
                }
            }
        }
        private global::System.Int64 _topid;
        partial void OntopidChanging(global::System.Int64 value);
        partial void OntopidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mobileno
        {
            get
            {
                return _mobileno;
            }
            set
            {
                OnmobilenoChanging(value);
                ReportPropertyChanging("mobileno");
                _mobileno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mobileno");
                OnmobilenoChanged();
            }
        }
        private global::System.String _mobileno;
        partial void OnmobilenoChanging(global::System.String value);
        partial void OnmobilenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String topup
        {
            get
            {
                return _topup;
            }
            set
            {
                OntopupChanging(value);
                ReportPropertyChanging("topup");
                _topup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("topup");
                OntopupChanged();
            }
        }
        private global::System.String _topup;
        partial void OntopupChanging(global::System.String value);
        partial void OntopupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String topup_data
        {
            get
            {
                return _topup_data;
            }
            set
            {
                Ontopup_dataChanging(value);
                ReportPropertyChanging("topup_data");
                _topup_data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("topup_data");
                Ontopup_dataChanged();
            }
        }
        private global::System.String _topup_data;
        partial void Ontopup_dataChanging(global::System.String value);
        partial void Ontopup_dataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String topup_sptopup
        {
            get
            {
                return _topup_sptopup;
            }
            set
            {
                Ontopup_sptopupChanging(value);
                ReportPropertyChanging("topup_sptopup");
                _topup_sptopup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("topup_sptopup");
                Ontopup_sptopupChanged();
            }
        }
        private global::System.String _topup_sptopup;
        partial void Ontopup_sptopupChanging(global::System.String value);
        partial void Ontopup_sptopupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String total
        {
            get
            {
                return _total;
            }
            set
            {
                OntotalChanging(value);
                ReportPropertyChanging("total");
                _total = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("total");
                OntotalChanged();
            }
        }
        private global::System.String _total;
        partial void OntotalChanging(global::System.String value);
        partial void OntotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String loginuser
        {
            get
            {
                return _loginuser;
            }
            set
            {
                OnloginuserChanging(value);
                ReportPropertyChanging("loginuser");
                _loginuser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("loginuser");
                OnloginuserChanged();
            }
        }
        private global::System.String _loginuser;
        partial void OnloginuserChanging(global::System.String value);
        partial void OnloginuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String plancode
        {
            get
            {
                return _plancode;
            }
            set
            {
                OnplancodeChanging(value);
                ReportPropertyChanging("plancode");
                _plancode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("plancode");
                OnplancodeChanged();
            }
        }
        private global::System.String _plancode;
        partial void OnplancodeChanging(global::System.String value);
        partial void OnplancodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> request_date
        {
            get
            {
                return _request_date;
            }
            set
            {
                Onrequest_dateChanging(value);
                ReportPropertyChanging("request_date");
                _request_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("request_date");
                Onrequest_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _request_date;
        partial void Onrequest_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onrequest_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String statu_s
        {
            get
            {
                return _statu_s;
            }
            set
            {
                Onstatu_sChanging(value);
                ReportPropertyChanging("statu_s");
                _statu_s = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("statu_s");
                Onstatu_sChanged();
            }
        }
        private global::System.String _statu_s;
        partial void Onstatu_sChanging(global::System.String value);
        partial void Onstatu_sChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="NewSimRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NewSimRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NewSimRequest object.
        /// </summary>
        /// <param name="requestid">Initial value of the requestid property.</param>
        /// <param name="simNo">Initial value of the SimNo property.</param>
        public static NewSimRequest CreateNewSimRequest(global::System.Int64 requestid, global::System.String simNo)
        {
            NewSimRequest newSimRequest = new NewSimRequest();
            newSimRequest.requestid = requestid;
            newSimRequest.SimNo = simNo;
            return newSimRequest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 requestid
        {
            get
            {
                return _requestid;
            }
            set
            {
                if (_requestid != value)
                {
                    OnrequestidChanging(value);
                    ReportPropertyChanging("requestid");
                    _requestid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("requestid");
                    OnrequestidChanged();
                }
            }
        }
        private global::System.Int64 _requestid;
        partial void OnrequestidChanging(global::System.Int64 value);
        partial void OnrequestidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SimNo
        {
            get
            {
                return _SimNo;
            }
            set
            {
                OnSimNoChanging(value);
                ReportPropertyChanging("SimNo");
                _SimNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SimNo");
                OnSimNoChanged();
            }
        }
        private global::System.String _SimNo;
        partial void OnSimNoChanging(global::System.String value);
        partial void OnSimNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Executive_Code
        {
            get
            {
                return _Executive_Code;
            }
            set
            {
                OnExecutive_CodeChanging(value);
                ReportPropertyChanging("Executive_Code");
                _Executive_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Executive_Code");
                OnExecutive_CodeChanged();
            }
        }
        private global::System.String _Executive_Code;
        partial void OnExecutive_CodeChanging(global::System.String value);
        partial void OnExecutive_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniqueValue
        {
            get
            {
                return _UniqueValue;
            }
            set
            {
                OnUniqueValueChanging(value);
                ReportPropertyChanging("UniqueValue");
                _UniqueValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniqueValue");
                OnUniqueValueChanged();
            }
        }
        private global::System.String _UniqueValue;
        partial void OnUniqueValueChanging(global::System.String value);
        partial void OnUniqueValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_n
        {
            get
            {
                return _status_n;
            }
            set
            {
                Onstatus_nChanging(value);
                ReportPropertyChanging("status_n");
                _status_n = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status_n");
                Onstatus_nChanged();
            }
        }
        private global::System.String _status_n;
        partial void Onstatus_nChanging(global::System.String value);
        partial void Onstatus_nChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_NewSimRequest_CountryList", "CountryList")]
        public CountryList CountryList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_NewSimRequest_CountryList", "CountryList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_NewSimRequest_CountryList", "CountryList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryList> CountryListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_NewSimRequest_CountryList", "CountryList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryList>("inventoryforwebappModel.FK_NewSimRequest_CountryList", "CountryList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="pdffile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class pdffile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new pdffile object.
        /// </summary>
        /// <param name="pdffileid">Initial value of the pdffileid property.</param>
        public static pdffile Createpdffile(global::System.Int64 pdffileid)
        {
            pdffile pdffile = new pdffile();
            pdffile.pdffileid = pdffileid;
            return pdffile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 pdffileid
        {
            get
            {
                return _pdffileid;
            }
            set
            {
                if (_pdffileid != value)
                {
                    OnpdffileidChanging(value);
                    ReportPropertyChanging("pdffileid");
                    _pdffileid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pdffileid");
                    OnpdffileidChanged();
                }
            }
        }
        private global::System.Int64 _pdffileid;
        partial void OnpdffileidChanging(global::System.Int64 value);
        partial void OnpdffileidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pdffile1
        {
            get
            {
                return _pdffile1;
            }
            set
            {
                Onpdffile1Changing(value);
                ReportPropertyChanging("pdffile1");
                _pdffile1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pdffile1");
                Onpdffile1Changed();
            }
        }
        private global::System.String _pdffile1;
        partial void Onpdffile1Changing(global::System.String value);
        partial void Onpdffile1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usernamecode
        {
            get
            {
                return _usernamecode;
            }
            set
            {
                OnusernamecodeChanging(value);
                ReportPropertyChanging("usernamecode");
                _usernamecode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usernamecode");
                OnusernamecodeChanged();
            }
        }
        private global::System.String _usernamecode;
        partial void OnusernamecodeChanging(global::System.String value);
        partial void OnusernamecodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_pdffiles_CountryList", "CountryList")]
        public CountryList CountryList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_pdffiles_CountryList", "CountryList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_pdffiles_CountryList", "CountryList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryList> CountryListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_pdffiles_CountryList", "CountryList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryList>("inventoryforwebappModel.FK_pdffiles_CountryList", "CountryList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="PlanTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlanTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlanTable object.
        /// </summary>
        /// <param name="pLANID">Initial value of the PLANID property.</param>
        public static PlanTable CreatePlanTable(global::System.Int64 pLANID)
        {
            PlanTable planTable = new PlanTable();
            planTable.PLANID = pLANID;
            return planTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PLANID
        {
            get
            {
                return _PLANID;
            }
            set
            {
                if (_PLANID != value)
                {
                    OnPLANIDChanging(value);
                    ReportPropertyChanging("PLANID");
                    _PLANID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PLANID");
                    OnPLANIDChanged();
                }
            }
        }
        private global::System.Int64 _PLANID;
        partial void OnPLANIDChanging(global::System.Int64 value);
        partial void OnPLANIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLAN_CODE
        {
            get
            {
                return _PLAN_CODE;
            }
            set
            {
                OnPLAN_CODEChanging(value);
                ReportPropertyChanging("PLAN_CODE");
                _PLAN_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PLAN_CODE");
                OnPLAN_CODEChanged();
            }
        }
        private global::System.String _PLAN_CODE;
        partial void OnPLAN_CODEChanging(global::System.String value);
        partial void OnPLAN_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLAN_NAME
        {
            get
            {
                return _PLAN_NAME;
            }
            set
            {
                OnPLAN_NAMEChanging(value);
                ReportPropertyChanging("PLAN_NAME");
                _PLAN_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PLAN_NAME");
                OnPLAN_NAMEChanged();
            }
        }
        private global::System.String _PLAN_NAME;
        partial void OnPLAN_NAMEChanging(global::System.String value);
        partial void OnPLAN_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLAN_TYPE
        {
            get
            {
                return _PLAN_TYPE;
            }
            set
            {
                OnPLAN_TYPEChanging(value);
                ReportPropertyChanging("PLAN_TYPE");
                _PLAN_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PLAN_TYPE");
                OnPLAN_TYPEChanged();
            }
        }
        private global::System.String _PLAN_TYPE;
        partial void OnPLAN_TYPEChanging(global::System.String value);
        partial void OnPLAN_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY
        {
            get
            {
                return _COUNTRY;
            }
            set
            {
                OnCOUNTRYChanging(value);
                ReportPropertyChanging("COUNTRY");
                _COUNTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COUNTRY");
                OnCOUNTRYChanged();
            }
        }
        private global::System.String _COUNTRY;
        partial void OnCOUNTRYChanging(global::System.String value);
        partial void OnCOUNTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLAN_VALUE
        {
            get
            {
                return _PLAN_VALUE;
            }
            set
            {
                OnPLAN_VALUEChanging(value);
                ReportPropertyChanging("PLAN_VALUE");
                _PLAN_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PLAN_VALUE");
                OnPLAN_VALUEChanged();
            }
        }
        private global::System.String _PLAN_VALUE;
        partial void OnPLAN_VALUEChanging(global::System.String value);
        partial void OnPLAN_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TALKTIMEDATA
        {
            get
            {
                return _TALKTIMEDATA;
            }
            set
            {
                OnTALKTIMEDATAChanging(value);
                ReportPropertyChanging("TALKTIMEDATA");
                _TALKTIMEDATA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TALKTIMEDATA");
                OnTALKTIMEDATAChanged();
            }
        }
        private global::System.String _TALKTIMEDATA;
        partial void OnTALKTIMEDATAChanging(global::System.String value);
        partial void OnTALKTIMEDATAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BRANCHCODE
        {
            get
            {
                return _BRANCHCODE;
            }
            set
            {
                OnBRANCHCODEChanging(value);
                ReportPropertyChanging("BRANCHCODE");
                _BRANCHCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BRANCHCODE");
                OnBRANCHCODEChanged();
            }
        }
        private global::System.String _BRANCHCODE;
        partial void OnBRANCHCODEChanging(global::System.String value);
        partial void OnBRANCHCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOGINUSER
        {
            get
            {
                return _LOGINUSER;
            }
            set
            {
                OnLOGINUSERChanging(value);
                ReportPropertyChanging("LOGINUSER");
                _LOGINUSER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOGINUSER");
                OnLOGINUSERChanged();
            }
        }
        private global::System.String _LOGINUSER;
        partial void OnLOGINUSERChanging(global::System.String value);
        partial void OnLOGINUSERChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="prefixsetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class prefixsetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new prefixsetting object.
        /// </summary>
        /// <param name="prefixid">Initial value of the prefixid property.</param>
        public static prefixsetting Createprefixsetting(global::System.Int64 prefixid)
        {
            prefixsetting prefixsetting = new prefixsetting();
            prefixsetting.prefixid = prefixid;
            return prefixsetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 prefixid
        {
            get
            {
                return _prefixid;
            }
            set
            {
                if (_prefixid != value)
                {
                    OnprefixidChanging(value);
                    ReportPropertyChanging("prefixid");
                    _prefixid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("prefixid");
                    OnprefixidChanged();
                }
            }
        }
        private global::System.Int64 _prefixid;
        partial void OnprefixidChanging(global::System.Int64 value);
        partial void OnprefixidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prefixtype
        {
            get
            {
                return _Prefixtype;
            }
            set
            {
                OnPrefixtypeChanging(value);
                ReportPropertyChanging("Prefixtype");
                _Prefixtype = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prefixtype");
                OnPrefixtypeChanged();
            }
        }
        private global::System.String _Prefixtype;
        partial void OnPrefixtypeChanging(global::System.String value);
        partial void OnPrefixtypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String formname
        {
            get
            {
                return _formname;
            }
            set
            {
                OnformnameChanging(value);
                ReportPropertyChanging("formname");
                _formname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("formname");
                OnformnameChanged();
            }
        }
        private global::System.String _formname;
        partial void OnformnameChanging(global::System.String value);
        partial void OnformnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prefixnumber
        {
            get
            {
                return _prefixnumber;
            }
            set
            {
                OnprefixnumberChanging(value);
                ReportPropertyChanging("prefixnumber");
                _prefixnumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prefixnumber");
                OnprefixnumberChanged();
            }
        }
        private global::System.String _prefixnumber;
        partial void OnprefixnumberChanging(global::System.String value);
        partial void OnprefixnumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String startwith
        {
            get
            {
                return _startwith;
            }
            set
            {
                OnstartwithChanging(value);
                ReportPropertyChanging("startwith");
                _startwith = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("startwith");
                OnstartwithChanged();
            }
        }
        private global::System.String _startwith;
        partial void OnstartwithChanging(global::System.String value);
        partial void OnstartwithChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status_s
        {
            get
            {
                return _status_s;
            }
            set
            {
                Onstatus_sChanging(value);
                ReportPropertyChanging("status_s");
                _status_s = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status_s");
                Onstatus_sChanged();
            }
        }
        private global::System.String _status_s;
        partial void Onstatus_sChanging(global::System.String value);
        partial void Onstatus_sChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String A
        {
            get
            {
                return _A;
            }
            set
            {
                OnAChanging(value);
                ReportPropertyChanging("A");
                _A = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("A");
                OnAChanged();
            }
        }
        private global::System.String _A;
        partial void OnAChanging(global::System.String value);
        partial void OnAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String B
        {
            get
            {
                return _B;
            }
            set
            {
                OnBChanging(value);
                ReportPropertyChanging("B");
                _B = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("B");
                OnBChanged();
            }
        }
        private global::System.String _B;
        partial void OnBChanging(global::System.String value);
        partial void OnBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String C
        {
            get
            {
                return _C;
            }
            set
            {
                OnCChanging(value);
                ReportPropertyChanging("C");
                _C = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("C");
                OnCChanged();
            }
        }
        private global::System.String _C;
        partial void OnCChanging(global::System.String value);
        partial void OnCChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="PROFILE_TABLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PROFILE_TABLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PROFILE_TABLE object.
        /// </summary>
        /// <param name="pROFILE_ID">Initial value of the PROFILE_ID property.</param>
        /// <param name="pROFILE_NAME">Initial value of the PROFILE_NAME property.</param>
        public static PROFILE_TABLE CreatePROFILE_TABLE(global::System.Int64 pROFILE_ID, global::System.String pROFILE_NAME)
        {
            PROFILE_TABLE pROFILE_TABLE = new PROFILE_TABLE();
            pROFILE_TABLE.PROFILE_ID = pROFILE_ID;
            pROFILE_TABLE.PROFILE_NAME = pROFILE_NAME;
            return pROFILE_TABLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PROFILE_ID
        {
            get
            {
                return _PROFILE_ID;
            }
            set
            {
                OnPROFILE_IDChanging(value);
                ReportPropertyChanging("PROFILE_ID");
                _PROFILE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PROFILE_ID");
                OnPROFILE_IDChanged();
            }
        }
        private global::System.Int64 _PROFILE_ID;
        partial void OnPROFILE_IDChanging(global::System.Int64 value);
        partial void OnPROFILE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PROFILE_NAME
        {
            get
            {
                return _PROFILE_NAME;
            }
            set
            {
                if (_PROFILE_NAME != value)
                {
                    OnPROFILE_NAMEChanging(value);
                    ReportPropertyChanging("PROFILE_NAME");
                    _PROFILE_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PROFILE_NAME");
                    OnPROFILE_NAMEChanged();
                }
            }
        }
        private global::System.String _PROFILE_NAME;
        partial void OnPROFILE_NAMEChanging(global::System.String value);
        partial void OnPROFILE_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String A
        {
            get
            {
                return _A;
            }
            set
            {
                OnAChanging(value);
                ReportPropertyChanging("A");
                _A = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("A");
                OnAChanged();
            }
        }
        private global::System.String _A;
        partial void OnAChanging(global::System.String value);
        partial void OnAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String B
        {
            get
            {
                return _B;
            }
            set
            {
                OnBChanging(value);
                ReportPropertyChanging("B");
                _B = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("B");
                OnBChanged();
            }
        }
        private global::System.String _B;
        partial void OnBChanging(global::System.String value);
        partial void OnBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String C
        {
            get
            {
                return _C;
            }
            set
            {
                OnCChanging(value);
                ReportPropertyChanging("C");
                _C = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("C");
                OnCChanged();
            }
        }
        private global::System.String _C;
        partial void OnCChanging(global::System.String value);
        partial void OnCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String D
        {
            get
            {
                return _D;
            }
            set
            {
                OnDChanging(value);
                ReportPropertyChanging("D");
                _D = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("D");
                OnDChanged();
            }
        }
        private global::System.String _D;
        partial void OnDChanging(global::System.String value);
        partial void OnDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String E
        {
            get
            {
                return _E;
            }
            set
            {
                OnEChanging(value);
                ReportPropertyChanging("E");
                _E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("E");
                OnEChanged();
            }
        }
        private global::System.String _E;
        partial void OnEChanging(global::System.String value);
        partial void OnEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String F
        {
            get
            {
                return _F;
            }
            set
            {
                OnFChanging(value);
                ReportPropertyChanging("F");
                _F = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("F");
                OnFChanged();
            }
        }
        private global::System.String _F;
        partial void OnFChanging(global::System.String value);
        partial void OnFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String G
        {
            get
            {
                return _G;
            }
            set
            {
                OnGChanging(value);
                ReportPropertyChanging("G");
                _G = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("G");
                OnGChanged();
            }
        }
        private global::System.String _G;
        partial void OnGChanging(global::System.String value);
        partial void OnGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String H
        {
            get
            {
                return _H;
            }
            set
            {
                OnHChanging(value);
                ReportPropertyChanging("H");
                _H = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("H");
                OnHChanged();
            }
        }
        private global::System.String _H;
        partial void OnHChanging(global::System.String value);
        partial void OnHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BRANCHCODE
        {
            get
            {
                return _BRANCHCODE;
            }
            set
            {
                OnBRANCHCODEChanging(value);
                ReportPropertyChanging("BRANCHCODE");
                _BRANCHCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BRANCHCODE");
                OnBRANCHCODEChanged();
            }
        }
        private global::System.String _BRANCHCODE;
        partial void OnBRANCHCODEChanging(global::System.String value);
        partial void OnBRANCHCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOGINUSERCODE
        {
            get
            {
                return _LOGINUSERCODE;
            }
            set
            {
                OnLOGINUSERCODEChanging(value);
                ReportPropertyChanging("LOGINUSERCODE");
                _LOGINUSERCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOGINUSERCODE");
                OnLOGINUSERCODEChanged();
            }
        }
        private global::System.String _LOGINUSERCODE;
        partial void OnLOGINUSERCODEChanging(global::System.String value);
        partial void OnLOGINUSERCODEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="PurchaseEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseEntry object.
        /// </summary>
        /// <param name="sno">Initial value of the sno property.</param>
        /// <param name="simNo">Initial value of the SimNo property.</param>
        public static PurchaseEntry CreatePurchaseEntry(global::System.Int64 sno, global::System.String simNo)
        {
            PurchaseEntry purchaseEntry = new PurchaseEntry();
            purchaseEntry.sno = sno;
            purchaseEntry.SimNo = simNo;
            return purchaseEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 sno
        {
            get
            {
                return _sno;
            }
            set
            {
                OnsnoChanging(value);
                ReportPropertyChanging("sno");
                _sno = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sno");
                OnsnoChanged();
            }
        }
        private global::System.Int64 _sno;
        partial void OnsnoChanging(global::System.Int64 value);
        partial void OnsnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillNo
        {
            get
            {
                return _BillNo;
            }
            set
            {
                OnBillNoChanging(value);
                ReportPropertyChanging("BillNo");
                _BillNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillNo");
                OnBillNoChanged();
            }
        }
        private global::System.String _BillNo;
        partial void OnBillNoChanging(global::System.String value);
        partial void OnBillNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SimNo
        {
            get
            {
                return _SimNo;
            }
            set
            {
                if (_SimNo != value)
                {
                    OnSimNoChanging(value);
                    ReportPropertyChanging("SimNo");
                    _SimNo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SimNo");
                    OnSimNoChanged();
                }
            }
        }
        private global::System.String _SimNo;
        partial void OnSimNoChanging(global::System.String value);
        partial void OnSimNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IndCallCode
        {
            get
            {
                return _IndCallCode;
            }
            set
            {
                OnIndCallCodeChanging(value);
                ReportPropertyChanging("IndCallCode");
                _IndCallCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IndCallCode");
                OnIndCallCodeChanged();
            }
        }
        private global::System.String _IndCallCode;
        partial void OnIndCallCodeChanging(global::System.String value);
        partial void OnIndCallCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PUK
        {
            get
            {
                return _PUK;
            }
            set
            {
                OnPUKChanging(value);
                ReportPropertyChanging("PUK");
                _PUK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PUK");
                OnPUKChanged();
            }
        }
        private global::System.String _PUK;
        partial void OnPUKChanging(global::System.String value);
        partial void OnPUKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Validity
        {
            get
            {
                return _Validity;
            }
            set
            {
                OnValidityChanging(value);
                ReportPropertyChanging("Validity");
                _Validity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Validity");
                OnValidityChanged();
            }
        }
        private global::System.String _Validity;
        partial void OnValidityChanging(global::System.String value);
        partial void OnValidityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String APN
        {
            get
            {
                return _APN;
            }
            set
            {
                OnAPNChanging(value);
                ReportPropertyChanging("APN");
                _APN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("APN");
                OnAPNChanged();
            }
        }
        private global::System.String _APN;
        partial void OnAPNChanging(global::System.String value);
        partial void OnAPNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String loginusercode
        {
            get
            {
                return _loginusercode;
            }
            set
            {
                OnloginusercodeChanging(value);
                ReportPropertyChanging("loginusercode");
                _loginusercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("loginusercode");
                OnloginusercodeChanged();
            }
        }
        private global::System.String _loginusercode;
        partial void OnloginusercodeChanging(global::System.String value);
        partial void OnloginusercodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimAlotexeccode
        {
            get
            {
                return _SimAlotexeccode;
            }
            set
            {
                OnSimAlotexeccodeChanging(value);
                ReportPropertyChanging("SimAlotexeccode");
                _SimAlotexeccode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimAlotexeccode");
                OnSimAlotexeccodeChanged();
            }
        }
        private global::System.String _SimAlotexeccode;
        partial void OnSimAlotexeccodeChanging(global::System.String value);
        partial void OnSimAlotexeccodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNo
        {
            get
            {
                return _PhoneNo;
            }
            set
            {
                OnPhoneNoChanging(value);
                ReportPropertyChanging("PhoneNo");
                _PhoneNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNo");
                OnPhoneNoChanged();
            }
        }
        private global::System.String _PhoneNo;
        partial void OnPhoneNoChanging(global::System.String value);
        partial void OnPhoneNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String simcode
        {
            get
            {
                return _simcode;
            }
            set
            {
                OnsimcodeChanging(value);
                ReportPropertyChanging("simcode");
                _simcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("simcode");
                OnsimcodeChanged();
            }
        }
        private global::System.String _simcode;
        partial void OnsimcodeChanging(global::System.String value);
        partial void OnsimcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String partnername
        {
            get
            {
                return _partnername;
            }
            set
            {
                OnpartnernameChanging(value);
                ReportPropertyChanging("partnername");
                _partnername = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("partnername");
                OnpartnernameChanged();
            }
        }
        private global::System.String _partnername;
        partial void OnpartnernameChanging(global::System.String value);
        partial void OnpartnernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_challanout_PurchaseEntry", "challanout")]
        public EntityCollection<challanout> challanouts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<challanout>("inventoryforwebappModel.FK_challanout_PurchaseEntry", "challanout");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<challanout>("inventoryforwebappModel.FK_challanout_PurchaseEntry", "challanout", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_PurchaseEntry_CountryList", "CountryList")]
        public CountryList CountryList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_PurchaseEntry_CountryList", "CountryList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_PurchaseEntry_CountryList", "CountryList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryList> CountryListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryList>("inventoryforwebappModel.FK_PurchaseEntry_CountryList", "CountryList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryList>("inventoryforwebappModel.FK_PurchaseEntry_CountryList", "CountryList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_LostSimData_PurchaseEntry", "LostSimData")]
        public LostSimData LostSimData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LostSimData>("inventoryforwebappModel.FK_LostSimData_PurchaseEntry", "LostSimData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LostSimData>("inventoryforwebappModel.FK_LostSimData_PurchaseEntry", "LostSimData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LostSimData> LostSimDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LostSimData>("inventoryforwebappModel.FK_LostSimData_PurchaseEntry", "LostSimData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LostSimData>("inventoryforwebappModel.FK_LostSimData_PurchaseEntry", "LostSimData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="Purchaseentrycounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Purchaseentrycounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Purchaseentrycounter object.
        /// </summary>
        /// <param name="purchaseid">Initial value of the Purchaseid property.</param>
        public static Purchaseentrycounter CreatePurchaseentrycounter(global::System.Int64 purchaseid)
        {
            Purchaseentrycounter purchaseentrycounter = new Purchaseentrycounter();
            purchaseentrycounter.Purchaseid = purchaseid;
            return purchaseentrycounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Purchaseid
        {
            get
            {
                return _Purchaseid;
            }
            set
            {
                if (_Purchaseid != value)
                {
                    OnPurchaseidChanging(value);
                    ReportPropertyChanging("Purchaseid");
                    _Purchaseid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Purchaseid");
                    OnPurchaseidChanged();
                }
            }
        }
        private global::System.Int64 _Purchaseid;
        partial void OnPurchaseidChanging(global::System.Int64 value);
        partial void OnPurchaseidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="Purchaseentryitemcounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Purchaseentryitemcounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Purchaseentryitemcounter object.
        /// </summary>
        /// <param name="purchaseitemid">Initial value of the Purchaseitemid property.</param>
        public static Purchaseentryitemcounter CreatePurchaseentryitemcounter(global::System.Int64 purchaseitemid)
        {
            Purchaseentryitemcounter purchaseentryitemcounter = new Purchaseentryitemcounter();
            purchaseentryitemcounter.Purchaseitemid = purchaseitemid;
            return purchaseentryitemcounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Purchaseitemid
        {
            get
            {
                return _Purchaseitemid;
            }
            set
            {
                if (_Purchaseitemid != value)
                {
                    OnPurchaseitemidChanging(value);
                    ReportPropertyChanging("Purchaseitemid");
                    _Purchaseitemid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Purchaseitemid");
                    OnPurchaseitemidChanged();
                }
            }
        }
        private global::System.Int64 _Purchaseitemid;
        partial void OnPurchaseitemidChanging(global::System.Int64 value);
        partial void OnPurchaseitemidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String billno
        {
            get
            {
                return _billno;
            }
            set
            {
                OnbillnoChanging(value);
                ReportPropertyChanging("billno");
                _billno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("billno");
                OnbillnoChanged();
            }
        }
        private global::System.String _billno;
        partial void OnbillnoChanging(global::System.String value);
        partial void OnbillnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="PurchaseEntryotherstab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseEntryotherstab : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseEntryotherstab object.
        /// </summary>
        /// <param name="sno">Initial value of the sno property.</param>
        /// <param name="loginusercode">Initial value of the loginusercode property.</param>
        /// <param name="simAlotexeccode">Initial value of the SimAlotexeccode property.</param>
        /// <param name="iMEINO">Initial value of the IMEINO property.</param>
        public static PurchaseEntryotherstab CreatePurchaseEntryotherstab(global::System.Int64 sno, global::System.String loginusercode, global::System.String simAlotexeccode, global::System.String iMEINO)
        {
            PurchaseEntryotherstab purchaseEntryotherstab = new PurchaseEntryotherstab();
            purchaseEntryotherstab.sno = sno;
            purchaseEntryotherstab.loginusercode = loginusercode;
            purchaseEntryotherstab.SimAlotexeccode = simAlotexeccode;
            purchaseEntryotherstab.IMEINO = iMEINO;
            return purchaseEntryotherstab;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 sno
        {
            get
            {
                return _sno;
            }
            set
            {
                OnsnoChanging(value);
                ReportPropertyChanging("sno");
                _sno = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sno");
                OnsnoChanged();
            }
        }
        private global::System.Int64 _sno;
        partial void OnsnoChanging(global::System.Int64 value);
        partial void OnsnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillNo
        {
            get
            {
                return _BillNo;
            }
            set
            {
                OnBillNoChanging(value);
                ReportPropertyChanging("BillNo");
                _BillNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillNo");
                OnBillNoChanged();
            }
        }
        private global::System.String _BillNo;
        partial void OnBillNoChanging(global::System.String value);
        partial void OnBillNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemname
        {
            get
            {
                return _itemname;
            }
            set
            {
                OnitemnameChanging(value);
                ReportPropertyChanging("itemname");
                _itemname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itemname");
                OnitemnameChanged();
            }
        }
        private global::System.String _itemname;
        partial void OnitemnameChanging(global::System.String value);
        partial void OnitemnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String loginusercode
        {
            get
            {
                return _loginusercode;
            }
            set
            {
                OnloginusercodeChanging(value);
                ReportPropertyChanging("loginusercode");
                _loginusercode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("loginusercode");
                OnloginusercodeChanged();
            }
        }
        private global::System.String _loginusercode;
        partial void OnloginusercodeChanging(global::System.String value);
        partial void OnloginusercodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SimAlotexeccode
        {
            get
            {
                return _SimAlotexeccode;
            }
            set
            {
                OnSimAlotexeccodeChanging(value);
                ReportPropertyChanging("SimAlotexeccode");
                _SimAlotexeccode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SimAlotexeccode");
                OnSimAlotexeccodeChanged();
            }
        }
        private global::System.String _SimAlotexeccode;
        partial void OnSimAlotexeccodeChanging(global::System.String value);
        partial void OnSimAlotexeccodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IMEINO
        {
            get
            {
                return _IMEINO;
            }
            set
            {
                if (_IMEINO != value)
                {
                    OnIMEINOChanging(value);
                    ReportPropertyChanging("IMEINO");
                    _IMEINO = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IMEINO");
                    OnIMEINOChanged();
                }
            }
        }
        private global::System.String _IMEINO;
        partial void OnIMEINOChanging(global::System.String value);
        partial void OnIMEINOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String partnername
        {
            get
            {
                return _partnername;
            }
            set
            {
                OnpartnernameChanging(value);
                ReportPropertyChanging("partnername");
                _partnername = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("partnername");
                OnpartnernameChanged();
            }
        }
        private global::System.String _partnername;
        partial void OnpartnernameChanging(global::System.String value);
        partial void OnpartnernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> validity
        {
            get
            {
                return _validity;
            }
            set
            {
                OnvalidityChanging(value);
                ReportPropertyChanging("validity");
                _validity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("validity");
                OnvalidityChanged();
            }
        }
        private Nullable<global::System.DateTime> _validity;
        partial void OnvalidityChanging(Nullable<global::System.DateTime> value);
        partial void OnvalidityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_challanoutothers_PurchaseEntryotherstab", "challanoutother")]
        public EntityCollection<challanoutother> challanoutothers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<challanoutother>("inventoryforwebappModel.FK_challanoutothers_PurchaseEntryotherstab", "challanoutother");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<challanoutother>("inventoryforwebappModel.FK_challanoutothers_PurchaseEntryotherstab", "challanoutother", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_ClientMasterothers_PurchaseEntryotherstab", "ClientMasterother")]
        public EntityCollection<ClientMasterother> ClientMasterothers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientMasterother>("inventoryforwebappModel.FK_ClientMasterothers_PurchaseEntryotherstab", "ClientMasterother");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientMasterother>("inventoryforwebappModel.FK_ClientMasterothers_PurchaseEntryotherstab", "ClientMasterother", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="RoleSettings_Tab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleSettings_Tab : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleSettings_Tab object.
        /// </summary>
        /// <param name="rolesettiungid">Initial value of the rolesettiungid property.</param>
        /// <param name="rolesettingname">Initial value of the rolesettingname property.</param>
        public static RoleSettings_Tab CreateRoleSettings_Tab(global::System.Int64 rolesettiungid, global::System.String rolesettingname)
        {
            RoleSettings_Tab roleSettings_Tab = new RoleSettings_Tab();
            roleSettings_Tab.rolesettiungid = rolesettiungid;
            roleSettings_Tab.rolesettingname = rolesettingname;
            return roleSettings_Tab;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 rolesettiungid
        {
            get
            {
                return _rolesettiungid;
            }
            set
            {
                OnrolesettiungidChanging(value);
                ReportPropertyChanging("rolesettiungid");
                _rolesettiungid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rolesettiungid");
                OnrolesettiungidChanged();
            }
        }
        private global::System.Int64 _rolesettiungid;
        partial void OnrolesettiungidChanging(global::System.Int64 value);
        partial void OnrolesettiungidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String rolesettingname
        {
            get
            {
                return _rolesettingname;
            }
            set
            {
                if (_rolesettingname != value)
                {
                    OnrolesettingnameChanging(value);
                    ReportPropertyChanging("rolesettingname");
                    _rolesettingname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("rolesettingname");
                    OnrolesettingnameChanged();
                }
            }
        }
        private global::System.String _rolesettingname;
        partial void OnrolesettingnameChanging(global::System.String value);
        partial void OnrolesettingnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usertype
        {
            get
            {
                return _usertype;
            }
            set
            {
                OnusertypeChanging(value);
                ReportPropertyChanging("usertype");
                _usertype = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usertype");
                OnusertypeChanged();
            }
        }
        private global::System.String _usertype;
        partial void OnusertypeChanging(global::System.String value);
        partial void OnusertypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CMPID
        {
            get
            {
                return _CMPID;
            }
            set
            {
                OnCMPIDChanging(value);
                ReportPropertyChanging("CMPID");
                _CMPID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CMPID");
                OnCMPIDChanged();
            }
        }
        private global::System.String _CMPID;
        partial void OnCMPIDChanging(global::System.String value);
        partial void OnCMPIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String rolesettingcode
        {
            get
            {
                return _rolesettingcode;
            }
            set
            {
                OnrolesettingcodeChanging(value);
                ReportPropertyChanging("rolesettingcode");
                _rolesettingcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("rolesettingcode");
                OnrolesettingcodeChanged();
            }
        }
        private global::System.String _rolesettingcode;
        partial void OnrolesettingcodeChanging(global::System.String value);
        partial void OnrolesettingcodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_Rollsetting_subtab_RoleSettings_Tab", "Rollsetting_subtab")]
        public EntityCollection<Rollsetting_subtab> Rollsetting_subtab
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rollsetting_subtab>("inventoryforwebappModel.FK_Rollsetting_subtab_RoleSettings_Tab", "Rollsetting_subtab");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rollsetting_subtab>("inventoryforwebappModel.FK_Rollsetting_subtab_RoleSettings_Tab", "Rollsetting_subtab", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="Rollsetting_subtab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rollsetting_subtab : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rollsetting_subtab object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="formname">Initial value of the formname property.</param>
        /// <param name="rolsetingname">Initial value of the rolsetingname property.</param>
        public static Rollsetting_subtab CreateRollsetting_subtab(global::System.Int64 id, global::System.String formname, global::System.String rolsetingname)
        {
            Rollsetting_subtab rollsetting_subtab = new Rollsetting_subtab();
            rollsetting_subtab.id = id;
            rollsetting_subtab.formname = formname;
            rollsetting_subtab.rolsetingname = rolsetingname;
            return rollsetting_subtab;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String formname
        {
            get
            {
                return _formname;
            }
            set
            {
                OnformnameChanging(value);
                ReportPropertyChanging("formname");
                _formname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("formname");
                OnformnameChanged();
            }
        }
        private global::System.String _formname;
        partial void OnformnameChanging(global::System.String value);
        partial void OnformnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> view
        {
            get
            {
                return _view;
            }
            set
            {
                OnviewChanging(value);
                ReportPropertyChanging("view");
                _view = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("view");
                OnviewChanged();
            }
        }
        private Nullable<global::System.Boolean> _view;
        partial void OnviewChanging(Nullable<global::System.Boolean> value);
        partial void OnviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> edit
        {
            get
            {
                return _edit;
            }
            set
            {
                OneditChanging(value);
                ReportPropertyChanging("edit");
                _edit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("edit");
                OneditChanged();
            }
        }
        private Nullable<global::System.Boolean> _edit;
        partial void OneditChanging(Nullable<global::System.Boolean> value);
        partial void OneditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String rolsetingname
        {
            get
            {
                return _rolsetingname;
            }
            set
            {
                OnrolsetingnameChanging(value);
                ReportPropertyChanging("rolsetingname");
                _rolsetingname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("rolsetingname");
                OnrolsetingnameChanged();
            }
        }
        private global::System.String _rolsetingname;
        partial void OnrolsetingnameChanging(global::System.String value);
        partial void OnrolsetingnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> insert
        {
            get
            {
                return _insert;
            }
            set
            {
                OninsertChanging(value);
                ReportPropertyChanging("insert");
                _insert = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("insert");
                OninsertChanged();
            }
        }
        private Nullable<global::System.Boolean> _insert;
        partial void OninsertChanging(Nullable<global::System.Boolean> value);
        partial void OninsertChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> all
        {
            get
            {
                return _all;
            }
            set
            {
                OnallChanging(value);
                ReportPropertyChanging("all");
                _all = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("all");
                OnallChanged();
            }
        }
        private Nullable<global::System.Boolean> _all;
        partial void OnallChanging(Nullable<global::System.Boolean> value);
        partial void OnallChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> delete_1
        {
            get
            {
                return _delete_1;
            }
            set
            {
                Ondelete_1Changing(value);
                ReportPropertyChanging("delete_1");
                _delete_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("delete_1");
                Ondelete_1Changed();
            }
        }
        private Nullable<global::System.Boolean> _delete_1;
        partial void Ondelete_1Changing(Nullable<global::System.Boolean> value);
        partial void Ondelete_1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("inventoryforwebappModel", "FK_Rollsetting_subtab_RoleSettings_Tab", "RoleSettings_Tab")]
        public RoleSettings_Tab RoleSettings_Tab
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleSettings_Tab>("inventoryforwebappModel.FK_Rollsetting_subtab_RoleSettings_Tab", "RoleSettings_Tab").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleSettings_Tab>("inventoryforwebappModel.FK_Rollsetting_subtab_RoleSettings_Tab", "RoleSettings_Tab").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoleSettings_Tab> RoleSettings_TabReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleSettings_Tab>("inventoryforwebappModel.FK_Rollsetting_subtab_RoleSettings_Tab", "RoleSettings_Tab");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoleSettings_Tab>("inventoryforwebappModel.FK_Rollsetting_subtab_RoleSettings_Tab", "RoleSettings_Tab", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="simreplacementtab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class simreplacementtab : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new simreplacementtab object.
        /// </summary>
        /// <param name="simriplacementid">Initial value of the simriplacementid property.</param>
        public static simreplacementtab Createsimreplacementtab(global::System.Int64 simriplacementid)
        {
            simreplacementtab simreplacementtab = new simreplacementtab();
            simreplacementtab.simriplacementid = simriplacementid;
            return simreplacementtab;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 simriplacementid
        {
            get
            {
                return _simriplacementid;
            }
            set
            {
                if (_simriplacementid != value)
                {
                    OnsimriplacementidChanging(value);
                    ReportPropertyChanging("simriplacementid");
                    _simriplacementid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("simriplacementid");
                    OnsimriplacementidChanged();
                }
            }
        }
        private global::System.Int64 _simriplacementid;
        partial void OnsimriplacementidChanging(global::System.Int64 value);
        partial void OnsimriplacementidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTime> _date;
        partial void OndateChanging(Nullable<global::System.DateTime> value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currentsimno
        {
            get
            {
                return _currentsimno;
            }
            set
            {
                OncurrentsimnoChanging(value);
                ReportPropertyChanging("currentsimno");
                _currentsimno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currentsimno");
                OncurrentsimnoChanged();
            }
        }
        private global::System.String _currentsimno;
        partial void OncurrentsimnoChanging(global::System.String value);
        partial void OncurrentsimnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cafno
        {
            get
            {
                return _cafno;
            }
            set
            {
                OncafnoChanging(value);
                ReportPropertyChanging("cafno");
                _cafno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cafno");
                OncafnoChanged();
            }
        }
        private global::System.String _cafno;
        partial void OncafnoChanging(global::System.String value);
        partial void OncafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Aloatnewsimno
        {
            get
            {
                return _Aloatnewsimno;
            }
            set
            {
                OnAloatnewsimnoChanging(value);
                ReportPropertyChanging("Aloatnewsimno");
                _Aloatnewsimno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Aloatnewsimno");
                OnAloatnewsimnoChanged();
            }
        }
        private global::System.String _Aloatnewsimno;
        partial void OnAloatnewsimnoChanging(global::System.String value);
        partial void OnAloatnewsimnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String execcode
        {
            get
            {
                return _execcode;
            }
            set
            {
                OnexeccodeChanging(value);
                ReportPropertyChanging("execcode");
                _execcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("execcode");
                OnexeccodeChanged();
            }
        }
        private global::System.String _execcode;
        partial void OnexeccodeChanging(global::System.String value);
        partial void OnexeccodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="Todolist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Todolist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Todolist object.
        /// </summary>
        /// <param name="todolistid">Initial value of the todolistid property.</param>
        public static Todolist CreateTodolist(global::System.Int64 todolistid)
        {
            Todolist todolist = new Todolist();
            todolist.todolistid = todolistid;
            return todolist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 todolistid
        {
            get
            {
                return _todolistid;
            }
            set
            {
                if (_todolistid != value)
                {
                    OntodolistidChanging(value);
                    ReportPropertyChanging("todolistid");
                    _todolistid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("todolistid");
                    OntodolistidChanged();
                }
            }
        }
        private global::System.Int64 _todolistid;
        partial void OntodolistidChanging(global::System.Int64 value);
        partial void OntodolistidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Alertdate
        {
            get
            {
                return _Alertdate;
            }
            set
            {
                OnAlertdateChanging(value);
                ReportPropertyChanging("Alertdate");
                _Alertdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alertdate");
                OnAlertdateChanged();
            }
        }
        private Nullable<global::System.Int64> _Alertdate;
        partial void OnAlertdateChanging(Nullable<global::System.Int64> value);
        partial void OnAlertdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Alerttime
        {
            get
            {
                return _Alerttime;
            }
            set
            {
                OnAlerttimeChanging(value);
                ReportPropertyChanging("Alerttime");
                _Alerttime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alerttime");
                OnAlerttimeChanged();
            }
        }
        private Nullable<global::System.Int64> _Alerttime;
        partial void OnAlerttimeChanging(Nullable<global::System.Int64> value);
        partial void OnAlerttimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="User_Name")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User_Name : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User_Name object.
        /// </summary>
        /// <param name="userType">Initial value of the UserType property.</param>
        /// <param name="user_Code">Initial value of the User_Code property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User_Name CreateUser_Name(global::System.String userType, global::System.String user_Code, global::System.String userName, global::System.String password)
        {
            User_Name user_Name = new User_Name();
            user_Name.UserType = userType;
            user_Name.User_Code = user_Code;
            user_Name.UserName = userName;
            user_Name.Password = password;
            return user_Name;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTime> _date;
        partial void OndateChanging(Nullable<global::System.DateTime> value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                if (_UserType != value)
                {
                    OnUserTypeChanging(value);
                    ReportPropertyChanging("UserType");
                    _UserType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserType");
                    OnUserTypeChanged();
                }
            }
        }
        private global::System.String _UserType;
        partial void OnUserTypeChanging(global::System.String value);
        partial void OnUserTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Branchcode
        {
            get
            {
                return _Branchcode;
            }
            set
            {
                OnBranchcodeChanging(value);
                ReportPropertyChanging("Branchcode");
                _Branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Branchcode");
                OnBranchcodeChanged();
            }
        }
        private global::System.String _Branchcode;
        partial void OnBranchcodeChanging(global::System.String value);
        partial void OnBranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String partnername
        {
            get
            {
                return _partnername;
            }
            set
            {
                OnpartnernameChanging(value);
                ReportPropertyChanging("partnername");
                _partnername = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("partnername");
                OnpartnernameChanged();
            }
        }
        private global::System.String _partnername;
        partial void OnpartnernameChanging(global::System.String value);
        partial void OnpartnernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String User_Code
        {
            get
            {
                return _User_Code;
            }
            set
            {
                if (_User_Code != value)
                {
                    OnUser_CodeChanging(value);
                    ReportPropertyChanging("User_Code");
                    _User_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("User_Code");
                    OnUser_CodeChanged();
                }
            }
        }
        private global::System.String _User_Code;
        partial void OnUser_CodeChanging(global::System.String value);
        partial void OnUser_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                if (_Password != value)
                {
                    OnPasswordChanging(value);
                    ReportPropertyChanging("Password");
                    _Password = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Password");
                    OnPasswordChanged();
                }
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mobileno
        {
            get
            {
                return _mobileno;
            }
            set
            {
                OnmobilenoChanging(value);
                ReportPropertyChanging("mobileno");
                _mobileno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mobileno");
                OnmobilenoChanged();
            }
        }
        private global::System.String _mobileno;
        partial void OnmobilenoChanging(global::System.String value);
        partial void OnmobilenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emailid
        {
            get
            {
                return _emailid;
            }
            set
            {
                OnemailidChanging(value);
                ReportPropertyChanging("emailid");
                _emailid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("emailid");
                OnemailidChanged();
            }
        }
        private global::System.String _emailid;
        partial void OnemailidChanging(global::System.String value);
        partial void OnemailidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String rolesetting
        {
            get
            {
                return _rolesetting;
            }
            set
            {
                OnrolesettingChanging(value);
                ReportPropertyChanging("rolesetting");
                _rolesetting = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("rolesetting");
                OnrolesettingChanged();
            }
        }
        private global::System.String _rolesetting;
        partial void OnrolesettingChanging(global::System.String value);
        partial void OnrolesettingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String valueassign
        {
            get
            {
                return _valueassign;
            }
            set
            {
                OnvalueassignChanging(value);
                ReportPropertyChanging("valueassign");
                _valueassign = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("valueassign");
                OnvalueassignChanged();
            }
        }
        private global::System.String _valueassign;
        partial void OnvalueassignChanging(global::System.String value);
        partial void OnvalueassignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String updatedata
        {
            get
            {
                return _updatedata;
            }
            set
            {
                OnupdatedataChanging(value);
                ReportPropertyChanging("updatedata");
                _updatedata = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("updatedata");
                OnupdatedataChanged();
            }
        }
        private global::System.String _updatedata;
        partial void OnupdatedataChanging(global::System.String value);
        partial void OnupdatedataChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="userdetailstable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class userdetailstable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new userdetailstable object.
        /// </summary>
        /// <param name="userdetailstableid">Initial value of the userdetailstableid property.</param>
        /// <param name="fkcompid">Initial value of the fkcompid property.</param>
        /// <param name="mobileno">Initial value of the mobileno property.</param>
        public static userdetailstable Createuserdetailstable(global::System.Int64 userdetailstableid, global::System.Int64 fkcompid, global::System.String mobileno)
        {
            userdetailstable userdetailstable = new userdetailstable();
            userdetailstable.userdetailstableid = userdetailstableid;
            userdetailstable.fkcompid = fkcompid;
            userdetailstable.mobileno = mobileno;
            return userdetailstable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 userdetailstableid
        {
            get
            {
                return _userdetailstableid;
            }
            set
            {
                if (_userdetailstableid != value)
                {
                    OnuserdetailstableidChanging(value);
                    ReportPropertyChanging("userdetailstableid");
                    _userdetailstableid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userdetailstableid");
                    OnuserdetailstableidChanged();
                }
            }
        }
        private global::System.Int64 _userdetailstableid;
        partial void OnuserdetailstableidChanging(global::System.Int64 value);
        partial void OnuserdetailstableidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 fkcompid
        {
            get
            {
                return _fkcompid;
            }
            set
            {
                OnfkcompidChanging(value);
                ReportPropertyChanging("fkcompid");
                _fkcompid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fkcompid");
                OnfkcompidChanged();
            }
        }
        private global::System.Int64 _fkcompid;
        partial void OnfkcompidChanging(global::System.Int64 value);
        partial void OnfkcompidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fathersname
        {
            get
            {
                return _fathersname;
            }
            set
            {
                OnfathersnameChanging(value);
                ReportPropertyChanging("fathersname");
                _fathersname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fathersname");
                OnfathersnameChanged();
            }
        }
        private global::System.String _fathersname;
        partial void OnfathersnameChanging(global::System.String value);
        partial void OnfathersnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mobileno
        {
            get
            {
                return _mobileno;
            }
            set
            {
                OnmobilenoChanging(value);
                ReportPropertyChanging("mobileno");
                _mobileno = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("mobileno");
                OnmobilenoChanged();
            }
        }
        private global::System.String _mobileno;
        partial void OnmobilenoChanging(global::System.String value);
        partial void OnmobilenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emailid
        {
            get
            {
                return _emailid;
            }
            set
            {
                OnemailidChanging(value);
                ReportPropertyChanging("emailid");
                _emailid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("emailid");
                OnemailidChanged();
            }
        }
        private global::System.String _emailid;
        partial void OnemailidChanging(global::System.String value);
        partial void OnemailidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="inventoryforwebappModel", Name="vouchertable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vouchertable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vouchertable object.
        /// </summary>
        /// <param name="voucher_id">Initial value of the voucher_id property.</param>
        /// <param name="sno">Initial value of the Sno property.</param>
        public static vouchertable Createvouchertable(global::System.Int64 voucher_id, global::System.Int32 sno)
        {
            vouchertable vouchertable = new vouchertable();
            vouchertable.voucher_id = voucher_id;
            vouchertable.Sno = sno;
            return vouchertable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 voucher_id
        {
            get
            {
                return _voucher_id;
            }
            set
            {
                if (_voucher_id != value)
                {
                    Onvoucher_idChanging(value);
                    ReportPropertyChanging("voucher_id");
                    _voucher_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("voucher_id");
                    Onvoucher_idChanged();
                }
            }
        }
        private global::System.Int64 _voucher_id;
        partial void Onvoucher_idChanging(global::System.Int64 value);
        partial void Onvoucher_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Voucherno
        {
            get
            {
                return _Voucherno;
            }
            set
            {
                OnVouchernoChanging(value);
                ReportPropertyChanging("Voucherno");
                _Voucherno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Voucherno");
                OnVouchernoChanged();
            }
        }
        private global::System.String _Voucherno;
        partial void OnVouchernoChanging(global::System.String value);
        partial void OnVouchernoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sno
        {
            get
            {
                return _Sno;
            }
            set
            {
                OnSnoChanging(value);
                ReportPropertyChanging("Sno");
                _Sno = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sno");
                OnSnoChanged();
            }
        }
        private global::System.Int32 _Sno;
        partial void OnSnoChanging(global::System.Int32 value);
        partial void OnSnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cafno
        {
            get
            {
                return _cafno;
            }
            set
            {
                OncafnoChanging(value);
                ReportPropertyChanging("cafno");
                _cafno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cafno");
                OncafnoChanged();
            }
        }
        private global::System.String _cafno;
        partial void OncafnoChanging(global::System.String value);
        partial void OncafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Acno
        {
            get
            {
                return _Acno;
            }
            set
            {
                OnAcnoChanging(value);
                ReportPropertyChanging("Acno");
                _Acno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Acno");
                OnAcnoChanged();
            }
        }
        private global::System.String _Acno;
        partial void OnAcnoChanging(global::System.String value);
        partial void OnAcnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String paymentmode
        {
            get
            {
                return _paymentmode;
            }
            set
            {
                OnpaymentmodeChanging(value);
                ReportPropertyChanging("paymentmode");
                _paymentmode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("paymentmode");
                OnpaymentmodeChanged();
            }
        }
        private global::System.String _paymentmode;
        partial void OnpaymentmodeChanging(global::System.String value);
        partial void OnpaymentmodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Chequeno
        {
            get
            {
                return _Chequeno;
            }
            set
            {
                OnChequenoChanging(value);
                ReportPropertyChanging("Chequeno");
                _Chequeno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Chequeno");
                OnChequenoChanged();
            }
        }
        private global::System.String _Chequeno;
        partial void OnChequenoChanging(global::System.String value);
        partial void OnChequenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                OnBankChanging(value);
                ReportPropertyChanging("Bank");
                _Bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bank");
                OnBankChanged();
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> netbalance
        {
            get
            {
                return _netbalance;
            }
            set
            {
                OnnetbalanceChanging(value);
                ReportPropertyChanging("netbalance");
                _netbalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("netbalance");
                OnnetbalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _netbalance;
        partial void OnnetbalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnnetbalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String executivecode
        {
            get
            {
                return _executivecode;
            }
            set
            {
                OnexecutivecodeChanging(value);
                ReportPropertyChanging("executivecode");
                _executivecode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("executivecode");
                OnexecutivecodeChanged();
            }
        }
        private global::System.String _executivecode;
        partial void OnexecutivecodeChanging(global::System.String value);
        partial void OnexecutivecodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="live_stockreport_proc_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class live_stockreport_proc_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PUR
        {
            get
            {
                return _PUR;
            }
            set
            {
                OnPURChanging(value);
                ReportPropertyChanging("PUR");
                _PUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PUR");
                OnPURChanged();
            }
        }
        private Nullable<global::System.Int32> _PUR;
        partial void OnPURChanging(Nullable<global::System.Int32> value);
        partial void OnPURChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EXE
        {
            get
            {
                return _EXE;
            }
            set
            {
                OnEXEChanging(value);
                ReportPropertyChanging("EXE");
                _EXE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EXE");
                OnEXEChanged();
            }
        }
        private Nullable<global::System.Int32> _EXE;
        partial void OnEXEChanging(Nullable<global::System.Int32> value);
        partial void OnEXEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CLI
        {
            get
            {
                return _CLI;
            }
            set
            {
                OnCLIChanging(value);
                ReportPropertyChanging("CLI");
                _CLI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLI");
                OnCLIChanged();
            }
        }
        private Nullable<global::System.Int32> _CLI;
        partial void OnCLIChanging(Nullable<global::System.Int32> value);
        partial void OnCLIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> total
        {
            get
            {
                return _total;
            }
            set
            {
                OntotalChanging(value);
                ReportPropertyChanging("total");
                _total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("total");
                OntotalChanged();
            }
        }
        private Nullable<global::System.Int32> _total;
        partial void OntotalChanging(Nullable<global::System.Int32> value);
        partial void OntotalChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="paymentSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class paymentSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new paymentSearch_Result object.
        /// </summary>
        /// <param name="v_CAMOUNT">Initial value of the V_CAMOUNT property.</param>
        /// <param name="v_DAMOUNT">Initial value of the V_DAMOUNT property.</param>
        public static paymentSearch_Result CreatepaymentSearch_Result(global::System.Decimal v_CAMOUNT, global::System.Decimal v_DAMOUNT)
        {
            paymentSearch_Result paymentSearch_Result = new paymentSearch_Result();
            paymentSearch_Result.V_CAMOUNT = v_CAMOUNT;
            paymentSearch_Result.V_DAMOUNT = v_DAMOUNT;
            return paymentSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Voucher_no
        {
            get
            {
                return _Voucher_no;
            }
            set
            {
                OnVoucher_noChanging(value);
                ReportPropertyChanging("Voucher_no");
                _Voucher_no = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Voucher_no");
                OnVoucher_noChanged();
            }
        }
        private global::System.String _Voucher_no;
        partial void OnVoucher_noChanging(global::System.String value);
        partial void OnVoucher_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> V_NETVALUE
        {
            get
            {
                return _V_NETVALUE;
            }
            set
            {
                OnV_NETVALUEChanging(value);
                ReportPropertyChanging("V_NETVALUE");
                _V_NETVALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_NETVALUE");
                OnV_NETVALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _V_NETVALUE;
        partial void OnV_NETVALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnV_NETVALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Voucher_date
        {
            get
            {
                return _Voucher_date;
            }
            set
            {
                OnVoucher_dateChanging(value);
                ReportPropertyChanging("Voucher_date");
                _Voucher_date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Voucher_date");
                OnVoucher_dateChanged();
            }
        }
        private global::System.String _Voucher_date;
        partial void OnVoucher_dateChanging(global::System.String value);
        partial void OnVoucher_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String voucher_cafno
        {
            get
            {
                return _voucher_cafno;
            }
            set
            {
                Onvoucher_cafnoChanging(value);
                ReportPropertyChanging("voucher_cafno");
                _voucher_cafno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("voucher_cafno");
                Onvoucher_cafnoChanged();
            }
        }
        private global::System.String _voucher_cafno;
        partial void Onvoucher_cafnoChanging(global::System.String value);
        partial void Onvoucher_cafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal V_CAMOUNT
        {
            get
            {
                return _V_CAMOUNT;
            }
            set
            {
                OnV_CAMOUNTChanging(value);
                ReportPropertyChanging("V_CAMOUNT");
                _V_CAMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_CAMOUNT");
                OnV_CAMOUNTChanged();
            }
        }
        private global::System.Decimal _V_CAMOUNT;
        partial void OnV_CAMOUNTChanging(global::System.Decimal value);
        partial void OnV_CAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal V_DAMOUNT
        {
            get
            {
                return _V_DAMOUNT;
            }
            set
            {
                OnV_DAMOUNTChanging(value);
                ReportPropertyChanging("V_DAMOUNT");
                _V_DAMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DAMOUNT");
                OnV_DAMOUNTChanged();
            }
        }
        private global::System.Decimal _V_DAMOUNT;
        partial void OnV_DAMOUNTChanging(global::System.Decimal value);
        partial void OnV_DAMOUNTChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="paymentSearch_Result1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class paymentSearch_Result1 : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new paymentSearch_Result1 object.
        /// </summary>
        /// <param name="v_CAMOUNT">Initial value of the V_CAMOUNT property.</param>
        /// <param name="v_DAMOUNT">Initial value of the V_DAMOUNT property.</param>
        public static paymentSearch_Result1 CreatepaymentSearch_Result1(global::System.Decimal v_CAMOUNT, global::System.Decimal v_DAMOUNT)
        {
            paymentSearch_Result1 paymentSearch_Result1 = new paymentSearch_Result1();
            paymentSearch_Result1.V_CAMOUNT = v_CAMOUNT;
            paymentSearch_Result1.V_DAMOUNT = v_DAMOUNT;
            return paymentSearch_Result1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Voucher_date
        {
            get
            {
                return _Voucher_date;
            }
            set
            {
                OnVoucher_dateChanging(value);
                ReportPropertyChanging("Voucher_date");
                _Voucher_date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Voucher_date");
                OnVoucher_dateChanged();
            }
        }
        private global::System.String _Voucher_date;
        partial void OnVoucher_dateChanging(global::System.String value);
        partial void OnVoucher_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String voucher_cafno
        {
            get
            {
                return _voucher_cafno;
            }
            set
            {
                Onvoucher_cafnoChanging(value);
                ReportPropertyChanging("voucher_cafno");
                _voucher_cafno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("voucher_cafno");
                Onvoucher_cafnoChanged();
            }
        }
        private global::System.String _voucher_cafno;
        partial void Onvoucher_cafnoChanging(global::System.String value);
        partial void Onvoucher_cafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Voucher_no
        {
            get
            {
                return _Voucher_no;
            }
            set
            {
                OnVoucher_noChanging(value);
                ReportPropertyChanging("Voucher_no");
                _Voucher_no = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Voucher_no");
                OnVoucher_noChanged();
            }
        }
        private global::System.String _Voucher_no;
        partial void OnVoucher_noChanging(global::System.String value);
        partial void OnVoucher_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal V_CAMOUNT
        {
            get
            {
                return _V_CAMOUNT;
            }
            set
            {
                OnV_CAMOUNTChanging(value);
                ReportPropertyChanging("V_CAMOUNT");
                _V_CAMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_CAMOUNT");
                OnV_CAMOUNTChanged();
            }
        }
        private global::System.Decimal _V_CAMOUNT;
        partial void OnV_CAMOUNTChanging(global::System.Decimal value);
        partial void OnV_CAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal V_DAMOUNT
        {
            get
            {
                return _V_DAMOUNT;
            }
            set
            {
                OnV_DAMOUNTChanging(value);
                ReportPropertyChanging("V_DAMOUNT");
                _V_DAMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DAMOUNT");
                OnV_DAMOUNTChanged();
            }
        }
        private global::System.Decimal _V_DAMOUNT;
        partial void OnV_DAMOUNTChanging(global::System.Decimal value);
        partial void OnV_DAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> V_NETVALUE
        {
            get
            {
                return _V_NETVALUE;
            }
            set
            {
                OnV_NETVALUEChanging(value);
                ReportPropertyChanging("V_NETVALUE");
                _V_NETVALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_NETVALUE");
                OnV_NETVALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _V_NETVALUE;
        partial void OnV_NETVALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnV_NETVALUEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="Paymentsheet_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Paymentsheet_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Paymentsheet_Result object.
        /// </summary>
        /// <param name="r_AMOUNT">Initial value of the R_AMOUNT property.</param>
        /// <param name="p_AMOUNT">Initial value of the P_AMOUNT property.</param>
        public static Paymentsheet_Result CreatePaymentsheet_Result(global::System.Decimal r_AMOUNT, global::System.Decimal p_AMOUNT)
        {
            Paymentsheet_Result paymentsheet_Result = new Paymentsheet_Result();
            paymentsheet_Result.R_AMOUNT = r_AMOUNT;
            paymentsheet_Result.P_AMOUNT = p_AMOUNT;
            return paymentsheet_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACCOUNTNO
        {
            get
            {
                return _ACCOUNTNO;
            }
            set
            {
                OnACCOUNTNOChanging(value);
                ReportPropertyChanging("ACCOUNTNO");
                _ACCOUNTNO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACCOUNTNO");
                OnACCOUNTNOChanged();
            }
        }
        private global::System.String _ACCOUNTNO;
        partial void OnACCOUNTNOChanging(global::System.String value);
        partial void OnACCOUNTNOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal R_AMOUNT
        {
            get
            {
                return _R_AMOUNT;
            }
            set
            {
                OnR_AMOUNTChanging(value);
                ReportPropertyChanging("R_AMOUNT");
                _R_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("R_AMOUNT");
                OnR_AMOUNTChanged();
            }
        }
        private global::System.Decimal _R_AMOUNT;
        partial void OnR_AMOUNTChanging(global::System.Decimal value);
        partial void OnR_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal P_AMOUNT
        {
            get
            {
                return _P_AMOUNT;
            }
            set
            {
                OnP_AMOUNTChanging(value);
                ReportPropertyChanging("P_AMOUNT");
                _P_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("P_AMOUNT");
                OnP_AMOUNTChanged();
            }
        }
        private global::System.Decimal _P_AMOUNT;
        partial void OnP_AMOUNTChanging(global::System.Decimal value);
        partial void OnP_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NETVALUE
        {
            get
            {
                return _NETVALUE;
            }
            set
            {
                OnNETVALUEChanging(value);
                ReportPropertyChanging("NETVALUE");
                _NETVALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NETVALUE");
                OnNETVALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _NETVALUE;
        partial void OnNETVALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnNETVALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="rolesettings_proc_insert_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class rolesettings_proc_insert_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new rolesettings_proc_insert_Result object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="formname">Initial value of the formname property.</param>
        /// <param name="rolsetingname">Initial value of the rolsetingname property.</param>
        public static rolesettings_proc_insert_Result Createrolesettings_proc_insert_Result(global::System.Int64 id, global::System.String formname, global::System.String rolsetingname)
        {
            rolesettings_proc_insert_Result rolesettings_proc_insert_Result = new rolesettings_proc_insert_Result();
            rolesettings_proc_insert_Result.id = id;
            rolesettings_proc_insert_Result.formname = formname;
            rolesettings_proc_insert_Result.rolsetingname = rolsetingname;
            return rolesettings_proc_insert_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String formname
        {
            get
            {
                return _formname;
            }
            set
            {
                OnformnameChanging(value);
                ReportPropertyChanging("formname");
                _formname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("formname");
                OnformnameChanged();
            }
        }
        private global::System.String _formname;
        partial void OnformnameChanging(global::System.String value);
        partial void OnformnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> view
        {
            get
            {
                return _view;
            }
            set
            {
                OnviewChanging(value);
                ReportPropertyChanging("view");
                _view = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("view");
                OnviewChanged();
            }
        }
        private Nullable<global::System.Boolean> _view;
        partial void OnviewChanging(Nullable<global::System.Boolean> value);
        partial void OnviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> edit
        {
            get
            {
                return _edit;
            }
            set
            {
                OneditChanging(value);
                ReportPropertyChanging("edit");
                _edit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("edit");
                OneditChanged();
            }
        }
        private Nullable<global::System.Boolean> _edit;
        partial void OneditChanging(Nullable<global::System.Boolean> value);
        partial void OneditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String rolsetingname
        {
            get
            {
                return _rolsetingname;
            }
            set
            {
                OnrolsetingnameChanging(value);
                ReportPropertyChanging("rolsetingname");
                _rolsetingname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("rolsetingname");
                OnrolsetingnameChanged();
            }
        }
        private global::System.String _rolsetingname;
        partial void OnrolsetingnameChanging(global::System.String value);
        partial void OnrolsetingnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usercode
        {
            get
            {
                return _usercode;
            }
            set
            {
                OnusercodeChanging(value);
                ReportPropertyChanging("usercode");
                _usercode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usercode");
                OnusercodeChanged();
            }
        }
        private global::System.String _usercode;
        partial void OnusercodeChanging(global::System.String value);
        partial void OnusercodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> insert
        {
            get
            {
                return _insert;
            }
            set
            {
                OninsertChanging(value);
                ReportPropertyChanging("insert");
                _insert = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("insert");
                OninsertChanged();
            }
        }
        private Nullable<global::System.Boolean> _insert;
        partial void OninsertChanging(Nullable<global::System.Boolean> value);
        partial void OninsertChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> all
        {
            get
            {
                return _all;
            }
            set
            {
                OnallChanging(value);
                ReportPropertyChanging("all");
                _all = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("all");
                OnallChanged();
            }
        }
        private Nullable<global::System.Boolean> _all;
        partial void OnallChanging(Nullable<global::System.Boolean> value);
        partial void OnallChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> delete_1
        {
            get
            {
                return _delete_1;
            }
            set
            {
                Ondelete_1Changing(value);
                ReportPropertyChanging("delete_1");
                _delete_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("delete_1");
                Ondelete_1Changed();
            }
        }
        private Nullable<global::System.Boolean> _delete_1;
        partial void Ondelete_1Changing(Nullable<global::System.Boolean> value);
        partial void Ondelete_1Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="SENDMAIL_PROC_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SENDMAIL_PROC_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACCOUNTNO
        {
            get
            {
                return _ACCOUNTNO;
            }
            set
            {
                OnACCOUNTNOChanging(value);
                ReportPropertyChanging("ACCOUNTNO");
                _ACCOUNTNO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACCOUNTNO");
                OnACCOUNTNOChanged();
            }
        }
        private global::System.String _ACCOUNTNO;
        partial void OnACCOUNTNOChanging(global::System.String value);
        partial void OnACCOUNTNOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAILID
        {
            get
            {
                return _EMAILID;
            }
            set
            {
                OnEMAILIDChanging(value);
                ReportPropertyChanging("EMAILID");
                _EMAILID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAILID");
                OnEMAILIDChanged();
            }
        }
        private global::System.String _EMAILID;
        partial void OnEMAILIDChanging(global::System.String value);
        partial void OnEMAILIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUBJECT
        {
            get
            {
                return _SUBJECT;
            }
            set
            {
                OnSUBJECTChanging(value);
                ReportPropertyChanging("SUBJECT");
                _SUBJECT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUBJECT");
                OnSUBJECTChanged();
            }
        }
        private global::System.String _SUBJECT;
        partial void OnSUBJECTChanging(global::System.String value);
        partial void OnSUBJECTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BODY
        {
            get
            {
                return _BODY;
            }
            set
            {
                OnBODYChanging(value);
                ReportPropertyChanging("BODY");
                _BODY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BODY");
                OnBODYChanged();
            }
        }
        private global::System.String _BODY;
        partial void OnBODYChanging(global::System.String value);
        partial void OnBODYChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="simsearch_Proc_SimSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class simsearch_Proc_SimSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new simsearch_Proc_SimSearch_Result object.
        /// </summary>
        /// <param name="others">Initial value of the others property.</param>
        public static simsearch_Proc_SimSearch_Result Createsimsearch_Proc_SimSearch_Result(global::System.String others)
        {
            simsearch_Proc_SimSearch_Result simsearch_Proc_SimSearch_Result = new simsearch_Proc_SimSearch_Result();
            simsearch_Proc_SimSearch_Result.others = others;
            return simsearch_Proc_SimSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String others
        {
            get
            {
                return _others;
            }
            set
            {
                OnothersChanging(value);
                ReportPropertyChanging("others");
                _others = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("others");
                OnothersChanged();
            }
        }
        private global::System.String _others;
        partial void OnothersChanging(global::System.String value);
        partial void OnothersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Validity
        {
            get
            {
                return _Validity;
            }
            set
            {
                OnValidityChanging(value);
                ReportPropertyChanging("Validity");
                _Validity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Validity");
                OnValidityChanged();
            }
        }
        private global::System.String _Validity;
        partial void OnValidityChanging(global::System.String value);
        partial void OnValidityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="SimWiseSearch_Data_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SimWiseSearch_Data_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SimWiseSearch_Data_Result object.
        /// </summary>
        /// <param name="sim_No">Initial value of the Sim_No property.</param>
        /// <param name="tName">Initial value of the TName property.</param>
        public static SimWiseSearch_Data_Result CreateSimWiseSearch_Data_Result(global::System.String sim_No, global::System.String tName)
        {
            SimWiseSearch_Data_Result simWiseSearch_Data_Result = new SimWiseSearch_Data_Result();
            simWiseSearch_Data_Result.Sim_No = sim_No;
            simWiseSearch_Data_Result.TName = tName;
            return simWiseSearch_Data_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SimDate
        {
            get
            {
                return _SimDate;
            }
            set
            {
                OnSimDateChanging(value);
                ReportPropertyChanging("SimDate");
                _SimDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SimDate");
                OnSimDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SimDate;
        partial void OnSimDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSimDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sim_No
        {
            get
            {
                return _Sim_No;
            }
            set
            {
                OnSim_NoChanging(value);
                ReportPropertyChanging("Sim_No");
                _Sim_No = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sim_No");
                OnSim_NoChanged();
            }
        }
        private global::System.String _Sim_No;
        partial void OnSim_NoChanging(global::System.String value);
        partial void OnSim_NoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TName
        {
            get
            {
                return _TName;
            }
            set
            {
                OnTNameChanging(value);
                ReportPropertyChanging("TName");
                _TName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TName");
                OnTNameChanged();
            }
        }
        private global::System.String _TName;
        partial void OnTNameChanging(global::System.String value);
        partial void OnTNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginCode
        {
            get
            {
                return _LoginCode;
            }
            set
            {
                OnLoginCodeChanging(value);
                ReportPropertyChanging("LoginCode");
                _LoginCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginCode");
                OnLoginCodeChanged();
            }
        }
        private global::System.String _LoginCode;
        partial void OnLoginCodeChanging(global::System.String value);
        partial void OnLoginCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNo
        {
            get
            {
                return _MobileNo;
            }
            set
            {
                OnMobileNoChanging(value);
                ReportPropertyChanging("MobileNo");
                _MobileNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileNo");
                OnMobileNoChanged();
            }
        }
        private global::System.String _MobileNo;
        partial void OnMobileNoChanging(global::System.String value);
        partial void OnMobileNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PUK
        {
            get
            {
                return _PUK;
            }
            set
            {
                OnPUKChanging(value);
                ReportPropertyChanging("PUK");
                _PUK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PUK");
                OnPUKChanged();
            }
        }
        private global::System.String _PUK;
        partial void OnPUKChanging(global::System.String value);
        partial void OnPUKChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="updatedataval_proc_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class updatedataval_proc_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new updatedataval_proc_Result object.
        /// </summary>
        /// <param name="user_code">Initial value of the user_code property.</param>
        /// <param name="username">Initial value of the username property.</param>
        public static updatedataval_proc_Result Createupdatedataval_proc_Result(global::System.String user_code, global::System.String username)
        {
            updatedataval_proc_Result updatedataval_proc_Result = new updatedataval_proc_Result();
            updatedataval_proc_Result.user_code = user_code;
            updatedataval_proc_Result.username = username;
            return updatedataval_proc_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_code
        {
            get
            {
                return _user_code;
            }
            set
            {
                Onuser_codeChanging(value);
                ReportPropertyChanging("user_code");
                _user_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("user_code");
                Onuser_codeChanged();
            }
        }
        private global::System.String _user_code;
        partial void Onuser_codeChanging(global::System.String value);
        partial void Onuser_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String valueassign
        {
            get
            {
                return _valueassign;
            }
            set
            {
                OnvalueassignChanging(value);
                ReportPropertyChanging("valueassign");
                _valueassign = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("valueassign");
                OnvalueassignChanged();
            }
        }
        private global::System.String _valueassign;
        partial void OnvalueassignChanging(global::System.String value);
        partial void OnvalueassignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fund
        {
            get
            {
                return _Fund;
            }
            set
            {
                OnFundChanging(value);
                ReportPropertyChanging("Fund");
                _Fund = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fund");
                OnFundChanged();
            }
        }
        private global::System.String _Fund;
        partial void OnFundChanging(global::System.String value);
        partial void OnFundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserdFund
        {
            get
            {
                return _UserdFund;
            }
            set
            {
                OnUserdFundChanging(value);
                ReportPropertyChanging("UserdFund");
                _UserdFund = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserdFund");
                OnUserdFundChanged();
            }
        }
        private Nullable<global::System.Int64> _UserdFund;
        partial void OnUserdFundChanging(Nullable<global::System.Int64> value);
        partial void OnUserdFundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String updatedata
        {
            get
            {
                return _updatedata;
            }
            set
            {
                OnupdatedataChanging(value);
                ReportPropertyChanging("updatedata");
                _updatedata = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("updatedata");
                OnupdatedataChanged();
            }
        }
        private global::System.String _updatedata;
        partial void OnupdatedataChanging(global::System.String value);
        partial void OnupdatedataChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="inventoryforwebappModel", Name="vouchertableproc_SaveAndSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class vouchertableproc_SaveAndSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vouchertableproc_SaveAndSearch_Result object.
        /// </summary>
        /// <param name="voucher_id">Initial value of the voucher_id property.</param>
        /// <param name="sno">Initial value of the Sno property.</param>
        public static vouchertableproc_SaveAndSearch_Result Createvouchertableproc_SaveAndSearch_Result(global::System.Int64 voucher_id, global::System.Int32 sno)
        {
            vouchertableproc_SaveAndSearch_Result vouchertableproc_SaveAndSearch_Result = new vouchertableproc_SaveAndSearch_Result();
            vouchertableproc_SaveAndSearch_Result.voucher_id = voucher_id;
            vouchertableproc_SaveAndSearch_Result.Sno = sno;
            return vouchertableproc_SaveAndSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 voucher_id
        {
            get
            {
                return _voucher_id;
            }
            set
            {
                Onvoucher_idChanging(value);
                ReportPropertyChanging("voucher_id");
                _voucher_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("voucher_id");
                Onvoucher_idChanged();
            }
        }
        private global::System.Int64 _voucher_id;
        partial void Onvoucher_idChanging(global::System.Int64 value);
        partial void Onvoucher_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Voucherno
        {
            get
            {
                return _Voucherno;
            }
            set
            {
                OnVouchernoChanging(value);
                ReportPropertyChanging("Voucherno");
                _Voucherno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Voucherno");
                OnVouchernoChanged();
            }
        }
        private global::System.String _Voucherno;
        partial void OnVouchernoChanging(global::System.String value);
        partial void OnVouchernoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sno
        {
            get
            {
                return _Sno;
            }
            set
            {
                OnSnoChanging(value);
                ReportPropertyChanging("Sno");
                _Sno = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sno");
                OnSnoChanged();
            }
        }
        private global::System.Int32 _Sno;
        partial void OnSnoChanging(global::System.Int32 value);
        partial void OnSnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cafno
        {
            get
            {
                return _cafno;
            }
            set
            {
                OncafnoChanging(value);
                ReportPropertyChanging("cafno");
                _cafno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cafno");
                OncafnoChanged();
            }
        }
        private global::System.String _cafno;
        partial void OncafnoChanging(global::System.String value);
        partial void OncafnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Acno
        {
            get
            {
                return _Acno;
            }
            set
            {
                OnAcnoChanging(value);
                ReportPropertyChanging("Acno");
                _Acno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Acno");
                OnAcnoChanged();
            }
        }
        private global::System.String _Acno;
        partial void OnAcnoChanging(global::System.String value);
        partial void OnAcnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String paymentmode
        {
            get
            {
                return _paymentmode;
            }
            set
            {
                OnpaymentmodeChanging(value);
                ReportPropertyChanging("paymentmode");
                _paymentmode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("paymentmode");
                OnpaymentmodeChanged();
            }
        }
        private global::System.String _paymentmode;
        partial void OnpaymentmodeChanging(global::System.String value);
        partial void OnpaymentmodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Chequeno
        {
            get
            {
                return _Chequeno;
            }
            set
            {
                OnChequenoChanging(value);
                ReportPropertyChanging("Chequeno");
                _Chequeno = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Chequeno");
                OnChequenoChanged();
            }
        }
        private global::System.String _Chequeno;
        partial void OnChequenoChanging(global::System.String value);
        partial void OnChequenoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                OnBankChanging(value);
                ReportPropertyChanging("Bank");
                _Bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bank");
                OnBankChanged();
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> netbalance
        {
            get
            {
                return _netbalance;
            }
            set
            {
                OnnetbalanceChanging(value);
                ReportPropertyChanging("netbalance");
                _netbalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("netbalance");
                OnnetbalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _netbalance;
        partial void OnnetbalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnnetbalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String executivecode
        {
            get
            {
                return _executivecode;
            }
            set
            {
                OnexecutivecodeChanging(value);
                ReportPropertyChanging("executivecode");
                _executivecode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("executivecode");
                OnexecutivecodeChanged();
            }
        }
        private global::System.String _executivecode;
        partial void OnexecutivecodeChanging(global::System.String value);
        partial void OnexecutivecodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String branchcode
        {
            get
            {
                return _branchcode;
            }
            set
            {
                OnbranchcodeChanging(value);
                ReportPropertyChanging("branchcode");
                _branchcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("branchcode");
                OnbranchcodeChanged();
            }
        }
        private global::System.String _branchcode;
        partial void OnbranchcodeChanging(global::System.String value);
        partial void OnbranchcodeChanged();

        #endregion

    }

    #endregion

    
}
